// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SHA1ProcessMessageBlock_Loop_loop1_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        context_Message_Block_address0,
        context_Message_Block_ce0,
        context_Message_Block_q0,
        context_Message_Block_address1,
        context_Message_Block_ce1,
        context_Message_Block_q1,
        W_address0,
        W_ce0,
        W_we0,
        W_d0,
        W_q0,
        W_address1,
        W_ce1,
        W_we1,
        W_d1,
        W_q1
);

parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_st5_fsm_4 = 7'b10000;
parameter    ap_ST_st6_fsm_5 = 7'b100000;
parameter    ap_ST_st7_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv7_7D = 7'b1111101;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv7_72 = 7'b1110010;
parameter    ap_const_lv7_70 = 7'b1110000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv7_1 = 7'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [5:0] context_Message_Block_address0;
output   context_Message_Block_ce0;
input  [7:0] context_Message_Block_q0;
output  [5:0] context_Message_Block_address1;
output   context_Message_Block_ce1;
input  [7:0] context_Message_Block_q1;
output  [6:0] W_address0;
output   W_ce0;
output   W_we0;
output  [31:0] W_d0;
input  [31:0] W_q0;
output  [6:0] W_address1;
output   W_ce1;
output   W_we1;
output  [31:0] W_d1;
input  [31:0] W_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] context_Message_Block_address0;
reg context_Message_Block_ce0;
reg[5:0] context_Message_Block_address1;
reg context_Message_Block_ce1;
reg[6:0] W_address0;
reg W_ce0;
reg W_we0;
reg[6:0] W_address1;
reg W_ce1;
reg W_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_25;
reg   [31:0] W_load_reg_351;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_60;
wire   [4:0] t_fu_180_p2;
reg   [4:0] t_reg_356;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_69;
reg   [7:0] reg_372;
wire   [0:0] exitcond5_i_i_fu_174_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_82;
wire   [6:0] t_2_fu_342_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_90;
reg   [6:0] reg_395;
wire   [5:0] tmp_2_i_fu_190_p3;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_103;
wire   [0:0] exitcond4_fu_250_p2;
reg   [31:0] W_load_1_reg_410;
reg   [7:0] reg_415;
reg   [4:0] t_0_i_i_reg_150;
reg    ap_sig_120;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_128;
reg   [6:0] t_1_reg_162;
wire   [63:0] tmp_3_i_fu_198_p1;
wire   [63:0] tmp_8_i_fu_209_p1;
wire   [63:0] tmp_12_i_fu_219_p1;
wire   [63:0] tmp_17_i_fu_229_p1;
wire   [63:0] tmp_6_i_fu_234_p1;
wire   [63:0] tmp_4_fu_262_p1;
wire   [63:0] tmp_6_fu_273_p1;
wire   [63:0] tmp_8_fu_284_p1;
wire   [63:0] tmp_s_fu_295_p1;
wire   [63:0] tmp_11_fu_337_p1;
wire   [3:0] tmp_fu_186_p1;
wire   [5:0] tmp_7_i_fu_203_p2;
wire   [5:0] tmp_11_i_fu_214_p0;
wire   [5:0] tmp_11_i_fu_214_p2;
wire   [5:0] tmp_16_i_fu_224_p0;
wire   [5:0] tmp_16_i_fu_224_p2;
wire   [6:0] tmp_3_fu_256_p2;
wire   [6:0] tmp_5_fu_267_p2;
wire   [6:0] tmp_7_fu_278_p2;
wire   [6:0] tmp_9_fu_289_p2;
wire   [31:0] tmp2_fu_305_p2;
wire   [31:0] tmp1_fu_300_p2;
wire   [31:0] word_assign_fu_310_p2;
wire   [30:0] tmp_1_fu_316_p1;
wire   [0:0] tmp_2_fu_320_p3;
reg   [6:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond4_fu_250_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        reg_372 <= t_2_fu_342_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        reg_372 <= context_Message_Block_q1;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_i_i_fu_174_p2 == 1'b0))) begin
        reg_372 <= tmp_8_i_fu_209_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        reg_395 <= tmp_s_fu_295_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond4_fu_250_p2))) begin
        reg_395 <= tmp_6_fu_273_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_i_i_fu_174_p2 == 1'b0))) begin
        reg_395 <= tmp_2_i_fu_190_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        reg_395 <= tmp_17_i_fu_229_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_i_i_fu_174_p2 == 1'b0))) begin
        reg_415 <= tmp_3_i_fu_198_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        reg_415 <= context_Message_Block_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        reg_415 <= tmp_8_fu_284_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond4_fu_250_p2))) begin
        reg_415 <= tmp_4_fu_262_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        t_0_i_i_reg_150 <= t_reg_356;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_120)) begin
        t_0_i_i_reg_150 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_i_i_fu_174_p2 == 1'b0))) begin
        t_1_reg_162 <= ap_const_lv7_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        t_1_reg_162 <= t_2_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_load_1_reg_410 <= W_q1;
        W_load_reg_351 <= W_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        t_reg_356 <= t_fu_180_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_address0 = tmp_6_i_fu_234_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address0 = tmp_s_fu_295_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address0 = tmp_4_fu_262_p1;
    end else begin
        W_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        W_address1 = tmp_11_fu_337_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address1 = tmp_8_fu_284_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address1 = tmp_6_fu_273_p1;
    end else begin
        W_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        W_ce0 = 1'b1;
    end else begin
        W_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        W_ce1 = 1'b1;
    end else begin
        W_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_we0 = 1'b1;
    end else begin
        W_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        W_we1 = 1'b1;
    end else begin
        W_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond4_fu_250_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond4_fu_250_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_69) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_103) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_60) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_90) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_address0 = tmp_12_i_fu_219_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        context_Message_Block_address0 = tmp_3_i_fu_198_p1;
    end else begin
        context_Message_Block_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_address1 = tmp_17_i_fu_229_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        context_Message_Block_address1 = tmp_8_i_fu_209_p1;
    end else begin
        context_Message_Block_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        context_Message_Block_ce0 = 1'b1;
    end else begin
        context_Message_Block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        context_Message_Block_ce1 = 1'b1;
    end else begin
        context_Message_Block_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_120) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond5_i_i_fu_174_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond4_fu_250_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_d0 = {{{{reg_415}, {reg_372}}, {context_Message_Block_q0}}, {context_Message_Block_q1}};

assign W_d1 = {{tmp_1_fu_316_p1}, {tmp_2_fu_320_p3}};

always @ (*) begin
    ap_sig_103 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_120 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_25 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_60 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_69 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_82 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_90 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

assign exitcond4_fu_250_p2 = ((t_1_reg_162 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign exitcond5_i_i_fu_174_p2 = ((t_0_i_i_reg_150 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign t_2_fu_342_p2 = (ap_const_lv7_1 + t_1_reg_162);

assign t_fu_180_p2 = (t_0_i_i_reg_150 + ap_const_lv5_1);

assign tmp1_fu_300_p2 = (W_load_reg_351 ^ W_q1);

assign tmp2_fu_305_p2 = (W_load_1_reg_410 ^ W_q0);

assign tmp_11_fu_337_p1 = t_1_reg_162;

assign tmp_11_i_fu_214_p0 = reg_395;

assign tmp_11_i_fu_214_p2 = (tmp_11_i_fu_214_p0 | ap_const_lv6_2);

assign tmp_12_i_fu_219_p1 = tmp_11_i_fu_214_p2;

assign tmp_16_i_fu_224_p0 = reg_395;

assign tmp_16_i_fu_224_p2 = (tmp_16_i_fu_224_p0 | ap_const_lv6_3);

assign tmp_17_i_fu_229_p1 = tmp_16_i_fu_224_p2;

assign tmp_1_fu_316_p1 = word_assign_fu_310_p2[30:0];

assign tmp_2_fu_320_p3 = word_assign_fu_310_p2[ap_const_lv32_1F];

assign tmp_2_i_fu_190_p3 = {{tmp_fu_186_p1}, {ap_const_lv2_0}};

assign tmp_3_fu_256_p2 = ($signed(ap_const_lv7_7D) + $signed(t_1_reg_162));

assign tmp_3_i_fu_198_p1 = tmp_2_i_fu_190_p3;

assign tmp_4_fu_262_p1 = tmp_3_fu_256_p2;

assign tmp_5_fu_267_p2 = ($signed(ap_const_lv7_78) + $signed(t_1_reg_162));

assign tmp_6_fu_273_p1 = tmp_5_fu_267_p2;

assign tmp_6_i_fu_234_p1 = t_0_i_i_reg_150;

assign tmp_7_fu_278_p2 = ($signed(ap_const_lv7_72) + $signed(t_1_reg_162));

assign tmp_7_i_fu_203_p2 = (tmp_2_i_fu_190_p3 | ap_const_lv6_1);

assign tmp_8_fu_284_p1 = tmp_7_fu_278_p2;

assign tmp_8_i_fu_209_p1 = tmp_7_i_fu_203_p2;

assign tmp_9_fu_289_p2 = ($signed(ap_const_lv7_70) + $signed(t_1_reg_162));

assign tmp_fu_186_p1 = t_0_i_i_reg_150[3:0];

assign tmp_s_fu_295_p1 = tmp_9_fu_289_p2;

assign word_assign_fu_310_p2 = (tmp2_fu_305_p2 ^ tmp1_fu_300_p2);

endmodule //SHA1ProcessMessageBlock_Loop_loop1_proc
