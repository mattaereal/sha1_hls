-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SHA1ProcessMessageBlock_Block_codeRepl62_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    context_i : IN STD_LOGIC_VECTOR (687 downto 0);
    context_o : OUT STD_LOGIC_VECTOR (687 downto 0);
    context_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of SHA1ProcessMessageBlock_Block_codeRepl62_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_2AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010101111";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv7_72 : STD_LOGIC_VECTOR (6 downto 0) := "1110010";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_5A827999 : STD_LOGIC_VECTOR (31 downto 0) := "01011010100000100111100110011001";
    constant ap_const_lv32_6ED9EBA1 : STD_LOGIC_VECTOR (31 downto 0) := "01101110110110011110101110100001";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv32_8F1BBCDC : STD_LOGIC_VECTOR (31 downto 0) := "10001111000110111011110011011100";
    constant ap_const_lv32_CA62C1D6 : STD_LOGIC_VECTOR (31 downto 0) := "11001010011000101100000111010110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_32 : BOOLEAN;
    signal context_read_reg_1660 : STD_LOGIC_VECTOR (687 downto 0);
    signal ap_sig_47 : BOOLEAN;
    signal t_fu_541_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_reg_1678 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_57 : BOOLEAN;
    signal tmp_72_fu_679_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_reg_1683 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond5_i_i_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_800_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_89_reg_1688 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_106_fu_921_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_106_reg_1693 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_123_fu_1042_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_123_reg_1698 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_78 : BOOLEAN;
    signal exitcond4_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal A_fu_1088_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_reg_1716 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_reg_1722 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_reg_1728 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_reg_1734 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_reg_1740 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_load_reg_1746 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_104 : BOOLEAN;
    signal W_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_load_1_reg_1751 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_6_fu_1191_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_119 : BOOLEAN;
    signal t_7_fu_1203_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_7_reg_1774 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_128 : BOOLEAN;
    signal exitcond3_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_fu_1278_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_142 : BOOLEAN;
    signal C_1_fu_1298_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_153 : BOOLEAN;
    signal exitcond2_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_8_fu_1317_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_8_reg_1802 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_1_fu_1375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_167 : BOOLEAN;
    signal C_2_fu_1395_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_178 : BOOLEAN;
    signal exitcond1_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_9_fu_1414_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_9_reg_1825 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_2_fu_1484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_192 : BOOLEAN;
    signal C_3_fu_1504_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_1546_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_1843 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_203 : BOOLEAN;
    signal exitcond_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_fu_1563_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_reg_1853 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_4_fu_1583_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_4_reg_1858 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_10_fu_1591_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_10_reg_1863 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_3_fu_1655_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_223 : BOOLEAN;
    signal W_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ce0 : STD_LOGIC;
    signal W_we0 : STD_LOGIC;
    signal W_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ce1 : STD_LOGIC;
    signal W_we1 : STD_LOGIC;
    signal W_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_0_i_i_reg_242 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_246 : BOOLEAN;
    signal t_1_reg_254 : STD_LOGIC_VECTOR (6 downto 0);
    signal E_4_reg_266 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_1_reg_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal B1_reg_287 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_2_reg_308 : STD_LOGIC_VECTOR (4 downto 0);
    signal E1_reg_319 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_2_reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_5_reg_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_reg_353 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_3_reg_376 : STD_LOGIC_VECTOR (5 downto 0);
    signal E_1_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_3_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_6_reg_399 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_reg_433 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_reg_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_4_reg_445 : STD_LOGIC_VECTOR (5 downto 0);
    signal E_2_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_4_reg_479 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_7_reg_468 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_reg_501 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_reg_491 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_5_reg_513 : STD_LOGIC_VECTOR (6 downto 0);
    signal E_3_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_i_fu_1046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1072_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1083_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_1312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_fu_1409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_fu_1552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_547_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_568_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_576_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_588_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_592_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_605_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_fu_617_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_fu_596_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_new_fu_559_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_29_fu_611_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_39_fu_623_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_46_fu_639_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_fu_647_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_44_fu_631_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_62_fu_653_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_67_fu_657_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_69_fu_661_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_70_fu_667_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_71_fu_673_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_2_fu_551_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_683_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_689_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_697_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_fu_709_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_75_fu_713_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_73_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_726_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_79_fu_738_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_76_fu_717_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_78_fu_732_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_80_fu_744_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_82_fu_760_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_83_fu_768_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_81_fu_752_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_84_fu_774_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_85_fu_778_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_86_fu_782_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_87_fu_788_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_88_fu_794_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_8_fu_804_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_810_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_818_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_91_fu_830_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_92_fu_834_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_90_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_847_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_96_fu_859_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_93_fu_838_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_95_fu_853_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_97_fu_865_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_99_fu_881_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_100_fu_889_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_98_fu_873_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_101_fu_895_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_102_fu_899_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_103_fu_903_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_104_fu_909_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_105_fu_915_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_13_fu_925_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_931_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_15_fu_939_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_fu_951_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_109_fu_955_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_107_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_fu_968_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_113_fu_980_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_110_fu_959_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_112_fu_974_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_114_fu_986_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_116_fu_1002_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_117_fu_1010_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_115_fu_994_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_118_fu_1016_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_119_fu_1020_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_120_fu_1024_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_121_fu_1030_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_122_fu_1036_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_s_fu_1066_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_1077_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_20_fu_1127_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_22_fu_1138_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_fu_1154_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1149_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1159_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_125_fu_1165_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_126_fu_1169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_fu_1214_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_30_fu_1218_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_33_fu_1242_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_1236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1248_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_1254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_1228_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_1272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_1260_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_fu_1284_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_38_fu_1288_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_129_fu_1323_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_40_fu_1327_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp6_fu_1345_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1351_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_1337_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_130_fu_1381_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_fu_1385_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_131_fu_1420_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_47_fu_1424_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_49_fu_1442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1460_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1434_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_132_fu_1490_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_55_fu_1494_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_133_fu_1518_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_63_fu_1522_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp12_fu_1540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1557_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_1532_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_134_fu_1569_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_68_fu_1573_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_60_fu_1617_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_1612_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_1607_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1602_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1597_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_1622_p7 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp13_fu_1650_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);

    component SHA1ProcessMessageBlock_Block_codeRepl62_proc_W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    W_U : component SHA1ProcessMessageBlock_Block_codeRepl62_proc_W
    generic map (
        DataWidth => 32,
        AddressRange => 80,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_address0,
        ce0 => W_ce0,
        we0 => W_we0,
        d0 => W_d0,
        q0 => W_q0,
        address1 => W_address1,
        ce1 => W_ce1,
        we1 => W_we1,
        d1 => W_d1,
        q1 => W_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_fu_1512_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    B1_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                B1_reg_287 <= B_4_reg_297;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_1060_p2)))) then 
                B1_reg_287 <= context_read_reg_1660(63 downto 32);
            end if; 
        end if;
    end process;

    B_1_reg_353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_1197_p2)))) then 
                B_1_reg_353 <= B1_reg_287;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                B_1_reg_353 <= B_5_reg_364;
            end if; 
        end if;
    end process;

    B_2_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond2_fu_1306_p2)))) then 
                B_2_reg_422 <= B_1_reg_353;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                B_2_reg_422 <= B_6_reg_433;
            end if; 
        end if;
    end process;

    B_3_reg_491_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond1_fu_1403_p2)))) then 
                B_3_reg_491 <= B_2_reg_422;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                B_3_reg_491 <= B_7_reg_501;
            end if; 
        end if;
    end process;

    B_4_reg_297_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                B_4_reg_297 <= temp_fu_1278_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_1060_p2)))) then 
                B_4_reg_297 <= A_fu_1088_p1;
            end if; 
        end if;
    end process;

    B_5_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_1197_p2)))) then 
                B_5_reg_364 <= B_4_reg_297;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                B_5_reg_364 <= temp_1_fu_1375_p2;
            end if; 
        end if;
    end process;

    B_6_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond2_fu_1306_p2)))) then 
                B_6_reg_433 <= B_5_reg_364;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                B_6_reg_433 <= temp_2_fu_1484_p2;
            end if; 
        end if;
    end process;

    B_7_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond1_fu_1403_p2)))) then 
                B_7_reg_501 <= B_6_reg_433;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                B_7_reg_501 <= temp_3_fu_1655_p2;
            end if; 
        end if;
    end process;

    D_1_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                D_1_reg_276 <= C_1_fu_1298_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_1060_p2)))) then 
                D_1_reg_276 <= context_read_reg_1660(95 downto 64);
            end if; 
        end if;
    end process;

    D_2_reg_341_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_1197_p2)))) then 
                D_2_reg_341 <= D_1_reg_276;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                D_2_reg_341 <= C_2_fu_1395_p3;
            end if; 
        end if;
    end process;

    D_3_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond2_fu_1306_p2)))) then 
                D_3_reg_410 <= D_2_reg_341;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                D_3_reg_410 <= C_3_fu_1504_p3;
            end if; 
        end if;
    end process;

    D_4_reg_479_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond1_fu_1403_p2)))) then 
                D_4_reg_479 <= D_3_reg_410;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                D_4_reg_479 <= C_4_reg_1858;
            end if; 
        end if;
    end process;

    E1_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                E1_reg_319 <= E_4_reg_266;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_1060_p2)))) then 
                E1_reg_319 <= context_read_reg_1660(159 downto 128);
            end if; 
        end if;
    end process;

    E_1_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_1197_p2)))) then 
                E_1_reg_387 <= E1_reg_319;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                E_1_reg_387 <= E_5_reg_330;
            end if; 
        end if;
    end process;

    E_2_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond2_fu_1306_p2)))) then 
                E_2_reg_456 <= E_1_reg_387;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                E_2_reg_456 <= E_6_reg_399;
            end if; 
        end if;
    end process;

    E_3_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond1_fu_1403_p2)))) then 
                E_3_reg_524 <= E_2_reg_456;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                E_3_reg_524 <= E_7_reg_468;
            end if; 
        end if;
    end process;

    E_4_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                E_4_reg_266 <= D_1_reg_276;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_1060_p2)))) then 
                E_4_reg_266 <= context_read_reg_1660(127 downto 96);
            end if; 
        end if;
    end process;

    E_5_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_1197_p2)))) then 
                E_5_reg_330 <= E_4_reg_266;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                E_5_reg_330 <= D_2_reg_341;
            end if; 
        end if;
    end process;

    E_6_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond2_fu_1306_p2)))) then 
                E_6_reg_399 <= E_5_reg_330;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                E_6_reg_399 <= D_3_reg_410;
            end if; 
        end if;
    end process;

    E_7_reg_468_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond1_fu_1403_p2)))) then 
                E_7_reg_468 <= E_6_reg_399;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                E_7_reg_468 <= D_4_reg_479;
            end if; 
        end if;
    end process;

    t_0_i_i_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                t_0_i_i_reg_242 <= t_reg_1678;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_47))) then 
                t_0_i_i_reg_242 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    t_1_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_i_i_fu_535_p2 = ap_const_lv1_0)))) then 
                t_1_reg_254 <= ap_const_lv7_10;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                t_1_reg_254 <= t_6_fu_1191_p2;
            end if; 
        end if;
    end process;

    t_2_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                t_2_reg_308 <= t_7_reg_1774;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_1060_p2)))) then 
                t_2_reg_308 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    t_3_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_1197_p2)))) then 
                t_3_reg_376 <= ap_const_lv6_14;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                t_3_reg_376 <= t_8_reg_1802;
            end if; 
        end if;
    end process;

    t_4_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond2_fu_1306_p2)))) then 
                t_4_reg_445 <= ap_const_lv6_28;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                t_4_reg_445 <= t_9_reg_1825;
            end if; 
        end if;
    end process;

    t_5_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond1_fu_1403_p2)))) then 
                t_5_reg_513 <= ap_const_lv7_3C;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                t_5_reg_513 <= t_10_reg_1863;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_1060_p2)))) then
                A_reg_1716 <= A_fu_1088_p1;
                B_reg_1722 <= context_read_reg_1660(63 downto 32);
                C_reg_1728 <= context_read_reg_1660(95 downto 64);
                D_reg_1734 <= context_read_reg_1660(127 downto 96);
                E_reg_1740 <= context_read_reg_1660(159 downto 128);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = exitcond_fu_1512_p2))) then
                C_4_reg_1858 <= C_4_fu_1583_p3;
                t_10_reg_1863 <= t_10_fu_1591_p2;
                tmp15_reg_1853 <= tmp15_fu_1563_p2;
                tmp_65_reg_1843 <= tmp_65_fu_1546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                W_load_1_reg_1751 <= W_q1;
                W_load_reg_1746 <= W_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_47))) then
                context_read_reg_1660 <= context_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                t_7_reg_1774 <= t_7_fu_1203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_lv1_0 = exitcond2_fu_1306_p2))) then
                t_8_reg_1802 <= t_8_fu_1317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = exitcond1_fu_1403_p2))) then
                t_9_reg_1825 <= t_9_fu_1414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                t_reg_1678 <= t_fu_541_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_i_i_fu_535_p2 = ap_const_lv1_0))) then
                tmp_106_reg_1693 <= tmp_106_fu_921_p1;
                tmp_123_reg_1698 <= tmp_123_fu_1042_p1;
                tmp_72_reg_1683 <= tmp_72_fu_679_p1;
                tmp_89_reg_1688 <= tmp_89_fu_800_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_47, exitcond5_i_i_fu_535_p2, exitcond4_fu_1060_p2, exitcond3_fu_1197_p2, exitcond2_fu_1306_p2, exitcond1_fu_1403_p2, exitcond_fu_1512_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_47)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond5_i_i_fu_535_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_1060_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_1197_p2))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st9_fsm_8 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_1306_p2))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_1403_p2))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st13_fsm_12 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1512_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    A_fu_1088_p1 <= context_read_reg_1660(32 - 1 downto 0);
    C_1_fu_1298_p3 <= (tmp_128_fu_1284_p1 & tmp_38_fu_1288_p4);
    C_2_fu_1395_p3 <= (tmp_130_fu_1381_p1 & tmp_45_fu_1385_p4);
    C_3_fu_1504_p3 <= (tmp_132_fu_1490_p1 & tmp_55_fu_1494_p4);
    C_4_fu_1583_p3 <= (tmp_134_fu_1569_p1 & tmp_68_fu_1573_p4);

    W_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st3_fsm_2, tmp_4_i_fu_1046_p1, tmp_17_fu_1072_p1, tmp_23_fu_1144_p1, tmp_36_fu_1209_p1, tmp_53_fu_1409_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            W_address0 <= tmp_4_i_fu_1046_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            W_address0 <= tmp_53_fu_1409_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            W_address0 <= tmp_36_fu_1209_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            W_address0 <= tmp_23_fu_1144_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            W_address0 <= tmp_17_fu_1072_p1(7 - 1 downto 0);
        else 
            W_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_address1_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, tmp_19_fu_1083_p1, tmp_21_fu_1133_p1, tmp_28_fu_1186_p1, tmp_43_fu_1312_p1, tmp_66_fu_1552_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            W_address1 <= tmp_28_fu_1186_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            W_address1 <= tmp_66_fu_1552_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            W_address1 <= tmp_43_fu_1312_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            W_address1 <= tmp_21_fu_1133_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            W_address1 <= tmp_19_fu_1083_p1(7 - 1 downto 0);
        else 
            W_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            W_ce0 <= ap_const_logic_1;
        else 
            W_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_ce1_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            W_ce1 <= ap_const_logic_1;
        else 
            W_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    W_d0 <= (((tmp_72_reg_1683 & tmp_89_reg_1688) & tmp_106_reg_1693) & tmp_123_reg_1698);
    W_d1 <= (tmp_125_fu_1165_p1 & tmp_126_fu_1169_p3);

    W_we0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            W_we0 <= ap_const_logic_1;
        else 
            W_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_we1_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            W_we1 <= ap_const_logic_1;
        else 
            W_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st13_fsm_12, exitcond_fu_1512_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_fu_1512_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, exitcond_fu_1512_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_fu_1512_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_104_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_104 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_119_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_119 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_128_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_128 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_142_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_142 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_153_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_153 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_167_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_167 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_178_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_178 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_192_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_192 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_203_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_203 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_223_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_223 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_246_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_246 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_32_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_32 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_47_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_47 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_57_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_57 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_78_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_78 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_167)
    begin
        if (ap_sig_167) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_178)
    begin
        if (ap_sig_178) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_192)
    begin
        if (ap_sig_192) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_203)
    begin
        if (ap_sig_203) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_223)
    begin
        if (ap_sig_223) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_32)
    begin
        if (ap_sig_32) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_57)
    begin
        if (ap_sig_57) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_246)
    begin
        if (ap_sig_246) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_78)
    begin
        if (ap_sig_78) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_104)
    begin
        if (ap_sig_104) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_119)
    begin
        if (ap_sig_119) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_128)
    begin
        if (ap_sig_128) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_142)
    begin
        if (ap_sig_142) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_153)
    begin
        if (ap_sig_153) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    context_o <= (context_read_reg_1660(687 downto 176) & tmp_61_fu_1622_p7);

    context_o_ap_vld_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, exitcond_fu_1512_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_fu_1512_p2)))) then 
            context_o_ap_vld <= ap_const_logic_1;
        else 
            context_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_1403_p2 <= "1" when (t_4_reg_445 = ap_const_lv6_3C) else "0";
    exitcond2_fu_1306_p2 <= "1" when (t_3_reg_376 = ap_const_lv6_28) else "0";
    exitcond3_fu_1197_p2 <= "1" when (t_2_reg_308 = ap_const_lv5_14) else "0";
    exitcond4_fu_1060_p2 <= "1" when (t_1_reg_254 = ap_const_lv7_50) else "0";
    exitcond5_i_i_fu_535_p2 <= "1" when (t_0_i_i_reg_242 = ap_const_lv5_10) else "0";
    exitcond_fu_1512_p2 <= "1" when (t_5_reg_513 = ap_const_lv7_50) else "0";
    p_new_fu_559_p4 <= context_read_reg_1660(687 downto 176);
    t_10_fu_1591_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(t_5_reg_513));
    t_6_fu_1191_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(t_1_reg_254));
    t_7_fu_1203_p2 <= std_logic_vector(unsigned(t_2_reg_308) + unsigned(ap_const_lv5_1));
    t_8_fu_1317_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(t_3_reg_376));
    t_9_fu_1414_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(t_4_reg_445));
    t_fu_541_p2 <= std_logic_vector(unsigned(t_0_i_i_reg_242) + unsigned(ap_const_lv5_1));
    temp_1_fu_1375_p2 <= std_logic_vector(unsigned(tmp8_fu_1369_p2) + unsigned(tmp7_fu_1357_p2));
    temp_2_fu_1484_p2 <= std_logic_vector(unsigned(tmp11_fu_1478_p2) + unsigned(tmp_fu_1466_p2));
    temp_3_fu_1655_p2 <= std_logic_vector(unsigned(tmp15_reg_1853) + unsigned(tmp13_fu_1650_p2));
    temp_fu_1278_p2 <= std_logic_vector(unsigned(tmp4_fu_1272_p2) + unsigned(tmp3_fu_1260_p2));
    tmp10_fu_1472_p2 <= std_logic_vector(unsigned(tmp_48_fu_1434_p3) + unsigned(E_2_reg_456));
    tmp11_fu_1478_p2 <= std_logic_vector(signed(ap_const_lv32_8F1BBCDC) + signed(tmp10_fu_1472_p2));
    tmp12_fu_1540_p2 <= (E_7_reg_468 xor B_3_reg_491);
    tmp13_fu_1650_p2 <= std_logic_vector(unsigned(W_q1) + unsigned(tmp_65_reg_1843));
    tmp14_fu_1557_p2 <= std_logic_vector(signed(ap_const_lv32_CA62C1D6) + signed(E_3_reg_524));
    tmp15_fu_1563_p2 <= std_logic_vector(unsigned(tmp14_fu_1557_p2) + unsigned(tmp_64_fu_1532_p3));
    tmp1_fu_1149_p2 <= (W_load_reg_1746 xor W_q1);
    tmp2_fu_1154_p2 <= (W_load_1_reg_1751 xor W_q0);
    tmp3_fu_1260_p2 <= std_logic_vector(unsigned(W_q0) + unsigned(tmp_35_fu_1254_p2));
    tmp4_fu_1272_p2 <= std_logic_vector(unsigned(tmp5_fu_1266_p2) + unsigned(tmp_31_fu_1228_p3));
    tmp5_fu_1266_p2 <= std_logic_vector(unsigned(ap_const_lv32_5A827999) + unsigned(E1_reg_319));
    tmp6_fu_1345_p2 <= (E_5_reg_330 xor B_1_reg_353);
    tmp7_fu_1357_p2 <= std_logic_vector(unsigned(W_q1) + unsigned(tmp_42_fu_1351_p2));
    tmp8_fu_1369_p2 <= std_logic_vector(unsigned(tmp9_fu_1363_p2) + unsigned(tmp_41_fu_1337_p3));
    tmp9_fu_1363_p2 <= std_logic_vector(unsigned(ap_const_lv32_6ED9EBA1) + unsigned(E_1_reg_387));
    tmp_100_fu_889_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(tmp_97_fu_865_p3));
    tmp_101_fu_895_p1 <= std_logic_vector(resize(unsigned(tmp_99_fu_881_p3),512));
    tmp_102_fu_899_p1 <= std_logic_vector(resize(unsigned(tmp_100_fu_889_p2),512));
    tmp_103_fu_903_p2 <= std_logic_vector(shift_right(unsigned(tmp_98_fu_873_p3),to_integer(unsigned('0' & tmp_101_fu_895_p1(31-1 downto 0)))));
    tmp_104_fu_909_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_1),to_integer(unsigned('0' & tmp_102_fu_899_p1(31-1 downto 0)))));
    tmp_105_fu_915_p2 <= (tmp_103_fu_903_p2 and tmp_104_fu_909_p2);
    tmp_106_fu_921_p1 <= tmp_105_fu_915_p2(8 - 1 downto 0);
    tmp_107_fu_945_p2 <= "1" when (unsigned(tmp_14_fu_931_p3) > unsigned(tmp_15_fu_939_p2)) else "0";
    tmp_108_fu_951_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_931_p3),10));
    tmp_109_fu_955_p1 <= std_logic_vector(resize(unsigned(tmp_15_fu_939_p2),10));
    tmp_10_fu_810_p3 <= (tmp_8_fu_804_p2 & ap_const_lv3_0);
    
    tmp_110_fu_959_p4_proc : process(context_read_reg_1660)
    variable vlo_cpy : STD_LOGIC_VECTOR(688+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(688+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable tmp_110_fu_959_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(688 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(10 - 1 downto 0) := ap_const_lv32_2AF(10 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(10 - 1 downto 0) := ap_const_lv32_B0(10 - 1 downto 0);
        v0_cpy := context_read_reg_1660;
        if (vlo_cpy(10 - 1 downto 0) > vhi_cpy(10 - 1 downto 0)) then
            vhi_cpy(10-1 downto 0) := std_logic_vector(688-1-unsigned(ap_const_lv32_B0(10-1 downto 0)));
            vlo_cpy(10-1 downto 0) := std_logic_vector(688-1-unsigned(ap_const_lv32_2AF(10-1 downto 0)));
            for tmp_110_fu_959_p4_i in 0 to 688-1 loop
                v0_cpy(tmp_110_fu_959_p4_i) := context_read_reg_1660(688-1-tmp_110_fu_959_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(10-1 downto 0)))));

        section := (others=>'0');
        section(10-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(10-1 downto 0)) - unsigned(vlo_cpy(10-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(688-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_110_fu_959_p4 <= resvalue(512-1 downto 0);
    end process;

    tmp_111_fu_968_p2 <= std_logic_vector(unsigned(tmp_108_fu_951_p1) - unsigned(tmp_109_fu_955_p1));
    tmp_112_fu_974_p2 <= (tmp_108_fu_951_p1 xor ap_const_lv10_1FF);
    tmp_113_fu_980_p2 <= std_logic_vector(unsigned(tmp_109_fu_955_p1) - unsigned(tmp_108_fu_951_p1));
    tmp_114_fu_986_p3 <= 
        tmp_111_fu_968_p2 when (tmp_107_fu_945_p2(0) = '1') else 
        tmp_113_fu_980_p2;
    tmp_115_fu_994_p3 <= 
        tmp_110_fu_959_p4 when (tmp_107_fu_945_p2(0) = '1') else 
        p_new_fu_559_p4;
    tmp_116_fu_1002_p3 <= 
        tmp_112_fu_974_p2 when (tmp_107_fu_945_p2(0) = '1') else 
        tmp_108_fu_951_p1;
    tmp_117_fu_1010_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(tmp_114_fu_986_p3));
    tmp_118_fu_1016_p1 <= std_logic_vector(resize(unsigned(tmp_116_fu_1002_p3),512));
    tmp_119_fu_1020_p1 <= std_logic_vector(resize(unsigned(tmp_117_fu_1010_p2),512));
    tmp_11_fu_818_p2 <= (tmp_10_fu_810_p3 or ap_const_lv9_7);
    tmp_120_fu_1024_p2 <= std_logic_vector(shift_right(unsigned(tmp_115_fu_994_p3),to_integer(unsigned('0' & tmp_118_fu_1016_p1(31-1 downto 0)))));
    tmp_121_fu_1030_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_1),to_integer(unsigned('0' & tmp_119_fu_1020_p1(31-1 downto 0)))));
    tmp_122_fu_1036_p2 <= (tmp_120_fu_1024_p2 and tmp_121_fu_1030_p2);
    tmp_123_fu_1042_p1 <= tmp_122_fu_1036_p2(8 - 1 downto 0);
    tmp_125_fu_1165_p1 <= tmp_24_fu_1159_p2(31 - 1 downto 0);
    tmp_126_fu_1169_p3 <= tmp_24_fu_1159_p2(31 downto 31);
    tmp_127_fu_1214_p1 <= B_4_reg_297(27 - 1 downto 0);
    tmp_128_fu_1284_p1 <= B1_reg_287(2 - 1 downto 0);
    tmp_129_fu_1323_p1 <= B_5_reg_364(27 - 1 downto 0);
    tmp_12_fu_588_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_568_p3),10));
    tmp_130_fu_1381_p1 <= B_1_reg_353(2 - 1 downto 0);
    tmp_131_fu_1420_p1 <= B_6_reg_433(27 - 1 downto 0);
    tmp_132_fu_1490_p1 <= B_2_reg_422(2 - 1 downto 0);
    tmp_133_fu_1518_p1 <= B_7_reg_501(27 - 1 downto 0);
    tmp_134_fu_1569_p1 <= B_3_reg_491(2 - 1 downto 0);
    tmp_13_fu_925_p2 <= (tmp_2_fu_551_p3 or ap_const_lv6_3);
    tmp_14_fu_931_p3 <= (tmp_13_fu_925_p2 & ap_const_lv3_0);
    tmp_15_fu_939_p2 <= (tmp_14_fu_931_p3 or ap_const_lv9_7);
    tmp_16_fu_592_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_576_p2),10));
    tmp_17_fu_1072_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_1066_p2),64));
    tmp_18_fu_1077_p2 <= std_logic_vector(signed(ap_const_lv7_78) + signed(t_1_reg_254));
    tmp_19_fu_1083_p1 <= std_logic_vector(resize(unsigned(tmp_18_fu_1077_p2),64));
    tmp_1_fu_697_p2 <= (tmp_9_fu_689_p3 or ap_const_lv9_7);
    tmp_20_fu_1127_p2 <= std_logic_vector(signed(ap_const_lv7_72) + signed(t_1_reg_254));
    tmp_21_fu_1133_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_1127_p2),64));
    tmp_22_fu_1138_p2 <= std_logic_vector(signed(ap_const_lv7_70) + signed(t_1_reg_254));
    tmp_23_fu_1144_p1 <= std_logic_vector(resize(unsigned(tmp_22_fu_1138_p2),64));
    tmp_24_fu_1159_p2 <= (tmp2_fu_1154_p2 xor tmp1_fu_1149_p2);
    
    tmp_25_fu_596_p4_proc : process(context_read_reg_1660)
    variable vlo_cpy : STD_LOGIC_VECTOR(688+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(688+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable tmp_25_fu_596_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(688 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(10 - 1 downto 0) := ap_const_lv32_2AF(10 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(10 - 1 downto 0) := ap_const_lv32_B0(10 - 1 downto 0);
        v0_cpy := context_read_reg_1660;
        if (vlo_cpy(10 - 1 downto 0) > vhi_cpy(10 - 1 downto 0)) then
            vhi_cpy(10-1 downto 0) := std_logic_vector(688-1-unsigned(ap_const_lv32_B0(10-1 downto 0)));
            vlo_cpy(10-1 downto 0) := std_logic_vector(688-1-unsigned(ap_const_lv32_2AF(10-1 downto 0)));
            for tmp_25_fu_596_p4_i in 0 to 688-1 loop
                v0_cpy(tmp_25_fu_596_p4_i) := context_read_reg_1660(688-1-tmp_25_fu_596_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(10-1 downto 0)))));

        section := (others=>'0');
        section(10-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(10-1 downto 0)) - unsigned(vlo_cpy(10-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(688-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_25_fu_596_p4 <= resvalue(512-1 downto 0);
    end process;

    tmp_26_fu_605_p2 <= std_logic_vector(unsigned(tmp_12_fu_588_p1) - unsigned(tmp_16_fu_592_p1));
    tmp_28_fu_1186_p1 <= std_logic_vector(resize(unsigned(t_1_reg_254),64));
    tmp_29_fu_611_p2 <= (tmp_12_fu_588_p1 xor ap_const_lv10_1FF);
    tmp_2_fu_551_p3 <= (tmp_3_fu_547_p1 & ap_const_lv2_0);
    tmp_30_fu_1218_p4 <= B_4_reg_297(31 downto 27);
    tmp_31_fu_1228_p3 <= (tmp_127_fu_1214_p1 & tmp_30_fu_1218_p4);
    tmp_32_fu_1236_p2 <= (B1_reg_287 and D_1_reg_276);
    tmp_33_fu_1242_p2 <= (B1_reg_287 xor ap_const_lv32_FFFFFFFF);
    tmp_34_fu_1248_p2 <= (E_4_reg_266 and tmp_33_fu_1242_p2);
    tmp_35_fu_1254_p2 <= (tmp_32_fu_1236_p2 or tmp_34_fu_1248_p2);
    tmp_36_fu_1209_p1 <= std_logic_vector(resize(unsigned(t_2_reg_308),64));
    tmp_37_fu_617_p2 <= std_logic_vector(unsigned(tmp_16_fu_592_p1) - unsigned(tmp_12_fu_588_p1));
    tmp_38_fu_1288_p4 <= B1_reg_287(31 downto 2);
    tmp_39_fu_623_p3 <= 
        tmp_26_fu_605_p2 when (tmp_6_fu_582_p2(0) = '1') else 
        tmp_37_fu_617_p2;
    tmp_3_fu_547_p1 <= t_0_i_i_reg_242(4 - 1 downto 0);
    tmp_40_fu_1327_p4 <= B_5_reg_364(31 downto 27);
    tmp_41_fu_1337_p3 <= (tmp_129_fu_1323_p1 & tmp_40_fu_1327_p4);
    tmp_42_fu_1351_p2 <= (tmp6_fu_1345_p2 xor D_2_reg_341);
    tmp_43_fu_1312_p1 <= std_logic_vector(resize(unsigned(t_3_reg_376),64));
    tmp_44_fu_631_p3 <= 
        tmp_25_fu_596_p4 when (tmp_6_fu_582_p2(0) = '1') else 
        p_new_fu_559_p4;
    tmp_45_fu_1385_p4 <= B_1_reg_353(31 downto 2);
    tmp_46_fu_639_p3 <= 
        tmp_29_fu_611_p2 when (tmp_6_fu_582_p2(0) = '1') else 
        tmp_12_fu_588_p1;
    tmp_47_fu_1424_p4 <= B_6_reg_433(31 downto 27);
    tmp_48_fu_1434_p3 <= (tmp_131_fu_1420_p1 & tmp_47_fu_1424_p4);
    tmp_49_fu_1442_p2 <= (D_3_reg_410 or E_6_reg_399);
    tmp_4_fu_568_p3 <= (tmp_3_fu_547_p1 & ap_const_lv5_0);
    tmp_4_i_fu_1046_p1 <= std_logic_vector(resize(unsigned(t_0_i_i_reg_242),64));
    tmp_50_fu_1448_p2 <= (B_2_reg_422 and tmp_49_fu_1442_p2);
    tmp_51_fu_1454_p2 <= (D_3_reg_410 and E_6_reg_399);
    tmp_52_fu_1460_p2 <= (tmp_50_fu_1448_p2 or tmp_51_fu_1454_p2);
    tmp_53_fu_1409_p1 <= std_logic_vector(resize(unsigned(t_4_reg_445),64));
    tmp_54_fu_647_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(tmp_39_fu_623_p3));
    tmp_55_fu_1494_p4 <= B_2_reg_422(31 downto 2);
    tmp_56_fu_1597_p2 <= std_logic_vector(unsigned(A_reg_1716) + unsigned(B_7_reg_501));
    tmp_57_fu_1602_p2 <= std_logic_vector(unsigned(B_reg_1722) + unsigned(B_3_reg_491));
    tmp_58_fu_1607_p2 <= std_logic_vector(unsigned(C_reg_1728) + unsigned(D_4_reg_479));
    tmp_59_fu_1612_p2 <= std_logic_vector(unsigned(D_reg_1734) + unsigned(E_7_reg_468));
    tmp_5_fu_576_p2 <= (tmp_4_fu_568_p3 or ap_const_lv9_7);
    tmp_60_fu_1617_p2 <= std_logic_vector(unsigned(E_reg_1740) + unsigned(E_3_reg_524));
    tmp_61_fu_1622_p7 <= (((((ap_const_lv16_0 & tmp_60_fu_1617_p2) & tmp_59_fu_1612_p2) & tmp_58_fu_1607_p2) & tmp_57_fu_1602_p2) & tmp_56_fu_1597_p2);
    tmp_62_fu_653_p1 <= std_logic_vector(resize(unsigned(tmp_46_fu_639_p3),512));
    tmp_63_fu_1522_p4 <= B_7_reg_501(31 downto 27);
    tmp_64_fu_1532_p3 <= (tmp_133_fu_1518_p1 & tmp_63_fu_1522_p4);
    tmp_65_fu_1546_p2 <= (tmp12_fu_1540_p2 xor D_4_reg_479);
    tmp_66_fu_1552_p1 <= std_logic_vector(resize(unsigned(t_5_reg_513),64));
    tmp_67_fu_657_p1 <= std_logic_vector(resize(unsigned(tmp_54_fu_647_p2),512));
    tmp_68_fu_1573_p4 <= B_3_reg_491(31 downto 2);
    tmp_69_fu_661_p2 <= std_logic_vector(shift_right(unsigned(tmp_44_fu_631_p3),to_integer(unsigned('0' & tmp_62_fu_653_p1(31-1 downto 0)))));
    tmp_6_fu_582_p2 <= "1" when (unsigned(tmp_4_fu_568_p3) > unsigned(tmp_5_fu_576_p2)) else "0";
    tmp_70_fu_667_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_1),to_integer(unsigned('0' & tmp_67_fu_657_p1(31-1 downto 0)))));
    tmp_71_fu_673_p2 <= (tmp_69_fu_661_p2 and tmp_70_fu_667_p2);
    tmp_72_fu_679_p1 <= tmp_71_fu_673_p2(8 - 1 downto 0);
    tmp_73_fu_703_p2 <= "1" when (unsigned(tmp_9_fu_689_p3) > unsigned(tmp_1_fu_697_p2)) else "0";
    tmp_74_fu_709_p1 <= std_logic_vector(resize(unsigned(tmp_9_fu_689_p3),10));
    tmp_75_fu_713_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_697_p2),10));
    
    tmp_76_fu_717_p4_proc : process(context_read_reg_1660)
    variable vlo_cpy : STD_LOGIC_VECTOR(688+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(688+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable tmp_76_fu_717_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(688 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(10 - 1 downto 0) := ap_const_lv32_2AF(10 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(10 - 1 downto 0) := ap_const_lv32_B0(10 - 1 downto 0);
        v0_cpy := context_read_reg_1660;
        if (vlo_cpy(10 - 1 downto 0) > vhi_cpy(10 - 1 downto 0)) then
            vhi_cpy(10-1 downto 0) := std_logic_vector(688-1-unsigned(ap_const_lv32_B0(10-1 downto 0)));
            vlo_cpy(10-1 downto 0) := std_logic_vector(688-1-unsigned(ap_const_lv32_2AF(10-1 downto 0)));
            for tmp_76_fu_717_p4_i in 0 to 688-1 loop
                v0_cpy(tmp_76_fu_717_p4_i) := context_read_reg_1660(688-1-tmp_76_fu_717_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(10-1 downto 0)))));

        section := (others=>'0');
        section(10-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(10-1 downto 0)) - unsigned(vlo_cpy(10-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(688-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_76_fu_717_p4 <= resvalue(512-1 downto 0);
    end process;

    tmp_77_fu_726_p2 <= std_logic_vector(unsigned(tmp_74_fu_709_p1) - unsigned(tmp_75_fu_713_p1));
    tmp_78_fu_732_p2 <= (tmp_74_fu_709_p1 xor ap_const_lv10_1FF);
    tmp_79_fu_738_p2 <= std_logic_vector(unsigned(tmp_75_fu_713_p1) - unsigned(tmp_74_fu_709_p1));
    tmp_7_fu_683_p2 <= (tmp_2_fu_551_p3 or ap_const_lv6_1);
    tmp_80_fu_744_p3 <= 
        tmp_77_fu_726_p2 when (tmp_73_fu_703_p2(0) = '1') else 
        tmp_79_fu_738_p2;
    tmp_81_fu_752_p3 <= 
        tmp_76_fu_717_p4 when (tmp_73_fu_703_p2(0) = '1') else 
        p_new_fu_559_p4;
    tmp_82_fu_760_p3 <= 
        tmp_78_fu_732_p2 when (tmp_73_fu_703_p2(0) = '1') else 
        tmp_74_fu_709_p1;
    tmp_83_fu_768_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(tmp_80_fu_744_p3));
    tmp_84_fu_774_p1 <= std_logic_vector(resize(unsigned(tmp_82_fu_760_p3),512));
    tmp_85_fu_778_p1 <= std_logic_vector(resize(unsigned(tmp_83_fu_768_p2),512));
    tmp_86_fu_782_p2 <= std_logic_vector(shift_right(unsigned(tmp_81_fu_752_p3),to_integer(unsigned('0' & tmp_84_fu_774_p1(31-1 downto 0)))));
    tmp_87_fu_788_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_1),to_integer(unsigned('0' & tmp_85_fu_778_p1(31-1 downto 0)))));
    tmp_88_fu_794_p2 <= (tmp_86_fu_782_p2 and tmp_87_fu_788_p2);
    tmp_89_fu_800_p1 <= tmp_88_fu_794_p2(8 - 1 downto 0);
    tmp_8_fu_804_p2 <= (tmp_2_fu_551_p3 or ap_const_lv6_2);
    tmp_90_fu_824_p2 <= "1" when (unsigned(tmp_10_fu_810_p3) > unsigned(tmp_11_fu_818_p2)) else "0";
    tmp_91_fu_830_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_810_p3),10));
    tmp_92_fu_834_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_818_p2),10));
    
    tmp_93_fu_838_p4_proc : process(context_read_reg_1660)
    variable vlo_cpy : STD_LOGIC_VECTOR(688+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(688+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable tmp_93_fu_838_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(688 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(688 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(10 - 1 downto 0) := ap_const_lv32_2AF(10 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(10 - 1 downto 0) := ap_const_lv32_B0(10 - 1 downto 0);
        v0_cpy := context_read_reg_1660;
        if (vlo_cpy(10 - 1 downto 0) > vhi_cpy(10 - 1 downto 0)) then
            vhi_cpy(10-1 downto 0) := std_logic_vector(688-1-unsigned(ap_const_lv32_B0(10-1 downto 0)));
            vlo_cpy(10-1 downto 0) := std_logic_vector(688-1-unsigned(ap_const_lv32_2AF(10-1 downto 0)));
            for tmp_93_fu_838_p4_i in 0 to 688-1 loop
                v0_cpy(tmp_93_fu_838_p4_i) := context_read_reg_1660(688-1-tmp_93_fu_838_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(10-1 downto 0)))));

        section := (others=>'0');
        section(10-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(10-1 downto 0)) - unsigned(vlo_cpy(10-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(688-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_93_fu_838_p4 <= resvalue(512-1 downto 0);
    end process;

    tmp_94_fu_847_p2 <= std_logic_vector(unsigned(tmp_91_fu_830_p1) - unsigned(tmp_92_fu_834_p1));
    tmp_95_fu_853_p2 <= (tmp_91_fu_830_p1 xor ap_const_lv10_1FF);
    tmp_96_fu_859_p2 <= std_logic_vector(unsigned(tmp_92_fu_834_p1) - unsigned(tmp_91_fu_830_p1));
    tmp_97_fu_865_p3 <= 
        tmp_94_fu_847_p2 when (tmp_90_fu_824_p2(0) = '1') else 
        tmp_96_fu_859_p2;
    tmp_98_fu_873_p3 <= 
        tmp_93_fu_838_p4 when (tmp_90_fu_824_p2(0) = '1') else 
        p_new_fu_559_p4;
    tmp_99_fu_881_p3 <= 
        tmp_95_fu_853_p2 when (tmp_90_fu_824_p2(0) = '1') else 
        tmp_91_fu_830_p1;
    tmp_9_fu_689_p3 <= (tmp_7_fu_683_p2 & ap_const_lv3_0);
    tmp_fu_1466_p2 <= std_logic_vector(unsigned(W_q0) + unsigned(tmp_52_fu_1460_p2));
    tmp_s_fu_1066_p2 <= std_logic_vector(signed(ap_const_lv7_7D) + signed(t_1_reg_254));
end behav;
