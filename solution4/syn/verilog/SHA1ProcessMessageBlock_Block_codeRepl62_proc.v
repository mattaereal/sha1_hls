// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SHA1ProcessMessageBlock_Block_codeRepl62_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        context_i,
        context_o,
        context_o_ap_vld
);

parameter    ap_ST_st1_fsm_0 = 14'b1;
parameter    ap_ST_st2_fsm_1 = 14'b10;
parameter    ap_ST_st3_fsm_2 = 14'b100;
parameter    ap_ST_st4_fsm_3 = 14'b1000;
parameter    ap_ST_st5_fsm_4 = 14'b10000;
parameter    ap_ST_st6_fsm_5 = 14'b100000;
parameter    ap_ST_st7_fsm_6 = 14'b1000000;
parameter    ap_ST_st8_fsm_7 = 14'b10000000;
parameter    ap_ST_st9_fsm_8 = 14'b100000000;
parameter    ap_ST_st10_fsm_9 = 14'b1000000000;
parameter    ap_ST_st11_fsm_10 = 14'b10000000000;
parameter    ap_ST_st12_fsm_11 = 14'b100000000000;
parameter    ap_ST_st13_fsm_12 = 14'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 14'b10000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv6_14 = 6'b10100;
parameter    ap_const_lv6_28 = 6'b101000;
parameter    ap_const_lv7_3C = 7'b111100;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_B0 = 32'b10110000;
parameter    ap_const_lv32_2AF = 32'b1010101111;
parameter    ap_const_lv9_7 = 9'b111;
parameter    ap_const_lv10_1FF = 10'b111111111;
parameter    ap_const_lv512_lc_1 = 512'b
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv7_7D = 7'b1111101;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv32_9F = 32'b10011111;
parameter    ap_const_lv7_72 = 7'b1110010;
parameter    ap_const_lv7_70 = 7'b1110000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_5A827999 = 32'b1011010100000100111100110011001;
parameter    ap_const_lv32_6ED9EBA1 = 32'b1101110110110011110101110100001;
parameter    ap_const_lv6_3C = 6'b111100;
parameter    ap_const_lv32_8F1BBCDC = 32'b10001111000110111011110011011100;
parameter    ap_const_lv32_CA62C1D6 = 32'b11001010011000101100000111010110;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_AF = 32'b10101111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [687:0] context_i;
output  [687:0] context_o;
output   context_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg context_o_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_32;
reg   [687:0] context_read_reg_1660;
reg    ap_sig_47;
wire   [4:0] t_fu_541_p2;
reg   [4:0] t_reg_1678;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_57;
wire   [7:0] tmp_72_fu_679_p1;
reg   [7:0] tmp_72_reg_1683;
wire   [0:0] exitcond5_i_i_fu_535_p2;
wire   [7:0] tmp_89_fu_800_p1;
reg   [7:0] tmp_89_reg_1688;
wire   [7:0] tmp_106_fu_921_p1;
reg   [7:0] tmp_106_reg_1693;
wire   [7:0] tmp_123_fu_1042_p1;
reg   [7:0] tmp_123_reg_1698;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_78;
wire   [0:0] exitcond4_fu_1060_p2;
wire   [31:0] A_fu_1088_p1;
reg   [31:0] A_reg_1716;
reg   [31:0] B_reg_1722;
reg   [31:0] C_reg_1728;
reg   [31:0] D_reg_1734;
reg   [31:0] E_reg_1740;
wire   [31:0] W_q0;
reg   [31:0] W_load_reg_1746;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_104;
wire   [31:0] W_q1;
reg   [31:0] W_load_1_reg_1751;
wire   [6:0] t_6_fu_1191_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_119;
wire   [4:0] t_7_fu_1203_p2;
reg   [4:0] t_7_reg_1774;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_128;
wire   [0:0] exitcond3_fu_1197_p2;
wire   [31:0] temp_fu_1278_p2;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_142;
wire   [31:0] C_1_fu_1298_p3;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_153;
wire   [0:0] exitcond2_fu_1306_p2;
wire   [5:0] t_8_fu_1317_p2;
reg   [5:0] t_8_reg_1802;
wire   [31:0] temp_1_fu_1375_p2;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_167;
wire   [31:0] C_2_fu_1395_p3;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_178;
wire   [0:0] exitcond1_fu_1403_p2;
wire   [5:0] t_9_fu_1414_p2;
reg   [5:0] t_9_reg_1825;
wire   [31:0] temp_2_fu_1484_p2;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_192;
wire   [31:0] C_3_fu_1504_p3;
wire   [31:0] tmp_65_fu_1546_p2;
reg   [31:0] tmp_65_reg_1843;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_203;
wire   [0:0] exitcond_fu_1512_p2;
wire   [31:0] tmp15_fu_1563_p2;
reg   [31:0] tmp15_reg_1853;
wire   [31:0] C_4_fu_1583_p3;
reg   [31:0] C_4_reg_1858;
wire   [6:0] t_10_fu_1591_p2;
reg   [6:0] t_10_reg_1863;
wire   [31:0] temp_3_fu_1655_p2;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_223;
reg   [6:0] W_address0;
reg    W_ce0;
reg    W_we0;
wire   [31:0] W_d0;
reg   [6:0] W_address1;
reg    W_ce1;
reg    W_we1;
wire   [31:0] W_d1;
reg   [4:0] t_0_i_i_reg_242;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_246;
reg   [6:0] t_1_reg_254;
reg   [31:0] E_4_reg_266;
reg   [31:0] D_1_reg_276;
reg   [31:0] B1_reg_287;
reg   [31:0] B_4_reg_297;
reg   [4:0] t_2_reg_308;
reg   [31:0] E1_reg_319;
reg   [31:0] D_2_reg_341;
reg   [31:0] E_5_reg_330;
reg   [31:0] B_5_reg_364;
reg   [31:0] B_1_reg_353;
reg   [5:0] t_3_reg_376;
reg   [31:0] E_1_reg_387;
reg   [31:0] D_3_reg_410;
reg   [31:0] E_6_reg_399;
reg   [31:0] B_6_reg_433;
reg   [31:0] B_2_reg_422;
reg   [5:0] t_4_reg_445;
reg   [31:0] E_2_reg_456;
reg   [31:0] D_4_reg_479;
reg   [31:0] E_7_reg_468;
reg   [31:0] B_7_reg_501;
reg   [31:0] B_3_reg_491;
reg   [6:0] t_5_reg_513;
reg   [31:0] E_3_reg_524;
wire   [63:0] tmp_4_i_fu_1046_p1;
wire   [63:0] tmp_17_fu_1072_p1;
wire   [63:0] tmp_19_fu_1083_p1;
wire   [63:0] tmp_21_fu_1133_p1;
wire   [63:0] tmp_23_fu_1144_p1;
wire   [63:0] tmp_28_fu_1186_p1;
wire   [63:0] tmp_36_fu_1209_p1;
wire   [63:0] tmp_43_fu_1312_p1;
wire   [63:0] tmp_53_fu_1409_p1;
wire   [63:0] tmp_66_fu_1552_p1;
wire   [3:0] tmp_3_fu_547_p1;
wire   [8:0] tmp_4_fu_568_p3;
wire   [8:0] tmp_5_fu_576_p2;
wire   [9:0] tmp_12_fu_588_p1;
wire   [9:0] tmp_16_fu_592_p1;
wire   [0:0] tmp_6_fu_582_p2;
wire   [9:0] tmp_26_fu_605_p2;
wire   [9:0] tmp_37_fu_617_p2;
reg   [511:0] tmp_25_fu_596_p4;
wire   [511:0] p_new_fu_559_p4;
wire   [9:0] tmp_29_fu_611_p2;
wire   [9:0] tmp_39_fu_623_p3;
wire   [9:0] tmp_46_fu_639_p3;
wire   [9:0] tmp_54_fu_647_p2;
wire   [511:0] tmp_44_fu_631_p3;
wire   [511:0] tmp_62_fu_653_p1;
wire   [511:0] tmp_67_fu_657_p1;
wire   [511:0] tmp_69_fu_661_p2;
wire   [511:0] tmp_70_fu_667_p2;
wire   [511:0] tmp_71_fu_673_p2;
wire   [5:0] tmp_2_fu_551_p3;
wire   [5:0] tmp_7_fu_683_p2;
wire   [8:0] tmp_9_fu_689_p3;
wire   [8:0] tmp_1_fu_697_p2;
wire   [9:0] tmp_74_fu_709_p1;
wire   [9:0] tmp_75_fu_713_p1;
wire   [0:0] tmp_73_fu_703_p2;
wire   [9:0] tmp_77_fu_726_p2;
wire   [9:0] tmp_79_fu_738_p2;
reg   [511:0] tmp_76_fu_717_p4;
wire   [9:0] tmp_78_fu_732_p2;
wire   [9:0] tmp_80_fu_744_p3;
wire   [9:0] tmp_82_fu_760_p3;
wire   [9:0] tmp_83_fu_768_p2;
wire   [511:0] tmp_81_fu_752_p3;
wire   [511:0] tmp_84_fu_774_p1;
wire   [511:0] tmp_85_fu_778_p1;
wire   [511:0] tmp_86_fu_782_p2;
wire   [511:0] tmp_87_fu_788_p2;
wire   [511:0] tmp_88_fu_794_p2;
wire   [5:0] tmp_8_fu_804_p2;
wire   [8:0] tmp_10_fu_810_p3;
wire   [8:0] tmp_11_fu_818_p2;
wire   [9:0] tmp_91_fu_830_p1;
wire   [9:0] tmp_92_fu_834_p1;
wire   [0:0] tmp_90_fu_824_p2;
wire   [9:0] tmp_94_fu_847_p2;
wire   [9:0] tmp_96_fu_859_p2;
reg   [511:0] tmp_93_fu_838_p4;
wire   [9:0] tmp_95_fu_853_p2;
wire   [9:0] tmp_97_fu_865_p3;
wire   [9:0] tmp_99_fu_881_p3;
wire   [9:0] tmp_100_fu_889_p2;
wire   [511:0] tmp_98_fu_873_p3;
wire   [511:0] tmp_101_fu_895_p1;
wire   [511:0] tmp_102_fu_899_p1;
wire   [511:0] tmp_103_fu_903_p2;
wire   [511:0] tmp_104_fu_909_p2;
wire   [511:0] tmp_105_fu_915_p2;
wire   [5:0] tmp_13_fu_925_p2;
wire   [8:0] tmp_14_fu_931_p3;
wire   [8:0] tmp_15_fu_939_p2;
wire   [9:0] tmp_108_fu_951_p1;
wire   [9:0] tmp_109_fu_955_p1;
wire   [0:0] tmp_107_fu_945_p2;
wire   [9:0] tmp_111_fu_968_p2;
wire   [9:0] tmp_113_fu_980_p2;
reg   [511:0] tmp_110_fu_959_p4;
wire   [9:0] tmp_112_fu_974_p2;
wire   [9:0] tmp_114_fu_986_p3;
wire   [9:0] tmp_116_fu_1002_p3;
wire   [9:0] tmp_117_fu_1010_p2;
wire   [511:0] tmp_115_fu_994_p3;
wire   [511:0] tmp_118_fu_1016_p1;
wire   [511:0] tmp_119_fu_1020_p1;
wire   [511:0] tmp_120_fu_1024_p2;
wire   [511:0] tmp_121_fu_1030_p2;
wire   [511:0] tmp_122_fu_1036_p2;
wire   [6:0] tmp_s_fu_1066_p2;
wire   [6:0] tmp_18_fu_1077_p2;
wire   [6:0] tmp_20_fu_1127_p2;
wire   [6:0] tmp_22_fu_1138_p2;
wire   [31:0] tmp2_fu_1154_p2;
wire   [31:0] tmp1_fu_1149_p2;
wire   [31:0] tmp_24_fu_1159_p2;
wire   [30:0] tmp_125_fu_1165_p1;
wire   [0:0] tmp_126_fu_1169_p3;
wire   [26:0] tmp_127_fu_1214_p1;
wire   [4:0] tmp_30_fu_1218_p4;
wire   [31:0] tmp_33_fu_1242_p2;
wire   [31:0] tmp_32_fu_1236_p2;
wire   [31:0] tmp_34_fu_1248_p2;
wire   [31:0] tmp_35_fu_1254_p2;
wire   [31:0] tmp5_fu_1266_p2;
wire   [31:0] tmp_31_fu_1228_p3;
wire   [31:0] tmp4_fu_1272_p2;
wire   [31:0] tmp3_fu_1260_p2;
wire   [1:0] tmp_128_fu_1284_p1;
wire   [29:0] tmp_38_fu_1288_p4;
wire   [26:0] tmp_129_fu_1323_p1;
wire   [4:0] tmp_40_fu_1327_p4;
wire   [31:0] tmp6_fu_1345_p2;
wire   [31:0] tmp_42_fu_1351_p2;
wire   [31:0] tmp9_fu_1363_p2;
wire   [31:0] tmp_41_fu_1337_p3;
wire   [31:0] tmp8_fu_1369_p2;
wire   [31:0] tmp7_fu_1357_p2;
wire   [1:0] tmp_130_fu_1381_p1;
wire   [29:0] tmp_45_fu_1385_p4;
wire   [26:0] tmp_131_fu_1420_p1;
wire   [4:0] tmp_47_fu_1424_p4;
wire   [31:0] tmp_49_fu_1442_p2;
wire   [31:0] tmp_50_fu_1448_p2;
wire   [31:0] tmp_51_fu_1454_p2;
wire   [31:0] tmp_52_fu_1460_p2;
wire   [31:0] tmp_48_fu_1434_p3;
wire   [31:0] tmp10_fu_1472_p2;
wire   [31:0] tmp11_fu_1478_p2;
wire   [31:0] tmp_fu_1466_p2;
wire   [1:0] tmp_132_fu_1490_p1;
wire   [29:0] tmp_55_fu_1494_p4;
wire   [26:0] tmp_133_fu_1518_p1;
wire   [4:0] tmp_63_fu_1522_p4;
wire   [31:0] tmp12_fu_1540_p2;
wire   [31:0] tmp14_fu_1557_p2;
wire   [31:0] tmp_64_fu_1532_p3;
wire   [1:0] tmp_134_fu_1569_p1;
wire   [29:0] tmp_68_fu_1573_p4;
wire   [31:0] tmp_60_fu_1617_p2;
wire   [31:0] tmp_59_fu_1612_p2;
wire   [31:0] tmp_58_fu_1607_p2;
wire   [31:0] tmp_57_fu_1602_p2;
wire   [31:0] tmp_56_fu_1597_p2;
wire   [175:0] tmp_61_fu_1622_p7;
wire   [31:0] tmp13_fu_1650_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 14'b1;
end

SHA1ProcessMessageBlock_Block_codeRepl62_proc_W #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
W_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_address0),
    .ce0(W_ce0),
    .we0(W_we0),
    .d0(W_d0),
    .q0(W_q0),
    .address1(W_address1),
    .ce1(W_ce1),
    .we1(W_we1),
    .d1(W_d1),
    .q1(W_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_fu_1512_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        B1_reg_287 <= B_4_reg_297;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_1060_p2))) begin
        B1_reg_287 <= {{context_read_reg_1660[ap_const_lv32_3F : ap_const_lv32_20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_1197_p2))) begin
        B_1_reg_353 <= B1_reg_287;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        B_1_reg_353 <= B_5_reg_364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond2_fu_1306_p2))) begin
        B_2_reg_422 <= B_1_reg_353;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        B_2_reg_422 <= B_6_reg_433;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond1_fu_1403_p2))) begin
        B_3_reg_491 <= B_2_reg_422;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        B_3_reg_491 <= B_7_reg_501;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        B_4_reg_297 <= temp_fu_1278_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_1060_p2))) begin
        B_4_reg_297 <= A_fu_1088_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_1197_p2))) begin
        B_5_reg_364 <= B_4_reg_297;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        B_5_reg_364 <= temp_1_fu_1375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond2_fu_1306_p2))) begin
        B_6_reg_433 <= B_5_reg_364;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        B_6_reg_433 <= temp_2_fu_1484_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond1_fu_1403_p2))) begin
        B_7_reg_501 <= B_6_reg_433;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        B_7_reg_501 <= temp_3_fu_1655_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        D_1_reg_276 <= C_1_fu_1298_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_1060_p2))) begin
        D_1_reg_276 <= {{context_read_reg_1660[ap_const_lv32_5F : ap_const_lv32_40]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_1197_p2))) begin
        D_2_reg_341 <= D_1_reg_276;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        D_2_reg_341 <= C_2_fu_1395_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond2_fu_1306_p2))) begin
        D_3_reg_410 <= D_2_reg_341;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        D_3_reg_410 <= C_3_fu_1504_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond1_fu_1403_p2))) begin
        D_4_reg_479 <= D_3_reg_410;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        D_4_reg_479 <= C_4_reg_1858;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        E1_reg_319 <= E_4_reg_266;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_1060_p2))) begin
        E1_reg_319 <= {{context_read_reg_1660[ap_const_lv32_9F : ap_const_lv32_80]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_1197_p2))) begin
        E_1_reg_387 <= E1_reg_319;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        E_1_reg_387 <= E_5_reg_330;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond2_fu_1306_p2))) begin
        E_2_reg_456 <= E_1_reg_387;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        E_2_reg_456 <= E_6_reg_399;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond1_fu_1403_p2))) begin
        E_3_reg_524 <= E_2_reg_456;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        E_3_reg_524 <= E_7_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        E_4_reg_266 <= D_1_reg_276;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_1060_p2))) begin
        E_4_reg_266 <= {{context_read_reg_1660[ap_const_lv32_7F : ap_const_lv32_60]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_1197_p2))) begin
        E_5_reg_330 <= E_4_reg_266;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        E_5_reg_330 <= D_2_reg_341;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond2_fu_1306_p2))) begin
        E_6_reg_399 <= E_5_reg_330;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        E_6_reg_399 <= D_3_reg_410;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond1_fu_1403_p2))) begin
        E_7_reg_468 <= E_6_reg_399;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        E_7_reg_468 <= D_4_reg_479;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        t_0_i_i_reg_242 <= t_reg_1678;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_47)) begin
        t_0_i_i_reg_242 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_i_i_fu_535_p2 == 1'b0))) begin
        t_1_reg_254 <= ap_const_lv7_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        t_1_reg_254 <= t_6_fu_1191_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        t_2_reg_308 <= t_7_reg_1774;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_1060_p2))) begin
        t_2_reg_308 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_1197_p2))) begin
        t_3_reg_376 <= ap_const_lv6_14;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        t_3_reg_376 <= t_8_reg_1802;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond2_fu_1306_p2))) begin
        t_4_reg_445 <= ap_const_lv6_28;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        t_4_reg_445 <= t_9_reg_1825;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond1_fu_1403_p2))) begin
        t_5_reg_513 <= ap_const_lv7_3C;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        t_5_reg_513 <= t_10_reg_1863;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_1060_p2))) begin
        A_reg_1716 <= A_fu_1088_p1;
        B_reg_1722 <= {{context_read_reg_1660[ap_const_lv32_3F : ap_const_lv32_20]}};
        C_reg_1728 <= {{context_read_reg_1660[ap_const_lv32_5F : ap_const_lv32_40]}};
        D_reg_1734 <= {{context_read_reg_1660[ap_const_lv32_7F : ap_const_lv32_60]}};
        E_reg_1740 <= {{context_read_reg_1660[ap_const_lv32_9F : ap_const_lv32_80]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == exitcond_fu_1512_p2))) begin
        C_4_reg_1858 <= C_4_fu_1583_p3;
        t_10_reg_1863 <= t_10_fu_1591_p2;
        tmp15_reg_1853 <= tmp15_fu_1563_p2;
        tmp_65_reg_1843 <= tmp_65_fu_1546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_load_1_reg_1751 <= W_q1;
        W_load_reg_1746 <= W_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_47)) begin
        context_read_reg_1660 <= context_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        t_7_reg_1774 <= t_7_fu_1203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == exitcond2_fu_1306_p2))) begin
        t_8_reg_1802 <= t_8_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (1'b0 == exitcond1_fu_1403_p2))) begin
        t_9_reg_1825 <= t_9_fu_1414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        t_reg_1678 <= t_fu_541_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_i_i_fu_535_p2 == 1'b0))) begin
        tmp_106_reg_1693 <= tmp_106_fu_921_p1;
        tmp_123_reg_1698 <= tmp_123_fu_1042_p1;
        tmp_72_reg_1683 <= tmp_72_fu_679_p1;
        tmp_89_reg_1688 <= tmp_89_fu_800_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        W_address0 = tmp_4_i_fu_1046_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        W_address0 = tmp_53_fu_1409_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        W_address0 = tmp_36_fu_1209_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address0 = tmp_23_fu_1144_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_address0 = tmp_17_fu_1072_p1;
    end else begin
        W_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address1 = tmp_28_fu_1186_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        W_address1 = tmp_66_fu_1552_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        W_address1 = tmp_43_fu_1312_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address1 = tmp_21_fu_1133_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_address1 = tmp_19_fu_1083_p1;
    end else begin
        W_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        W_ce0 = 1'b1;
    end else begin
        W_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        W_ce1 = 1'b1;
    end else begin
        W_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        W_we0 = 1'b1;
    end else begin
        W_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_we1 = 1'b1;
    end else begin
        W_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_fu_1512_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_fu_1512_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_167) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_178) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_203) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_223) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_32) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_57) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_246) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_78) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_104) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_119) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_142) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_153) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_fu_1512_p2))) begin
        context_o_ap_vld = 1'b1;
    end else begin
        context_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_47) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond5_i_i_fu_535_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == exitcond4_fu_1060_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == exitcond3_fu_1197_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st9_fsm_8 : begin
            if (~(1'b0 == exitcond2_fu_1306_p2)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st11_fsm_10 : begin
            if (~(1'b0 == exitcond1_fu_1403_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st13_fsm_12 : begin
            if (~(1'b0 == exitcond_fu_1512_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_fu_1088_p1 = context_read_reg_1660[31:0];

assign C_1_fu_1298_p3 = {{tmp_128_fu_1284_p1}, {tmp_38_fu_1288_p4}};

assign C_2_fu_1395_p3 = {{tmp_130_fu_1381_p1}, {tmp_45_fu_1385_p4}};

assign C_3_fu_1504_p3 = {{tmp_132_fu_1490_p1}, {tmp_55_fu_1494_p4}};

assign C_4_fu_1583_p3 = {{tmp_134_fu_1569_p1}, {tmp_68_fu_1573_p4}};

assign W_d0 = {{{{tmp_72_reg_1683}, {tmp_89_reg_1688}}, {tmp_106_reg_1693}}, {tmp_123_reg_1698}};

assign W_d1 = {{tmp_125_fu_1165_p1}, {tmp_126_fu_1169_p3}};

always @ (*) begin
    ap_sig_104 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_119 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_142 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_153 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_167 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_178 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_192 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_203 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_223 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_246 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_32 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_47 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_sig_57 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_78 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

assign context_o = {{context_read_reg_1660[32'd687 : 32'd176]}, {tmp_61_fu_1622_p7}};

assign exitcond1_fu_1403_p2 = ((t_4_reg_445 == ap_const_lv6_3C) ? 1'b1 : 1'b0);

assign exitcond2_fu_1306_p2 = ((t_3_reg_376 == ap_const_lv6_28) ? 1'b1 : 1'b0);

assign exitcond3_fu_1197_p2 = ((t_2_reg_308 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond4_fu_1060_p2 = ((t_1_reg_254 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign exitcond5_i_i_fu_535_p2 = ((t_0_i_i_reg_242 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_1512_p2 = ((t_5_reg_513 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign p_new_fu_559_p4 = {{context_read_reg_1660[ap_const_lv32_2AF : ap_const_lv32_B0]}};

assign t_10_fu_1591_p2 = (ap_const_lv7_1 + t_5_reg_513);

assign t_6_fu_1191_p2 = (ap_const_lv7_1 + t_1_reg_254);

assign t_7_fu_1203_p2 = (t_2_reg_308 + ap_const_lv5_1);

assign t_8_fu_1317_p2 = (ap_const_lv6_1 + t_3_reg_376);

assign t_9_fu_1414_p2 = (ap_const_lv6_1 + t_4_reg_445);

assign t_fu_541_p2 = (t_0_i_i_reg_242 + ap_const_lv5_1);

assign temp_1_fu_1375_p2 = (tmp8_fu_1369_p2 + tmp7_fu_1357_p2);

assign temp_2_fu_1484_p2 = (tmp11_fu_1478_p2 + tmp_fu_1466_p2);

assign temp_3_fu_1655_p2 = (tmp15_reg_1853 + tmp13_fu_1650_p2);

assign temp_fu_1278_p2 = (tmp4_fu_1272_p2 + tmp3_fu_1260_p2);

assign tmp10_fu_1472_p2 = (tmp_48_fu_1434_p3 + E_2_reg_456);

assign tmp11_fu_1478_p2 = ($signed(ap_const_lv32_8F1BBCDC) + $signed(tmp10_fu_1472_p2));

assign tmp12_fu_1540_p2 = (E_7_reg_468 ^ B_3_reg_491);

assign tmp13_fu_1650_p2 = (W_q1 + tmp_65_reg_1843);

assign tmp14_fu_1557_p2 = ($signed(ap_const_lv32_CA62C1D6) + $signed(E_3_reg_524));

assign tmp15_fu_1563_p2 = (tmp14_fu_1557_p2 + tmp_64_fu_1532_p3);

assign tmp1_fu_1149_p2 = (W_load_reg_1746 ^ W_q1);

assign tmp2_fu_1154_p2 = (W_load_1_reg_1751 ^ W_q0);

assign tmp3_fu_1260_p2 = (W_q0 + tmp_35_fu_1254_p2);

assign tmp4_fu_1272_p2 = (tmp5_fu_1266_p2 + tmp_31_fu_1228_p3);

assign tmp5_fu_1266_p2 = (ap_const_lv32_5A827999 + E1_reg_319);

assign tmp6_fu_1345_p2 = (E_5_reg_330 ^ B_1_reg_353);

assign tmp7_fu_1357_p2 = (W_q1 + tmp_42_fu_1351_p2);

assign tmp8_fu_1369_p2 = (tmp9_fu_1363_p2 + tmp_41_fu_1337_p3);

assign tmp9_fu_1363_p2 = (ap_const_lv32_6ED9EBA1 + E_1_reg_387);

assign tmp_100_fu_889_p2 = (ap_const_lv10_1FF - tmp_97_fu_865_p3);

assign tmp_101_fu_895_p1 = tmp_99_fu_881_p3;

assign tmp_102_fu_899_p1 = tmp_100_fu_889_p2;

assign tmp_103_fu_903_p2 = tmp_98_fu_873_p3 >> tmp_101_fu_895_p1;

assign tmp_104_fu_909_p2 = ap_const_lv512_lc_1 >> tmp_102_fu_899_p1;

assign tmp_105_fu_915_p2 = (tmp_103_fu_903_p2 & tmp_104_fu_909_p2);

assign tmp_106_fu_921_p1 = tmp_105_fu_915_p2[7:0];

assign tmp_107_fu_945_p2 = ((tmp_14_fu_931_p3 > tmp_15_fu_939_p2) ? 1'b1 : 1'b0);

assign tmp_108_fu_951_p1 = tmp_14_fu_931_p3;

assign tmp_109_fu_955_p1 = tmp_15_fu_939_p2;

assign tmp_10_fu_810_p3 = {{tmp_8_fu_804_p2}, {ap_const_lv3_0}};

integer ap_tvar_int_0;

always @ (context_read_reg_1660) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > ap_const_lv32_2AF - ap_const_lv32_B0) begin
            tmp_110_fu_959_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_110_fu_959_p4[ap_tvar_int_0] = context_read_reg_1660[ap_const_lv32_2AF - ap_tvar_int_0];
        end
    end
end

assign tmp_111_fu_968_p2 = (tmp_108_fu_951_p1 - tmp_109_fu_955_p1);

assign tmp_112_fu_974_p2 = (tmp_108_fu_951_p1 ^ ap_const_lv10_1FF);

assign tmp_113_fu_980_p2 = (tmp_109_fu_955_p1 - tmp_108_fu_951_p1);

assign tmp_114_fu_986_p3 = ((tmp_107_fu_945_p2[0:0] === 1'b1) ? tmp_111_fu_968_p2 : tmp_113_fu_980_p2);

assign tmp_115_fu_994_p3 = ((tmp_107_fu_945_p2[0:0] === 1'b1) ? tmp_110_fu_959_p4 : p_new_fu_559_p4);

assign tmp_116_fu_1002_p3 = ((tmp_107_fu_945_p2[0:0] === 1'b1) ? tmp_112_fu_974_p2 : tmp_108_fu_951_p1);

assign tmp_117_fu_1010_p2 = (ap_const_lv10_1FF - tmp_114_fu_986_p3);

assign tmp_118_fu_1016_p1 = tmp_116_fu_1002_p3;

assign tmp_119_fu_1020_p1 = tmp_117_fu_1010_p2;

assign tmp_11_fu_818_p2 = (tmp_10_fu_810_p3 | ap_const_lv9_7);

assign tmp_120_fu_1024_p2 = tmp_115_fu_994_p3 >> tmp_118_fu_1016_p1;

assign tmp_121_fu_1030_p2 = ap_const_lv512_lc_1 >> tmp_119_fu_1020_p1;

assign tmp_122_fu_1036_p2 = (tmp_120_fu_1024_p2 & tmp_121_fu_1030_p2);

assign tmp_123_fu_1042_p1 = tmp_122_fu_1036_p2[7:0];

assign tmp_125_fu_1165_p1 = tmp_24_fu_1159_p2[30:0];

assign tmp_126_fu_1169_p3 = tmp_24_fu_1159_p2[ap_const_lv32_1F];

assign tmp_127_fu_1214_p1 = B_4_reg_297[26:0];

assign tmp_128_fu_1284_p1 = B1_reg_287[1:0];

assign tmp_129_fu_1323_p1 = B_5_reg_364[26:0];

assign tmp_12_fu_588_p1 = tmp_4_fu_568_p3;

assign tmp_130_fu_1381_p1 = B_1_reg_353[1:0];

assign tmp_131_fu_1420_p1 = B_6_reg_433[26:0];

assign tmp_132_fu_1490_p1 = B_2_reg_422[1:0];

assign tmp_133_fu_1518_p1 = B_7_reg_501[26:0];

assign tmp_134_fu_1569_p1 = B_3_reg_491[1:0];

assign tmp_13_fu_925_p2 = (tmp_2_fu_551_p3 | ap_const_lv6_3);

assign tmp_14_fu_931_p3 = {{tmp_13_fu_925_p2}, {ap_const_lv3_0}};

assign tmp_15_fu_939_p2 = (tmp_14_fu_931_p3 | ap_const_lv9_7);

assign tmp_16_fu_592_p1 = tmp_5_fu_576_p2;

assign tmp_17_fu_1072_p1 = tmp_s_fu_1066_p2;

assign tmp_18_fu_1077_p2 = ($signed(ap_const_lv7_78) + $signed(t_1_reg_254));

assign tmp_19_fu_1083_p1 = tmp_18_fu_1077_p2;

assign tmp_1_fu_697_p2 = (tmp_9_fu_689_p3 | ap_const_lv9_7);

assign tmp_20_fu_1127_p2 = ($signed(ap_const_lv7_72) + $signed(t_1_reg_254));

assign tmp_21_fu_1133_p1 = tmp_20_fu_1127_p2;

assign tmp_22_fu_1138_p2 = ($signed(ap_const_lv7_70) + $signed(t_1_reg_254));

assign tmp_23_fu_1144_p1 = tmp_22_fu_1138_p2;

assign tmp_24_fu_1159_p2 = (tmp2_fu_1154_p2 ^ tmp1_fu_1149_p2);

integer ap_tvar_int_1;

always @ (context_read_reg_1660) begin
    for (ap_tvar_int_1 = 512 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > ap_const_lv32_2AF - ap_const_lv32_B0) begin
            tmp_25_fu_596_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_25_fu_596_p4[ap_tvar_int_1] = context_read_reg_1660[ap_const_lv32_2AF - ap_tvar_int_1];
        end
    end
end

assign tmp_26_fu_605_p2 = (tmp_12_fu_588_p1 - tmp_16_fu_592_p1);

assign tmp_28_fu_1186_p1 = t_1_reg_254;

assign tmp_29_fu_611_p2 = (tmp_12_fu_588_p1 ^ ap_const_lv10_1FF);

assign tmp_2_fu_551_p3 = {{tmp_3_fu_547_p1}, {ap_const_lv2_0}};

assign tmp_30_fu_1218_p4 = {{B_4_reg_297[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_31_fu_1228_p3 = {{tmp_127_fu_1214_p1}, {tmp_30_fu_1218_p4}};

assign tmp_32_fu_1236_p2 = (B1_reg_287 & D_1_reg_276);

assign tmp_33_fu_1242_p2 = (B1_reg_287 ^ ap_const_lv32_FFFFFFFF);

assign tmp_34_fu_1248_p2 = (E_4_reg_266 & tmp_33_fu_1242_p2);

assign tmp_35_fu_1254_p2 = (tmp_32_fu_1236_p2 | tmp_34_fu_1248_p2);

assign tmp_36_fu_1209_p1 = t_2_reg_308;

assign tmp_37_fu_617_p2 = (tmp_16_fu_592_p1 - tmp_12_fu_588_p1);

assign tmp_38_fu_1288_p4 = {{B1_reg_287[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_39_fu_623_p3 = ((tmp_6_fu_582_p2[0:0] === 1'b1) ? tmp_26_fu_605_p2 : tmp_37_fu_617_p2);

assign tmp_3_fu_547_p1 = t_0_i_i_reg_242[3:0];

assign tmp_40_fu_1327_p4 = {{B_5_reg_364[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_41_fu_1337_p3 = {{tmp_129_fu_1323_p1}, {tmp_40_fu_1327_p4}};

assign tmp_42_fu_1351_p2 = (tmp6_fu_1345_p2 ^ D_2_reg_341);

assign tmp_43_fu_1312_p1 = t_3_reg_376;

assign tmp_44_fu_631_p3 = ((tmp_6_fu_582_p2[0:0] === 1'b1) ? tmp_25_fu_596_p4 : p_new_fu_559_p4);

assign tmp_45_fu_1385_p4 = {{B_1_reg_353[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_46_fu_639_p3 = ((tmp_6_fu_582_p2[0:0] === 1'b1) ? tmp_29_fu_611_p2 : tmp_12_fu_588_p1);

assign tmp_47_fu_1424_p4 = {{B_6_reg_433[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_48_fu_1434_p3 = {{tmp_131_fu_1420_p1}, {tmp_47_fu_1424_p4}};

assign tmp_49_fu_1442_p2 = (D_3_reg_410 | E_6_reg_399);

assign tmp_4_fu_568_p3 = {{tmp_3_fu_547_p1}, {ap_const_lv5_0}};

assign tmp_4_i_fu_1046_p1 = t_0_i_i_reg_242;

assign tmp_50_fu_1448_p2 = (B_2_reg_422 & tmp_49_fu_1442_p2);

assign tmp_51_fu_1454_p2 = (D_3_reg_410 & E_6_reg_399);

assign tmp_52_fu_1460_p2 = (tmp_50_fu_1448_p2 | tmp_51_fu_1454_p2);

assign tmp_53_fu_1409_p1 = t_4_reg_445;

assign tmp_54_fu_647_p2 = (ap_const_lv10_1FF - tmp_39_fu_623_p3);

assign tmp_55_fu_1494_p4 = {{B_2_reg_422[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_56_fu_1597_p2 = (A_reg_1716 + B_7_reg_501);

assign tmp_57_fu_1602_p2 = (B_reg_1722 + B_3_reg_491);

assign tmp_58_fu_1607_p2 = (C_reg_1728 + D_4_reg_479);

assign tmp_59_fu_1612_p2 = (D_reg_1734 + E_7_reg_468);

assign tmp_5_fu_576_p2 = (tmp_4_fu_568_p3 | ap_const_lv9_7);

assign tmp_60_fu_1617_p2 = (E_reg_1740 + E_3_reg_524);

assign tmp_61_fu_1622_p7 = {{{{{{{{{{ap_const_lv16_0}, {tmp_60_fu_1617_p2}}}, {tmp_59_fu_1612_p2}}}, {tmp_58_fu_1607_p2}}}, {tmp_57_fu_1602_p2}}}, {tmp_56_fu_1597_p2}};

assign tmp_62_fu_653_p1 = tmp_46_fu_639_p3;

assign tmp_63_fu_1522_p4 = {{B_7_reg_501[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_64_fu_1532_p3 = {{tmp_133_fu_1518_p1}, {tmp_63_fu_1522_p4}};

assign tmp_65_fu_1546_p2 = (tmp12_fu_1540_p2 ^ D_4_reg_479);

assign tmp_66_fu_1552_p1 = t_5_reg_513;

assign tmp_67_fu_657_p1 = tmp_54_fu_647_p2;

assign tmp_68_fu_1573_p4 = {{B_3_reg_491[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_69_fu_661_p2 = tmp_44_fu_631_p3 >> tmp_62_fu_653_p1;

assign tmp_6_fu_582_p2 = ((tmp_4_fu_568_p3 > tmp_5_fu_576_p2) ? 1'b1 : 1'b0);

assign tmp_70_fu_667_p2 = ap_const_lv512_lc_1 >> tmp_67_fu_657_p1;

assign tmp_71_fu_673_p2 = (tmp_69_fu_661_p2 & tmp_70_fu_667_p2);

assign tmp_72_fu_679_p1 = tmp_71_fu_673_p2[7:0];

assign tmp_73_fu_703_p2 = ((tmp_9_fu_689_p3 > tmp_1_fu_697_p2) ? 1'b1 : 1'b0);

assign tmp_74_fu_709_p1 = tmp_9_fu_689_p3;

assign tmp_75_fu_713_p1 = tmp_1_fu_697_p2;

integer ap_tvar_int_2;

always @ (context_read_reg_1660) begin
    for (ap_tvar_int_2 = 512 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > ap_const_lv32_2AF - ap_const_lv32_B0) begin
            tmp_76_fu_717_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_76_fu_717_p4[ap_tvar_int_2] = context_read_reg_1660[ap_const_lv32_2AF - ap_tvar_int_2];
        end
    end
end

assign tmp_77_fu_726_p2 = (tmp_74_fu_709_p1 - tmp_75_fu_713_p1);

assign tmp_78_fu_732_p2 = (tmp_74_fu_709_p1 ^ ap_const_lv10_1FF);

assign tmp_79_fu_738_p2 = (tmp_75_fu_713_p1 - tmp_74_fu_709_p1);

assign tmp_7_fu_683_p2 = (tmp_2_fu_551_p3 | ap_const_lv6_1);

assign tmp_80_fu_744_p3 = ((tmp_73_fu_703_p2[0:0] === 1'b1) ? tmp_77_fu_726_p2 : tmp_79_fu_738_p2);

assign tmp_81_fu_752_p3 = ((tmp_73_fu_703_p2[0:0] === 1'b1) ? tmp_76_fu_717_p4 : p_new_fu_559_p4);

assign tmp_82_fu_760_p3 = ((tmp_73_fu_703_p2[0:0] === 1'b1) ? tmp_78_fu_732_p2 : tmp_74_fu_709_p1);

assign tmp_83_fu_768_p2 = (ap_const_lv10_1FF - tmp_80_fu_744_p3);

assign tmp_84_fu_774_p1 = tmp_82_fu_760_p3;

assign tmp_85_fu_778_p1 = tmp_83_fu_768_p2;

assign tmp_86_fu_782_p2 = tmp_81_fu_752_p3 >> tmp_84_fu_774_p1;

assign tmp_87_fu_788_p2 = ap_const_lv512_lc_1 >> tmp_85_fu_778_p1;

assign tmp_88_fu_794_p2 = (tmp_86_fu_782_p2 & tmp_87_fu_788_p2);

assign tmp_89_fu_800_p1 = tmp_88_fu_794_p2[7:0];

assign tmp_8_fu_804_p2 = (tmp_2_fu_551_p3 | ap_const_lv6_2);

assign tmp_90_fu_824_p2 = ((tmp_10_fu_810_p3 > tmp_11_fu_818_p2) ? 1'b1 : 1'b0);

assign tmp_91_fu_830_p1 = tmp_10_fu_810_p3;

assign tmp_92_fu_834_p1 = tmp_11_fu_818_p2;

integer ap_tvar_int_3;

always @ (context_read_reg_1660) begin
    for (ap_tvar_int_3 = 512 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > ap_const_lv32_2AF - ap_const_lv32_B0) begin
            tmp_93_fu_838_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_93_fu_838_p4[ap_tvar_int_3] = context_read_reg_1660[ap_const_lv32_2AF - ap_tvar_int_3];
        end
    end
end

assign tmp_94_fu_847_p2 = (tmp_91_fu_830_p1 - tmp_92_fu_834_p1);

assign tmp_95_fu_853_p2 = (tmp_91_fu_830_p1 ^ ap_const_lv10_1FF);

assign tmp_96_fu_859_p2 = (tmp_92_fu_834_p1 - tmp_91_fu_830_p1);

assign tmp_97_fu_865_p3 = ((tmp_90_fu_824_p2[0:0] === 1'b1) ? tmp_94_fu_847_p2 : tmp_96_fu_859_p2);

assign tmp_98_fu_873_p3 = ((tmp_90_fu_824_p2[0:0] === 1'b1) ? tmp_93_fu_838_p4 : p_new_fu_559_p4);

assign tmp_99_fu_881_p3 = ((tmp_90_fu_824_p2[0:0] === 1'b1) ? tmp_95_fu_853_p2 : tmp_91_fu_830_p1);

assign tmp_9_fu_689_p3 = {{tmp_7_fu_683_p2}, {ap_const_lv3_0}};

assign tmp_fu_1466_p2 = (W_q0 + tmp_52_fu_1460_p2);

assign tmp_s_fu_1066_p2 = ($signed(ap_const_lv7_7D) + $signed(t_1_reg_254));

endmodule //SHA1ProcessMessageBlock_Block_codeRepl62_proc
