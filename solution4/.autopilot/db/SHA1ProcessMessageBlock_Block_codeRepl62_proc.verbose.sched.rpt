

================================================================
== Vivado HLS Report for 'SHA1ProcessMessageBlock_Block_codeRepl62_proc'
================================================================
* Date:           Fri Aug 26 17:27:36 2016

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        sha1
* Solution:       solution4
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.97|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  390|  390|  390|  390|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- loop1   |   32|   32|         2|          -|          -|    16|    no    |
        |- loop2   |  192|  192|         3|          -|          -|    64|    no    |
        |- loop3   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop4   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop5   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop6   |   40|   40|         2|          -|          -|    20|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 14
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond5_i_i)
	4  / (exitcond5_i_i)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond4)
	7  / (exitcond4)
5 --> 
	6  / true
6 --> 
	4  / true
7 --> 
	8  / (!exitcond3)
	9  / (exitcond3)
8 --> 
	7  / true
9 --> 
	10  / (!exitcond2)
	11  / (exitcond2)
10 --> 
	9  / true
11 --> 
	12  / (!exitcond1)
	13  / (exitcond1)
12 --> 
	11  / true
13 --> 
	14  / (!exitcond)
14 --> 
	13  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: W [1/1] 0.00ns
newFuncRoot:0  %W = alloca [80 x i32], align 16

ST_1: context_read [1/1] 0.00ns
newFuncRoot:1  %context_read = call i688 @_ssdm_op_Read.ap_auto.i688P(i688* %context)

ST_1: stg_17 [1/1] 1.57ns
newFuncRoot:2  br label %0


 <State 2>: 7.97ns
ST_2: t_0_i_i [1/1] 0.00ns
:0  %t_0_i_i = phi i5 [ 0, %newFuncRoot ], [ %t, %1 ]

ST_2: exitcond5_i_i [1/1] 1.91ns
:1  %exitcond5_i_i = icmp eq i5 %t_0_i_i, -16

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_2: t [1/1] 1.72ns
:3  %t = add i5 %t_0_i_i, 1

ST_2: stg_22 [1/1] 1.57ns
:4  br i1 %exitcond5_i_i, label %.preheader8, label %1

ST_2: tmp_3 [1/1] 0.00ns
:1  %tmp_3 = trunc i5 %t_0_i_i to i4

ST_2: tmp_2 [1/1] 0.00ns
:2  %tmp_2 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %tmp_3, i2 0)

ST_2: p_new [1/1] 0.00ns
:3  %p_new = call i512 @_ssdm_op_PartSelect.i512.i688.i32.i32(i688 %context_read, i32 176, i32 687)

ST_2: tmp_4 [1/1] 0.00ns
:4  %tmp_4 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %tmp_3, i5 0)

ST_2: tmp_5 [1/1] 0.00ns
:5  %tmp_5 = or i9 %tmp_4, 7

ST_2: tmp_6 [1/1] 2.03ns
:6  %tmp_6 = icmp ugt i9 %tmp_4, %tmp_5

ST_2: tmp_12 [1/1] 0.00ns
:7  %tmp_12 = zext i9 %tmp_4 to i10

ST_2: tmp_16 [1/1] 0.00ns
:8  %tmp_16 = zext i9 %tmp_5 to i10

ST_2: tmp_25 [1/1] 0.00ns (grouped into LUT with out node tmp_69)
:9  %tmp_25 = call i512 @_ssdm_op_PartSelect.i512.i688.i32.i32(i688 %context_read, i32 687, i32 176)

ST_2: tmp_26 [1/1] 1.84ns
:10  %tmp_26 = sub i10 %tmp_12, %tmp_16

ST_2: tmp_29 [1/1] 0.00ns (grouped into LUT with out node tmp_69)
:11  %tmp_29 = xor i10 %tmp_12, 511

ST_2: tmp_37 [1/1] 1.84ns
:12  %tmp_37 = sub i10 %tmp_16, %tmp_12

ST_2: tmp_39 [1/1] 0.00ns (grouped into LUT with out node tmp_54)
:13  %tmp_39 = select i1 %tmp_6, i10 %tmp_26, i10 %tmp_37

ST_2: tmp_44 [1/1] 0.00ns (grouped into LUT with out node tmp_69)
:14  %tmp_44 = select i1 %tmp_6, i512 %tmp_25, i512 %p_new

ST_2: tmp_46 [1/1] 0.00ns (grouped into LUT with out node tmp_69)
:15  %tmp_46 = select i1 %tmp_6, i10 %tmp_29, i10 %tmp_12

ST_2: tmp_54 [1/1] 1.84ns (out node of the LUT)
:16  %tmp_54 = sub i10 511, %tmp_39

ST_2: tmp_62 [1/1] 0.00ns (grouped into LUT with out node tmp_69)
:17  %tmp_62 = zext i10 %tmp_46 to i512

ST_2: tmp_67 [1/1] 0.00ns (grouped into LUT with out node tmp_71)
:18  %tmp_67 = zext i10 %tmp_54 to i512

ST_2: tmp_69 [1/1] 4.56ns (out node of the LUT)
:19  %tmp_69 = lshr i512 %tmp_44, %tmp_62

ST_2: tmp_70 [1/1] 0.00ns (grouped into LUT with out node tmp_71)
:20  %tmp_70 = lshr i512 -1, %tmp_67

ST_2: tmp_71 [1/1] 1.37ns (out node of the LUT)
:21  %tmp_71 = and i512 %tmp_69, %tmp_70

ST_2: tmp_72 [1/1] 0.00ns
:22  %tmp_72 = trunc i512 %tmp_71 to i8

ST_2: tmp_7 [1/1] 0.00ns
:25  %tmp_7 = or i6 %tmp_2, 1

ST_2: tmp_9 [1/1] 0.00ns
:26  %tmp_9 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %tmp_7, i3 0)

ST_2: tmp_1 [1/1] 0.00ns
:27  %tmp_1 = or i9 %tmp_9, 7

ST_2: tmp_73 [1/1] 2.03ns
:28  %tmp_73 = icmp ugt i9 %tmp_9, %tmp_1

ST_2: tmp_74 [1/1] 0.00ns
:29  %tmp_74 = zext i9 %tmp_9 to i10

ST_2: tmp_75 [1/1] 0.00ns
:30  %tmp_75 = zext i9 %tmp_1 to i10

ST_2: tmp_76 [1/1] 0.00ns (grouped into LUT with out node tmp_86)
:31  %tmp_76 = call i512 @_ssdm_op_PartSelect.i512.i688.i32.i32(i688 %context_read, i32 687, i32 176)

ST_2: tmp_77 [1/1] 1.84ns
:32  %tmp_77 = sub i10 %tmp_74, %tmp_75

ST_2: tmp_78 [1/1] 0.00ns (grouped into LUT with out node tmp_86)
:33  %tmp_78 = xor i10 %tmp_74, 511

ST_2: tmp_79 [1/1] 1.84ns
:34  %tmp_79 = sub i10 %tmp_75, %tmp_74

ST_2: tmp_80 [1/1] 0.00ns (grouped into LUT with out node tmp_83)
:35  %tmp_80 = select i1 %tmp_73, i10 %tmp_77, i10 %tmp_79

ST_2: tmp_81 [1/1] 0.00ns (grouped into LUT with out node tmp_86)
:36  %tmp_81 = select i1 %tmp_73, i512 %tmp_76, i512 %p_new

ST_2: tmp_82 [1/1] 0.00ns (grouped into LUT with out node tmp_86)
:37  %tmp_82 = select i1 %tmp_73, i10 %tmp_78, i10 %tmp_74

ST_2: tmp_83 [1/1] 1.84ns (out node of the LUT)
:38  %tmp_83 = sub i10 511, %tmp_80

ST_2: tmp_84 [1/1] 0.00ns (grouped into LUT with out node tmp_86)
:39  %tmp_84 = zext i10 %tmp_82 to i512

ST_2: tmp_85 [1/1] 0.00ns (grouped into LUT with out node tmp_88)
:40  %tmp_85 = zext i10 %tmp_83 to i512

ST_2: tmp_86 [1/1] 4.56ns (out node of the LUT)
:41  %tmp_86 = lshr i512 %tmp_81, %tmp_84

ST_2: tmp_87 [1/1] 0.00ns (grouped into LUT with out node tmp_88)
:42  %tmp_87 = lshr i512 -1, %tmp_85

ST_2: tmp_88 [1/1] 1.37ns (out node of the LUT)
:43  %tmp_88 = and i512 %tmp_86, %tmp_87

ST_2: tmp_89 [1/1] 0.00ns
:44  %tmp_89 = trunc i512 %tmp_88 to i8

ST_2: tmp_8 [1/1] 0.00ns
:45  %tmp_8 = or i6 %tmp_2, 2

ST_2: tmp_10 [1/1] 0.00ns
:46  %tmp_10 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %tmp_8, i3 0)

ST_2: tmp_11 [1/1] 0.00ns
:47  %tmp_11 = or i9 %tmp_10, 7

ST_2: tmp_90 [1/1] 2.03ns
:48  %tmp_90 = icmp ugt i9 %tmp_10, %tmp_11

ST_2: tmp_91 [1/1] 0.00ns
:49  %tmp_91 = zext i9 %tmp_10 to i10

ST_2: tmp_92 [1/1] 0.00ns
:50  %tmp_92 = zext i9 %tmp_11 to i10

ST_2: tmp_93 [1/1] 0.00ns (grouped into LUT with out node tmp_103)
:51  %tmp_93 = call i512 @_ssdm_op_PartSelect.i512.i688.i32.i32(i688 %context_read, i32 687, i32 176)

ST_2: tmp_94 [1/1] 1.84ns
:52  %tmp_94 = sub i10 %tmp_91, %tmp_92

ST_2: tmp_95 [1/1] 0.00ns (grouped into LUT with out node tmp_103)
:53  %tmp_95 = xor i10 %tmp_91, 511

ST_2: tmp_96 [1/1] 1.84ns
:54  %tmp_96 = sub i10 %tmp_92, %tmp_91

ST_2: tmp_97 [1/1] 0.00ns (grouped into LUT with out node tmp_100)
:55  %tmp_97 = select i1 %tmp_90, i10 %tmp_94, i10 %tmp_96

ST_2: tmp_98 [1/1] 0.00ns (grouped into LUT with out node tmp_103)
:56  %tmp_98 = select i1 %tmp_90, i512 %tmp_93, i512 %p_new

ST_2: tmp_99 [1/1] 0.00ns (grouped into LUT with out node tmp_103)
:57  %tmp_99 = select i1 %tmp_90, i10 %tmp_95, i10 %tmp_91

ST_2: tmp_100 [1/1] 1.84ns (out node of the LUT)
:58  %tmp_100 = sub i10 511, %tmp_97

ST_2: tmp_101 [1/1] 0.00ns (grouped into LUT with out node tmp_103)
:59  %tmp_101 = zext i10 %tmp_99 to i512

ST_2: tmp_102 [1/1] 0.00ns (grouped into LUT with out node tmp_105)
:60  %tmp_102 = zext i10 %tmp_100 to i512

ST_2: tmp_103 [1/1] 4.56ns (out node of the LUT)
:61  %tmp_103 = lshr i512 %tmp_98, %tmp_101

ST_2: tmp_104 [1/1] 0.00ns (grouped into LUT with out node tmp_105)
:62  %tmp_104 = lshr i512 -1, %tmp_102

ST_2: tmp_105 [1/1] 1.37ns (out node of the LUT)
:63  %tmp_105 = and i512 %tmp_103, %tmp_104

ST_2: tmp_106 [1/1] 0.00ns
:64  %tmp_106 = trunc i512 %tmp_105 to i8

ST_2: tmp_13 [1/1] 0.00ns
:65  %tmp_13 = or i6 %tmp_2, 3

ST_2: tmp_14 [1/1] 0.00ns
:66  %tmp_14 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %tmp_13, i3 0)

ST_2: tmp_15 [1/1] 0.00ns
:67  %tmp_15 = or i9 %tmp_14, 7

ST_2: tmp_107 [1/1] 2.03ns
:68  %tmp_107 = icmp ugt i9 %tmp_14, %tmp_15

ST_2: tmp_108 [1/1] 0.00ns
:69  %tmp_108 = zext i9 %tmp_14 to i10

ST_2: tmp_109 [1/1] 0.00ns
:70  %tmp_109 = zext i9 %tmp_15 to i10

ST_2: tmp_110 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:71  %tmp_110 = call i512 @_ssdm_op_PartSelect.i512.i688.i32.i32(i688 %context_read, i32 687, i32 176)

ST_2: tmp_111 [1/1] 1.84ns
:72  %tmp_111 = sub i10 %tmp_108, %tmp_109

ST_2: tmp_112 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:73  %tmp_112 = xor i10 %tmp_108, 511

ST_2: tmp_113 [1/1] 1.84ns
:74  %tmp_113 = sub i10 %tmp_109, %tmp_108

ST_2: tmp_114 [1/1] 0.00ns (grouped into LUT with out node tmp_117)
:75  %tmp_114 = select i1 %tmp_107, i10 %tmp_111, i10 %tmp_113

ST_2: tmp_115 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:76  %tmp_115 = select i1 %tmp_107, i512 %tmp_110, i512 %p_new

ST_2: tmp_116 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:77  %tmp_116 = select i1 %tmp_107, i10 %tmp_112, i10 %tmp_108

ST_2: tmp_117 [1/1] 1.84ns (out node of the LUT)
:78  %tmp_117 = sub i10 511, %tmp_114

ST_2: tmp_118 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:79  %tmp_118 = zext i10 %tmp_116 to i512

ST_2: tmp_119 [1/1] 0.00ns (grouped into LUT with out node tmp_122)
:80  %tmp_119 = zext i10 %tmp_117 to i512

ST_2: tmp_120 [1/1] 4.56ns (out node of the LUT)
:81  %tmp_120 = lshr i512 %tmp_115, %tmp_118

ST_2: tmp_121 [1/1] 0.00ns (grouped into LUT with out node tmp_122)
:82  %tmp_121 = lshr i512 -1, %tmp_119

ST_2: tmp_122 [1/1] 1.37ns (out node of the LUT)
:83  %tmp_122 = and i512 %tmp_120, %tmp_121

ST_2: tmp_123 [1/1] 0.00ns
:84  %tmp_123 = trunc i512 %tmp_122 to i8


 <State 3>: 2.71ns
ST_3: stg_105 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str1) nounwind

ST_3: tmp_4_i [1/1] 0.00ns
:23  %tmp_4_i = zext i5 %t_0_i_i to i64

ST_3: W_addr [1/1] 0.00ns
:24  %W_addr = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_4_i

ST_3: tmp_17_i [1/1] 0.00ns
:85  %tmp_17_i = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %tmp_72, i8 %tmp_89, i8 %tmp_106, i8 %tmp_123)

ST_3: stg_109 [1/1] 2.71ns
:86  store i32 %tmp_17_i, i32* %W_addr, align 4

ST_3: stg_110 [1/1] 0.00ns
:87  br label %0


 <State 4>: 4.43ns
ST_4: t_1 [1/1] 0.00ns
.preheader8:0  %t_1 = phi i7 [ %t_6, %2 ], [ 16, %0 ]

ST_4: exitcond4 [1/1] 1.97ns
.preheader8:1  %exitcond4 = icmp eq i7 %t_1, -48

ST_4: empty_66 [1/1] 0.00ns
.preheader8:2  %empty_66 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_4: stg_114 [1/1] 0.00ns
.preheader8:3  br i1 %exitcond4, label %3, label %2

ST_4: tmp_s [1/1] 1.72ns
:1  %tmp_s = add i7 -3, %t_1

ST_4: tmp_17 [1/1] 0.00ns
:2  %tmp_17 = zext i7 %tmp_s to i64

ST_4: W_addr_1 [1/1] 0.00ns
:3  %W_addr_1 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_17

ST_4: W_load [2/2] 2.71ns
:4  %W_load = load i32* %W_addr_1, align 4

ST_4: tmp_18 [1/1] 1.72ns
:5  %tmp_18 = add i7 -8, %t_1

ST_4: tmp_19 [1/1] 0.00ns
:6  %tmp_19 = zext i7 %tmp_18 to i64

ST_4: W_addr_2 [1/1] 0.00ns
:7  %W_addr_2 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_19

ST_4: W_load_1 [2/2] 2.71ns
:8  %W_load_1 = load i32* %W_addr_2, align 4

ST_4: A [1/1] 0.00ns
:0  %A = trunc i688 %context_read to i32

ST_4: B [1/1] 0.00ns
:1  %B = call i32 @_ssdm_op_PartSelect.i32.i688.i32.i32(i688 %context_read, i32 32, i32 63)

ST_4: C [1/1] 0.00ns
:2  %C = call i32 @_ssdm_op_PartSelect.i32.i688.i32.i32(i688 %context_read, i32 64, i32 95)

ST_4: D [1/1] 0.00ns
:3  %D = call i32 @_ssdm_op_PartSelect.i32.i688.i32.i32(i688 %context_read, i32 96, i32 127)

ST_4: E [1/1] 0.00ns
:4  %E = call i32 @_ssdm_op_PartSelect.i32.i688.i32.i32(i688 %context_read, i32 128, i32 159)

ST_4: stg_128 [1/1] 1.57ns
:5  br label %4


 <State 5>: 4.43ns
ST_5: W_load [1/2] 2.71ns
:4  %W_load = load i32* %W_addr_1, align 4

ST_5: W_load_1 [1/2] 2.71ns
:8  %W_load_1 = load i32* %W_addr_2, align 4

ST_5: tmp_20 [1/1] 1.72ns
:9  %tmp_20 = add i7 -14, %t_1

ST_5: tmp_21 [1/1] 0.00ns
:10  %tmp_21 = zext i7 %tmp_20 to i64

ST_5: W_addr_3 [1/1] 0.00ns
:11  %W_addr_3 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_21

ST_5: W_load_2 [2/2] 2.71ns
:12  %W_load_2 = load i32* %W_addr_3, align 4

ST_5: tmp_22 [1/1] 1.72ns
:13  %tmp_22 = add i7 -16, %t_1

ST_5: tmp_23 [1/1] 0.00ns
:14  %tmp_23 = zext i7 %tmp_22 to i64

ST_5: W_addr_4 [1/1] 0.00ns
:15  %W_addr_4 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_23

ST_5: W_load_3 [2/2] 2.71ns
:16  %W_load_3 = load i32* %W_addr_4, align 4


 <State 6>: 6.79ns
ST_6: stg_139 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str2) nounwind

ST_6: W_load_2 [1/2] 2.71ns
:12  %W_load_2 = load i32* %W_addr_3, align 4

ST_6: W_load_3 [1/2] 2.71ns
:16  %W_load_3 = load i32* %W_addr_4, align 4

ST_6: tmp1 [1/1] 0.00ns (grouped into LUT with out node tmp_24)
:17  %tmp1 = xor i32 %W_load, %W_load_2

ST_6: tmp2 [1/1] 0.00ns (grouped into LUT with out node tmp_24)
:18  %tmp2 = xor i32 %W_load_1, %W_load_3

ST_6: tmp_24 [1/1] 1.37ns (out node of the LUT)
:19  %tmp_24 = xor i32 %tmp2, %tmp1

ST_6: tmp_125 [1/1] 0.00ns
:20  %tmp_125 = trunc i32 %tmp_24 to i31

ST_6: tmp_126 [1/1] 0.00ns
:21  %tmp_126 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %tmp_24, i32 31)

ST_6: tmp_27 [1/1] 0.00ns
:22  %tmp_27 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_125, i1 %tmp_126)

ST_6: tmp_28 [1/1] 0.00ns
:23  %tmp_28 = zext i7 %t_1 to i64

ST_6: W_addr_5 [1/1] 0.00ns
:24  %W_addr_5 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_28

ST_6: stg_150 [1/1] 2.71ns
:25  store i32 %tmp_27, i32* %W_addr_5, align 4

ST_6: t_6 [1/1] 1.72ns
:26  %t_6 = add i7 1, %t_1

ST_6: stg_152 [1/1] 0.00ns
:27  br label %.preheader8


 <State 7>: 3.48ns
ST_7: E_4 [1/1] 0.00ns
:0  %E_4 = phi i32 [ %D, %3 ], [ %D_1, %5 ]

ST_7: D_1 [1/1] 0.00ns
:1  %D_1 = phi i32 [ %C, %3 ], [ %C_1, %5 ]

ST_7: B1 [1/1] 0.00ns
:2  %B1 = phi i32 [ %B, %3 ], [ %B_4, %5 ]

ST_7: B_4 [1/1] 0.00ns
:3  %B_4 = phi i32 [ %A, %3 ], [ %temp, %5 ]

ST_7: t_2 [1/1] 0.00ns
:4  %t_2 = phi i5 [ 0, %3 ], [ %t_7, %5 ]

ST_7: E1 [1/1] 0.00ns
:5  %E1 = phi i32 [ %E, %3 ], [ %E_4, %5 ]

ST_7: exitcond3 [1/1] 1.91ns
:6  %exitcond3 = icmp eq i5 %t_2, -12

ST_7: empty_67 [1/1] 0.00ns
:7  %empty_67 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_7: t_7 [1/1] 1.72ns
:8  %t_7 = add i5 %t_2, 1

ST_7: stg_162 [1/1] 1.57ns
:9  br i1 %exitcond3, label %.preheader7, label %5

ST_7: tmp_36 [1/1] 0.00ns
:8  %tmp_36 = zext i5 %t_2 to i64

ST_7: W_addr_6 [1/1] 0.00ns
:9  %W_addr_6 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_36

ST_7: W_load_4 [2/2] 2.71ns
:10  %W_load_4 = load i32* %W_addr_6, align 4


 <State 8>: 6.65ns
ST_8: stg_166 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str3) nounwind

ST_8: tmp_127 [1/1] 0.00ns
:1  %tmp_127 = trunc i32 %B_4 to i27

ST_8: tmp_30 [1/1] 0.00ns
:2  %tmp_30 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_4, i32 27, i32 31)

ST_8: tmp_31 [1/1] 0.00ns
:3  %tmp_31 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_127, i5 %tmp_30)

ST_8: tmp_32 [1/1] 0.00ns (grouped into LUT with out node tmp_35)
:4  %tmp_32 = and i32 %B1, %D_1

ST_8: tmp_33 [1/1] 0.00ns (grouped into LUT with out node tmp_35)
:5  %tmp_33 = xor i32 %B1, -1

ST_8: tmp_34 [1/1] 0.00ns (grouped into LUT with out node tmp_35)
:6  %tmp_34 = and i32 %E_4, %tmp_33

ST_8: tmp_35 [1/1] 1.37ns (out node of the LUT)
:7  %tmp_35 = or i32 %tmp_32, %tmp_34

ST_8: W_load_4 [1/2] 2.71ns
:10  %W_load_4 = load i32* %W_addr_6, align 4

ST_8: tmp3 [1/1] 1.97ns
:11  %tmp3 = add i32 %W_load_4, %tmp_35

ST_8: tmp5 [1/1] 1.97ns
:12  %tmp5 = add i32 1518500249, %E1

ST_8: tmp4 [1/1] 1.97ns
:13  %tmp4 = add i32 %tmp5, %tmp_31

ST_8: temp [1/1] 1.97ns
:14  %temp = add i32 %tmp4, %tmp3

ST_8: tmp_128 [1/1] 0.00ns
:15  %tmp_128 = trunc i32 %B1 to i2

ST_8: tmp_38 [1/1] 0.00ns
:16  %tmp_38 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B1, i32 2, i32 31)

ST_8: C_1 [1/1] 0.00ns
:17  %C_1 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_128, i30 %tmp_38)

ST_8: stg_182 [1/1] 0.00ns
:18  br label %4


 <State 9>: 3.51ns
ST_9: E_5 [1/1] 0.00ns
.preheader7:0  %E_5 = phi i32 [ %D_2, %6 ], [ %E_4, %4 ]

ST_9: D_2 [1/1] 0.00ns
.preheader7:1  %D_2 = phi i32 [ %C_2, %6 ], [ %D_1, %4 ]

ST_9: B_1 [1/1] 0.00ns
.preheader7:2  %B_1 = phi i32 [ %B_5, %6 ], [ %B1, %4 ]

ST_9: B_5 [1/1] 0.00ns
.preheader7:3  %B_5 = phi i32 [ %temp_1, %6 ], [ %B_4, %4 ]

ST_9: t_3 [1/1] 0.00ns
.preheader7:4  %t_3 = phi i6 [ %t_8, %6 ], [ 20, %4 ]

ST_9: E_1 [1/1] 0.00ns
.preheader7:5  %E_1 = phi i32 [ %E_5, %6 ], [ %E1, %4 ]

ST_9: exitcond2 [1/1] 1.94ns
.preheader7:6  %exitcond2 = icmp eq i6 %t_3, -24

ST_9: empty_68 [1/1] 0.00ns
.preheader7:7  %empty_68 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_9: stg_191 [1/1] 1.57ns
.preheader7:8  br i1 %exitcond2, label %.preheader6, label %6

ST_9: tmp_43 [1/1] 0.00ns
:6  %tmp_43 = zext i6 %t_3 to i64

ST_9: W_addr_7 [1/1] 0.00ns
:7  %W_addr_7 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_43

ST_9: W_load_5 [2/2] 2.71ns
:8  %W_load_5 = load i32* %W_addr_7, align 4

ST_9: t_8 [1/1] 1.72ns
:16  %t_8 = add i6 1, %t_3


 <State 10>: 6.65ns
ST_10: stg_196 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str4) nounwind

ST_10: tmp_129 [1/1] 0.00ns
:1  %tmp_129 = trunc i32 %B_5 to i27

ST_10: tmp_40 [1/1] 0.00ns
:2  %tmp_40 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_5, i32 27, i32 31)

ST_10: tmp_41 [1/1] 0.00ns
:3  %tmp_41 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_129, i5 %tmp_40)

ST_10: tmp6 [1/1] 0.00ns (grouped into LUT with out node tmp_42)
:4  %tmp6 = xor i32 %E_5, %B_1

ST_10: tmp_42 [1/1] 1.37ns (out node of the LUT)
:5  %tmp_42 = xor i32 %tmp6, %D_2

ST_10: W_load_5 [1/2] 2.71ns
:8  %W_load_5 = load i32* %W_addr_7, align 4

ST_10: tmp7 [1/1] 1.97ns
:9  %tmp7 = add i32 %W_load_5, %tmp_42

ST_10: tmp9 [1/1] 1.97ns
:10  %tmp9 = add i32 1859775393, %E_1

ST_10: tmp8 [1/1] 1.97ns
:11  %tmp8 = add i32 %tmp9, %tmp_41

ST_10: temp_1 [1/1] 1.97ns
:12  %temp_1 = add i32 %tmp8, %tmp7

ST_10: tmp_130 [1/1] 0.00ns
:13  %tmp_130 = trunc i32 %B_1 to i2

ST_10: tmp_45 [1/1] 0.00ns
:14  %tmp_45 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_1, i32 2, i32 31)

ST_10: C_2 [1/1] 0.00ns
:15  %C_2 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_130, i30 %tmp_45)

ST_10: stg_210 [1/1] 0.00ns
:17  br label %.preheader7


 <State 11>: 3.51ns
ST_11: E_6 [1/1] 0.00ns
.preheader6:0  %E_6 = phi i32 [ %D_3, %7 ], [ %E_5, %.preheader7 ]

ST_11: D_3 [1/1] 0.00ns
.preheader6:1  %D_3 = phi i32 [ %C_3, %7 ], [ %D_2, %.preheader7 ]

ST_11: B_2 [1/1] 0.00ns
.preheader6:2  %B_2 = phi i32 [ %B_6, %7 ], [ %B_1, %.preheader7 ]

ST_11: B_6 [1/1] 0.00ns
.preheader6:3  %B_6 = phi i32 [ %temp_2, %7 ], [ %B_5, %.preheader7 ]

ST_11: t_4 [1/1] 0.00ns
.preheader6:4  %t_4 = phi i6 [ %t_9, %7 ], [ -24, %.preheader7 ]

ST_11: E_2 [1/1] 0.00ns
.preheader6:5  %E_2 = phi i32 [ %E_6, %7 ], [ %E_1, %.preheader7 ]

ST_11: exitcond1 [1/1] 1.94ns
.preheader6:6  %exitcond1 = icmp eq i6 %t_4, -4

ST_11: empty_69 [1/1] 0.00ns
.preheader6:7  %empty_69 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_11: stg_219 [1/1] 1.57ns
.preheader6:8  br i1 %exitcond1, label %.preheader, label %7

ST_11: tmp_53 [1/1] 0.00ns
:8  %tmp_53 = zext i6 %t_4 to i64

ST_11: W_addr_8 [1/1] 0.00ns
:9  %W_addr_8 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_53

ST_11: W_load_6 [2/2] 2.71ns
:10  %W_load_6 = load i32* %W_addr_8, align 4

ST_11: t_9 [1/1] 1.72ns
:18  %t_9 = add i6 1, %t_4


 <State 12>: 6.65ns
ST_12: stg_224 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str5) nounwind

ST_12: tmp_131 [1/1] 0.00ns
:1  %tmp_131 = trunc i32 %B_6 to i27

ST_12: tmp_47 [1/1] 0.00ns
:2  %tmp_47 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_6, i32 27, i32 31)

ST_12: tmp_48 [1/1] 0.00ns
:3  %tmp_48 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_131, i5 %tmp_47)

ST_12: tmp_49 [1/1] 0.00ns (grouped into LUT with out node tmp_52)
:4  %tmp_49 = or i32 %D_3, %E_6

ST_12: tmp_50 [1/1] 0.00ns (grouped into LUT with out node tmp_52)
:5  %tmp_50 = and i32 %B_2, %tmp_49

ST_12: tmp_51 [1/1] 0.00ns (grouped into LUT with out node tmp_52)
:6  %tmp_51 = and i32 %D_3, %E_6

ST_12: tmp_52 [1/1] 1.37ns (out node of the LUT)
:7  %tmp_52 = or i32 %tmp_50, %tmp_51

ST_12: W_load_6 [1/2] 2.71ns
:10  %W_load_6 = load i32* %W_addr_8, align 4

ST_12: tmp [1/1] 1.97ns
:11  %tmp = add i32 %W_load_6, %tmp_52

ST_12: tmp10 [1/1] 1.97ns
:12  %tmp10 = add i32 %tmp_48, %E_2

ST_12: tmp11 [1/1] 1.97ns
:13  %tmp11 = add i32 -1894007588, %tmp10

ST_12: temp_2 [1/1] 1.97ns
:14  %temp_2 = add i32 %tmp11, %tmp

ST_12: tmp_132 [1/1] 0.00ns
:15  %tmp_132 = trunc i32 %B_2 to i2

ST_12: tmp_55 [1/1] 0.00ns
:16  %tmp_55 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_2, i32 2, i32 31)

ST_12: C_3 [1/1] 0.00ns
:17  %C_3 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_132, i30 %tmp_55)

ST_12: stg_240 [1/1] 0.00ns
:19  br label %.preheader6


 <State 13>: 3.94ns
ST_13: E_7 [1/1] 0.00ns
.preheader:0  %E_7 = phi i32 [ %D_4, %8 ], [ %E_6, %.preheader6 ]

ST_13: D_4 [1/1] 0.00ns
.preheader:1  %D_4 = phi i32 [ %C_4, %8 ], [ %D_3, %.preheader6 ]

ST_13: B_3 [1/1] 0.00ns
.preheader:2  %B_3 = phi i32 [ %B_7, %8 ], [ %B_2, %.preheader6 ]

ST_13: B_7 [1/1] 0.00ns
.preheader:3  %B_7 = phi i32 [ %temp_3, %8 ], [ %B_6, %.preheader6 ]

ST_13: t_5 [1/1] 0.00ns
.preheader:4  %t_5 = phi i7 [ %t_10, %8 ], [ 60, %.preheader6 ]

ST_13: E_3 [1/1] 0.00ns
.preheader:5  %E_3 = phi i32 [ %E_7, %8 ], [ %E_2, %.preheader6 ]

ST_13: exitcond [1/1] 1.97ns
.preheader:6  %exitcond = icmp eq i7 %t_5, -48

ST_13: empty_70 [1/1] 0.00ns
.preheader:7  %empty_70 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_13: stg_249 [1/1] 0.00ns
.preheader:8  br i1 %exitcond, label %.ret.exitStub, label %8

ST_13: tmp_133 [1/1] 0.00ns
:1  %tmp_133 = trunc i32 %B_7 to i27

ST_13: tmp_63 [1/1] 0.00ns
:2  %tmp_63 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_7, i32 27, i32 31)

ST_13: tmp_64 [1/1] 0.00ns
:3  %tmp_64 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_133, i5 %tmp_63)

ST_13: tmp12 [1/1] 0.00ns (grouped into LUT with out node tmp_65)
:4  %tmp12 = xor i32 %E_7, %B_3

ST_13: tmp_65 [1/1] 1.37ns (out node of the LUT)
:5  %tmp_65 = xor i32 %tmp12, %D_4

ST_13: tmp_66 [1/1] 0.00ns
:6  %tmp_66 = zext i7 %t_5 to i64

ST_13: W_addr_9 [1/1] 0.00ns
:7  %W_addr_9 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_66

ST_13: W_load_7 [2/2] 2.71ns
:8  %W_load_7 = load i32* %W_addr_9, align 4

ST_13: tmp14 [1/1] 1.97ns
:10  %tmp14 = add i32 -899497514, %E_3

ST_13: tmp15 [1/1] 1.97ns
:11  %tmp15 = add i32 %tmp14, %tmp_64

ST_13: tmp_134 [1/1] 0.00ns
:13  %tmp_134 = trunc i32 %B_3 to i2

ST_13: tmp_68 [1/1] 0.00ns
:14  %tmp_68 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_3, i32 2, i32 31)

ST_13: C_4 [1/1] 0.00ns
:15  %C_4 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_134, i30 %tmp_68)

ST_13: t_10 [1/1] 1.72ns
:16  %t_10 = add i7 1, %t_5

ST_13: tmp_56 [1/1] 2.44ns
.ret.exitStub:0  %tmp_56 = add i32 %A, %B_7

ST_13: tmp_57 [1/1] 2.44ns
.ret.exitStub:1  %tmp_57 = add i32 %B, %B_3

ST_13: tmp_58 [1/1] 2.44ns
.ret.exitStub:2  %tmp_58 = add i32 %C, %D_4

ST_13: tmp_59 [1/1] 2.44ns
.ret.exitStub:3  %tmp_59 = add i32 %D, %E_7

ST_13: tmp_60 [1/1] 2.44ns
.ret.exitStub:4  %tmp_60 = add i32 %E, %E_3

ST_13: tmp_61 [1/1] 0.00ns
.ret.exitStub:5  %tmp_61 = call i176 @_ssdm_op_BitConcatenate.i176.i16.i32.i32.i32.i32.i32(i16 0, i32 %tmp_60, i32 %tmp_59, i32 %tmp_58, i32 %tmp_57, i32 %tmp_56)

ST_13: context42_part_set [1/1] 0.00ns
.ret.exitStub:6  %context42_part_set = call i688 @_ssdm_op_PartSet.i688.i688.i176.i32.i32(i688 %context_read, i176 %tmp_61, i32 0, i32 175)

ST_13: stg_271 [1/1] 0.00ns
.ret.exitStub:7  call void @_ssdm_op_Write.ap_auto.i688P(i688* %context, i688 %context42_part_set)

ST_13: stg_272 [1/1] 0.00ns
.ret.exitStub:8  ret void


 <State 14>: 6.65ns
ST_14: stg_273 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str6) nounwind

ST_14: W_load_7 [1/2] 2.71ns
:8  %W_load_7 = load i32* %W_addr_9, align 4

ST_14: tmp13 [1/1] 1.97ns
:9  %tmp13 = add i32 %W_load_7, %tmp_65

ST_14: temp_3 [1/1] 1.97ns
:12  %temp_3 = add i32 %tmp15, %tmp13

ST_14: stg_277 [1/1] 0.00ns
:17  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
