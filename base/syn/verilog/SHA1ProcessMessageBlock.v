// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SHA1ProcessMessageBlock,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.513240,HLS_SYN_LAT=555,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1198,HLS_SYN_LUT=2626}" *)

module SHA1ProcessMessageBlock (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        context_Intermediate_Hash_address0,
        context_Intermediate_Hash_ce0,
        context_Intermediate_Hash_we0,
        context_Intermediate_Hash_d0,
        context_Intermediate_Hash_q0,
        context_Intermediate_Hash_address1,
        context_Intermediate_Hash_ce1,
        context_Intermediate_Hash_we1,
        context_Intermediate_Hash_d1,
        context_Intermediate_Hash_q1,
        context_Message_Block_Index,
        context_Message_Block_Index_ap_vld,
        context_Message_Block_address0,
        context_Message_Block_ce0,
        context_Message_Block_q0,
        context_Message_Block_address1,
        context_Message_Block_ce1,
        context_Message_Block_q1
);

parameter    ap_ST_st1_fsm_0 = 25'b1;
parameter    ap_ST_st2_fsm_1 = 25'b10;
parameter    ap_ST_st3_fsm_2 = 25'b100;
parameter    ap_ST_st4_fsm_3 = 25'b1000;
parameter    ap_ST_st5_fsm_4 = 25'b10000;
parameter    ap_ST_st6_fsm_5 = 25'b100000;
parameter    ap_ST_st7_fsm_6 = 25'b1000000;
parameter    ap_ST_st8_fsm_7 = 25'b10000000;
parameter    ap_ST_st9_fsm_8 = 25'b100000000;
parameter    ap_ST_st10_fsm_9 = 25'b1000000000;
parameter    ap_ST_st11_fsm_10 = 25'b10000000000;
parameter    ap_ST_st12_fsm_11 = 25'b100000000000;
parameter    ap_ST_st13_fsm_12 = 25'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 25'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 25'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 25'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 25'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 25'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 25'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 25'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 25'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 25'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 25'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 25'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 25'b1000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv6_14 = 6'b10100;
parameter    ap_const_lv6_28 = 6'b101000;
parameter    ap_const_lv7_3C = 7'b111100;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_5 = 6'b101;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv7_7D = 7'b1111101;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv7_72 = 7'b1110010;
parameter    ap_const_lv7_70 = 7'b1110000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_5A827999 = 32'b1011010100000100111100110011001;
parameter    ap_const_lv32_6ED9EBA1 = 32'b1101110110110011110101110100001;
parameter    ap_const_lv6_3C = 6'b111100;
parameter    ap_const_lv32_8F1BBCDC = 32'b10001111000110111011110011011100;
parameter    ap_const_lv32_CA62C1D6 = 32'b11001010011000101100000111010110;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] context_Intermediate_Hash_address0;
output   context_Intermediate_Hash_ce0;
output   context_Intermediate_Hash_we0;
output  [31:0] context_Intermediate_Hash_d0;
input  [31:0] context_Intermediate_Hash_q0;
output  [2:0] context_Intermediate_Hash_address1;
output   context_Intermediate_Hash_ce1;
output   context_Intermediate_Hash_we1;
output  [31:0] context_Intermediate_Hash_d1;
input  [31:0] context_Intermediate_Hash_q1;
output  [15:0] context_Message_Block_Index;
output   context_Message_Block_Index_ap_vld;
output  [5:0] context_Message_Block_address0;
output   context_Message_Block_ce0;
input  [7:0] context_Message_Block_q0;
output  [5:0] context_Message_Block_address1;
output   context_Message_Block_ce1;
input  [7:0] context_Message_Block_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] context_Intermediate_Hash_address0;
reg context_Intermediate_Hash_ce0;
reg context_Intermediate_Hash_we0;
reg[31:0] context_Intermediate_Hash_d0;
reg[2:0] context_Intermediate_Hash_address1;
reg context_Intermediate_Hash_ce1;
reg context_Intermediate_Hash_we1;
reg[31:0] context_Intermediate_Hash_d1;
reg context_Message_Block_Index_ap_vld;
reg[5:0] context_Message_Block_address0;
reg context_Message_Block_ce0;
reg[5:0] context_Message_Block_address1;
reg context_Message_Block_ce1;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_40;
wire   [31:0] grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return;
reg   [31:0] reg_627;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_78;
wire   [0:0] exitcond3_fu_844_p2;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_89;
wire   [0:0] exitcond2_fu_909_p2;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_100;
wire   [0:0] exitcond1_fu_962_p2;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_111;
wire   [0:0] exitcond_fu_1027_p2;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_124;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_131;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_148;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_155;
wire   [4:0] t_6_fu_697_p2;
reg   [4:0] t_6_reg_1112;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_169;
wire   [5:0] tmp_1_fu_707_p3;
reg   [5:0] tmp_1_reg_1117;
wire   [0:0] exitcond5_fu_691_p2;
reg   [7:0] context_Message_Block_load_reg_1133;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_186;
reg   [7:0] context_Message_Block_load_1_reg_1138;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_200;
wire   [0:0] exitcond4_fu_767_p2;
wire   [31:0] W_q0;
reg   [31:0] W_load_reg_1172;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_218;
wire   [31:0] W_q1;
reg   [31:0] W_load_1_reg_1177;
wire   [31:0] tmp_20_fu_827_p2;
reg   [31:0] tmp_20_reg_1192;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_233;
wire   [6:0] t_7_fu_838_p2;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_242;
reg   [31:0] A_reg_1202;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_250;
wire   [2:0] context_Intermediate_Hash_addr_1_reg_1208;
wire   [2:0] context_Intermediate_Hash_addr_2_reg_1213;
reg   [31:0] B_reg_1218;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_262;
reg   [31:0] C_reg_1224;
reg   [31:0] D_reg_1242;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_275;
reg   [31:0] E_reg_1248;
wire   [4:0] t_8_fu_850_p2;
reg   [4:0] t_8_reg_1257;
wire   [31:0] temp_fu_903_p2;
reg   [31:0] temp_reg_1267;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_289;
wire   [5:0] t_9_fu_920_p2;
reg   [5:0] t_9_reg_1280;
wire   [31:0] temp_1_fu_956_p2;
reg   [31:0] temp_1_reg_1285;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_302;
wire   [5:0] t_10_fu_973_p2;
reg   [5:0] t_10_reg_1298;
wire   [31:0] temp_2_fu_1021_p2;
reg   [31:0] temp_2_reg_1303;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_315;
wire   [6:0] t_11_fu_1038_p2;
reg   [6:0] t_11_reg_1316;
wire   [31:0] temp_3_fu_1086_p2;
reg   [31:0] temp_3_reg_1321;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_328;
wire   [31:0] tmp_52_fu_1104_p2;
reg   [31:0] tmp_52_reg_1326;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_337;
reg   [6:0] W_address0;
reg    W_ce0;
reg    W_we0;
wire   [31:0] W_d0;
reg   [6:0] W_address1;
reg    W_ce1;
reg    W_we1;
reg   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_B;
reg   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r;
reg   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_D;
reg   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_E;
reg   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_A;
wire   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
wire   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
wire   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
wire   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
wire   [31:0] grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
reg   [5:0] grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits;
reg   [31:0] grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word;
reg   [4:0] t_reg_286;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_379;
reg   [6:0] t_1_reg_298;
reg   [31:0] E1_reg_310;
reg   [31:0] D1_reg_320;
reg   [31:0] C1_reg_330;
reg   [31:0] B1_reg_340;
reg   [31:0] A1_reg_350;
reg   [4:0] t_2_reg_360;
reg   [31:0] E_s_reg_371;
reg   [31:0] D_s_reg_382;
reg   [31:0] C_s_reg_393;
reg   [31:0] B_s_reg_404;
reg   [31:0] A_s_reg_415;
reg   [5:0] t_3_reg_426;
reg   [31:0] E_2_reg_437;
reg   [31:0] D_2_reg_448;
reg   [31:0] C_2_reg_459;
reg   [31:0] B_2_reg_470;
reg   [31:0] A_2_reg_481;
reg   [5:0] t_4_reg_492;
reg   [31:0] E_3_reg_503;
reg   [31:0] D_3_reg_514;
reg   [31:0] C_3_reg_525;
reg   [31:0] B_3_reg_536;
reg   [31:0] A_3_reg_547;
reg   [6:0] t_5_reg_558;
wire   [63:0] tmp_2_fu_715_p1;
wire   [63:0] tmp_7_fu_726_p1;
wire   [63:0] tmp_3_fu_736_p1;
wire   [63:0] tmp_4_fu_746_p1;
wire   [63:0] tmp_5_fu_751_p1;
wire   [63:0] tmp_11_fu_779_p1;
wire   [63:0] tmp_13_fu_790_p1;
wire   [63:0] tmp_15_fu_801_p1;
wire   [63:0] tmp_17_fu_812_p1;
wire   [63:0] tmp_22_fu_833_p1;
wire   [63:0] tmp_28_fu_856_p1;
wire   [63:0] tmp_35_fu_915_p1;
wire   [63:0] tmp_44_fu_968_p1;
wire   [63:0] tmp_56_fu_1033_p1;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_472;
wire   [31:0] tmp_49_fu_1050_p2;
wire   [31:0] tmp_51_fu_1098_p2;
wire   [31:0] tmp_48_fu_1044_p2;
wire   [31:0] tmp_50_fu_1092_p2;
wire   [3:0] tmp_fu_703_p1;
wire   [5:0] tmp_6_fu_720_p2;
wire   [5:0] tmp_s_fu_731_p2;
wire   [5:0] tmp_8_fu_741_p2;
wire   [6:0] tmp_10_fu_773_p2;
wire   [6:0] tmp_12_fu_784_p2;
wire   [6:0] tmp_14_fu_795_p2;
wire   [6:0] tmp_16_fu_806_p2;
wire   [31:0] tmp_18_fu_817_p2;
wire   [31:0] tmp_19_fu_821_p2;
wire   [31:0] tmp_25_fu_867_p2;
wire   [31:0] tmp_26_fu_873_p2;
wire   [31:0] tmp_24_fu_861_p2;
wire   [31:0] tmp_29_fu_885_p2;
wire   [31:0] tmp_30_fu_891_p2;
wire   [31:0] tmp_27_fu_879_p2;
wire   [31:0] tmp_31_fu_897_p2;
wire   [31:0] tmp_33_fu_926_p2;
wire   [31:0] tmp_36_fu_938_p2;
wire   [31:0] tmp_34_fu_932_p2;
wire   [31:0] tmp_37_fu_944_p2;
wire   [31:0] tmp_38_fu_950_p2;
wire   [31:0] tmp_40_fu_979_p2;
wire   [31:0] tmp_41_fu_985_p2;
wire   [31:0] tmp_42_fu_991_p2;
wire   [31:0] tmp_45_fu_1003_p2;
wire   [31:0] tmp_46_fu_1009_p2;
wire   [31:0] tmp_47_fu_1015_p2;
wire   [31:0] tmp_43_fu_997_p2;
wire   [31:0] tmp_54_fu_1056_p2;
wire   [31:0] tmp_57_fu_1068_p2;
wire   [31:0] tmp_55_fu_1062_p2;
wire   [31:0] tmp_58_fu_1074_p2;
wire   [31:0] tmp_59_fu_1080_p2;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'b1;
end

SHA1ProcessMessageBlock_W #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
W_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_address0),
    .ce0(W_ce0),
    .we0(W_we0),
    .d0(W_d0),
    .q0(W_q0),
    .address1(W_address1),
    .ce1(W_ce1),
    .we1(W_we1),
    .d1(grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return),
    .q1(W_q1)
);

SHA1ProcessMessageBlock_Swapping grp_SHA1ProcessMessageBlock_Swapping_fu_569(
    .B(grp_SHA1ProcessMessageBlock_Swapping_fu_569_B),
    .B_r(grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r),
    .D(grp_SHA1ProcessMessageBlock_Swapping_fu_569_D),
    .E(grp_SHA1ProcessMessageBlock_Swapping_fu_569_E),
    .A(grp_SHA1ProcessMessageBlock_Swapping_fu_569_A),
    .ap_return_0(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0),
    .ap_return_1(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1),
    .ap_return_2(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2),
    .ap_return_3(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3),
    .ap_return_4(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4)
);

SHA1ProcessMessageBlock_SHA1CircularShift grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594(
    .bits(grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits),
    .word(grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word),
    .ap_return(grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        A1_reg_350 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        A1_reg_350 <= A_reg_1202;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond2_fu_909_p2))) begin
        A_2_reg_481 <= A_s_reg_415;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        A_2_reg_481 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == exitcond1_fu_962_p2))) begin
        A_3_reg_547 <= A_2_reg_481;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        A_3_reg_547 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(exitcond3_fu_844_p2 == 1'b0))) begin
        A_s_reg_415 <= A1_reg_350;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        A_s_reg_415 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        B1_reg_340 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        B1_reg_340 <= B_reg_1218;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond2_fu_909_p2))) begin
        B_2_reg_470 <= B_s_reg_404;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        B_2_reg_470 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == exitcond1_fu_962_p2))) begin
        B_3_reg_536 <= B_2_reg_470;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        B_3_reg_536 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(exitcond3_fu_844_p2 == 1'b0))) begin
        B_s_reg_404 <= B1_reg_340;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        B_s_reg_404 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        C1_reg_330 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        C1_reg_330 <= C_reg_1224;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond2_fu_909_p2))) begin
        C_2_reg_459 <= C_s_reg_393;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        C_2_reg_459 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == exitcond1_fu_962_p2))) begin
        C_3_reg_525 <= C_2_reg_459;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        C_3_reg_525 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(exitcond3_fu_844_p2 == 1'b0))) begin
        C_s_reg_393 <= C1_reg_330;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        C_s_reg_393 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        D1_reg_320 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        D1_reg_320 <= context_Intermediate_Hash_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond2_fu_909_p2))) begin
        D_2_reg_448 <= D_s_reg_382;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        D_2_reg_448 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == exitcond1_fu_962_p2))) begin
        D_3_reg_514 <= D_2_reg_448;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        D_3_reg_514 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(exitcond3_fu_844_p2 == 1'b0))) begin
        D_s_reg_382 <= D1_reg_320;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        D_s_reg_382 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        E1_reg_310 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        E1_reg_310 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond2_fu_909_p2))) begin
        E_2_reg_437 <= E_s_reg_371;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        E_2_reg_437 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == exitcond1_fu_962_p2))) begin
        E_3_reg_503 <= E_2_reg_437;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        E_3_reg_503 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(exitcond3_fu_844_p2 == 1'b0))) begin
        E_s_reg_371 <= E1_reg_310;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        E_s_reg_371 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond5_fu_691_p2))) begin
        t_1_reg_298 <= ap_const_lv7_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        t_1_reg_298 <= t_7_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        t_2_reg_360 <= t_8_reg_1257;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        t_2_reg_360 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(exitcond3_fu_844_p2 == 1'b0))) begin
        t_3_reg_426 <= ap_const_lv6_14;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        t_3_reg_426 <= t_9_reg_1280;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond2_fu_909_p2))) begin
        t_4_reg_492 <= ap_const_lv6_28;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        t_4_reg_492 <= t_10_reg_1298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == exitcond1_fu_962_p2))) begin
        t_5_reg_558 <= ap_const_lv7_3C;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        t_5_reg_558 <= t_11_reg_1316;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        t_reg_286 <= t_6_reg_1112;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        t_reg_286 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        A_reg_1202 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        B_reg_1218 <= context_Intermediate_Hash_q0;
        C_reg_1224 <= context_Intermediate_Hash_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        D_reg_1242 <= context_Intermediate_Hash_q1;
        E_reg_1248 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_load_1_reg_1177 <= W_q1;
        W_load_reg_1172 <= W_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_load_1_reg_1138 <= context_Message_Block_q1;
        context_Message_Block_load_reg_1133 <= context_Message_Block_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (exitcond3_fu_844_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond2_fu_909_p2)) | ((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & (1'b0 == exitcond1_fu_962_p2)) | ((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == exitcond_fu_1027_p2)))) begin
        reg_627 <= grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & (1'b0 == exitcond1_fu_962_p2))) begin
        t_10_reg_1298 <= t_10_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == exitcond_fu_1027_p2))) begin
        t_11_reg_1316 <= t_11_fu_1038_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        t_6_reg_1112 <= t_6_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        t_8_reg_1257 <= t_8_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond2_fu_909_p2))) begin
        t_9_reg_1280 <= t_9_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        temp_1_reg_1285 <= temp_1_fu_956_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        temp_2_reg_1303 <= temp_2_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        temp_3_reg_1321 <= temp_3_fu_1086_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        temp_reg_1267 <= temp_fu_903_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond5_fu_691_p2))) begin
        tmp_1_reg_1117[5 : 2] <= tmp_1_fu_707_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_20_reg_1192 <= tmp_20_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        tmp_52_reg_1326 <= tmp_52_fu_1104_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_address0 = tmp_5_fu_751_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        W_address0 = tmp_44_fu_968_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        W_address0 = tmp_28_fu_856_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address0 = tmp_17_fu_812_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address0 = tmp_11_fu_779_p1;
    end else begin
        W_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        W_address1 = tmp_22_fu_833_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        W_address1 = tmp_56_fu_1033_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        W_address1 = tmp_35_fu_915_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address1 = tmp_15_fu_801_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address1 = tmp_13_fu_790_p1;
    end else begin
        W_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        W_ce0 = 1'b1;
    end else begin
        W_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        W_ce1 = 1'b1;
    end else begin
        W_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_we0 = 1'b1;
    end else begin
        W_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        W_we1 = 1'b1;
    end else begin
        W_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_262) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_275) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_78) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_289) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_124) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_89) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_302) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_148) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_100) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_315) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_40) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_131) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_111) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_328) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_155) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_337) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_472) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_169) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_186) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_379) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_200) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_218) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_233) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_242) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_250) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        context_Intermediate_Hash_address0 = context_Intermediate_Hash_addr_1_reg_1208;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_0;
    end else begin
        context_Intermediate_Hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        context_Intermediate_Hash_address1 = context_Intermediate_Hash_addr_2_reg_1213;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_2;
    end else begin
        context_Intermediate_Hash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23))) begin
        context_Intermediate_Hash_ce0 = 1'b1;
    end else begin
        context_Intermediate_Hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24))) begin
        context_Intermediate_Hash_ce1 = 1'b1;
    end else begin
        context_Intermediate_Hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        context_Intermediate_Hash_d0 = tmp_51_fu_1098_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        context_Intermediate_Hash_d0 = tmp_49_fu_1050_p2;
    end else begin
        context_Intermediate_Hash_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        context_Intermediate_Hash_d1 = tmp_52_reg_1326;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        context_Intermediate_Hash_d1 = tmp_50_fu_1092_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        context_Intermediate_Hash_d1 = tmp_48_fu_1044_p2;
    end else begin
        context_Intermediate_Hash_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) | ((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond_fu_1027_p2)))) begin
        context_Intermediate_Hash_we0 = 1'b1;
    end else begin
        context_Intermediate_Hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | ((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond_fu_1027_p2)))) begin
        context_Intermediate_Hash_we1 = 1'b1;
    end else begin
        context_Intermediate_Hash_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        context_Message_Block_Index_ap_vld = 1'b1;
    end else begin
        context_Message_Block_Index_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_address0 = tmp_3_fu_736_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        context_Message_Block_address0 = tmp_2_fu_715_p1;
    end else begin
        context_Message_Block_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_address1 = tmp_4_fu_746_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        context_Message_Block_address1 = tmp_7_fu_726_p1;
    end else begin
        context_Message_Block_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        context_Message_Block_ce0 = 1'b1;
    end else begin
        context_Message_Block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        context_Message_Block_ce1 = 1'b1;
    end else begin
        context_Message_Block_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (exitcond3_fu_844_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond2_fu_909_p2)) | ((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & (1'b0 == exitcond1_fu_962_p2)) | ((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == exitcond_fu_1027_p2)))) begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits = ap_const_lv6_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits = ap_const_lv6_1;
    end else begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == exitcond_fu_1027_p2))) begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = A_3_reg_547;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & (1'b0 == exitcond1_fu_962_p2))) begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = A_2_reg_481;
    end else if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond2_fu_909_p2))) begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = A_s_reg_415;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (exitcond3_fu_844_p2 == 1'b0))) begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = A1_reg_350;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = tmp_20_reg_1192;
    end else begin
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = temp_3_reg_1321;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = temp_2_reg_1303;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = temp_1_reg_1285;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = temp_reg_1267;
    end else begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = A_3_reg_547;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = A_2_reg_481;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = A_s_reg_415;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = A1_reg_350;
    end else begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = B_3_reg_536;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = B_2_reg_470;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = B_s_reg_404;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = B1_reg_340;
    end else begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = C_3_reg_525;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = C_2_reg_459;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = C_s_reg_393;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = C1_reg_330;
    end else begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = D_3_reg_514;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = D_2_reg_448;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = D_s_reg_382;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = D1_reg_320;
    end else begin
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond5_fu_691_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond4_fu_767_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            if (~(exitcond3_fu_844_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st15_fsm_14 : begin
            if (~(1'b0 == exitcond2_fu_909_p2)) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st18_fsm_17 : begin
            if (~(1'b0 == exitcond1_fu_962_p2)) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st21_fsm_20 : begin
            if (~(1'b0 == exitcond_fu_1027_p2)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_d0 = {{{{context_Message_Block_load_reg_1133}, {context_Message_Block_load_1_reg_1138}}, {context_Message_Block_q0}}, {context_Message_Block_q1}};

always @ (*) begin
    ap_sig_100 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_111 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_124 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_131 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_148 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_155 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_169 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_186 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_200 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_218 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_233 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_242 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_250 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_262 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_275 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_289 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_302 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_315 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_328 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_337 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_379 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_40 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_472 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_78 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_89 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

assign context_Intermediate_Hash_addr_1_reg_1208 = ap_const_lv64_1;

assign context_Intermediate_Hash_addr_2_reg_1213 = ap_const_lv64_2;

assign context_Message_Block_Index = ap_const_lv16_0;

assign exitcond1_fu_962_p2 = ((t_4_reg_492 == ap_const_lv6_3C) ? 1'b1 : 1'b0);

assign exitcond2_fu_909_p2 = ((t_3_reg_426 == ap_const_lv6_28) ? 1'b1 : 1'b0);

assign exitcond3_fu_844_p2 = ((t_2_reg_360 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond4_fu_767_p2 = ((t_1_reg_298 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign exitcond5_fu_691_p2 = ((t_reg_286 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_1027_p2 = ((t_5_reg_558 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign t_10_fu_973_p2 = (t_4_reg_492 + ap_const_lv6_1);

assign t_11_fu_1038_p2 = (t_5_reg_558 + ap_const_lv7_1);

assign t_6_fu_697_p2 = (t_reg_286 + ap_const_lv5_1);

assign t_7_fu_838_p2 = (t_1_reg_298 + ap_const_lv7_1);

assign t_8_fu_850_p2 = (t_2_reg_360 + ap_const_lv5_1);

assign t_9_fu_920_p2 = (t_3_reg_426 + ap_const_lv6_1);

assign temp_1_fu_956_p2 = (tmp_38_fu_950_p2 + W_q1);

assign temp_2_fu_1021_p2 = (tmp_47_fu_1015_p2 + tmp_43_fu_997_p2);

assign temp_3_fu_1086_p2 = (tmp_59_fu_1080_p2 + W_q1);

assign temp_fu_903_p2 = (tmp_31_fu_897_p2 + W_q0);

assign tmp_10_fu_773_p2 = ($signed(t_1_reg_298) + $signed(ap_const_lv7_7D));

assign tmp_11_fu_779_p1 = tmp_10_fu_773_p2;

assign tmp_12_fu_784_p2 = ($signed(t_1_reg_298) + $signed(ap_const_lv7_78));

assign tmp_13_fu_790_p1 = tmp_12_fu_784_p2;

assign tmp_14_fu_795_p2 = ($signed(t_1_reg_298) + $signed(ap_const_lv7_72));

assign tmp_15_fu_801_p1 = tmp_14_fu_795_p2;

assign tmp_16_fu_806_p2 = ($signed(t_1_reg_298) + $signed(ap_const_lv7_70));

assign tmp_17_fu_812_p1 = tmp_16_fu_806_p2;

assign tmp_18_fu_817_p2 = (W_load_1_reg_1177 ^ W_load_reg_1172);

assign tmp_19_fu_821_p2 = (tmp_18_fu_817_p2 ^ W_q1);

assign tmp_1_fu_707_p3 = {{tmp_fu_703_p1}, {ap_const_lv2_0}};

assign tmp_20_fu_827_p2 = (tmp_19_fu_821_p2 ^ W_q0);

assign tmp_22_fu_833_p1 = t_1_reg_298;

assign tmp_24_fu_861_p2 = (C1_reg_330 & B1_reg_340);

assign tmp_25_fu_867_p2 = (B1_reg_340 ^ ap_const_lv32_FFFFFFFF);

assign tmp_26_fu_873_p2 = (D1_reg_320 & tmp_25_fu_867_p2);

assign tmp_27_fu_879_p2 = (tmp_26_fu_873_p2 | tmp_24_fu_861_p2);

assign tmp_28_fu_856_p1 = t_2_reg_360;

assign tmp_29_fu_885_p2 = (reg_627 + ap_const_lv32_5A827999);

assign tmp_2_fu_715_p1 = tmp_1_fu_707_p3;

assign tmp_30_fu_891_p2 = (tmp_29_fu_885_p2 + E1_reg_310);

assign tmp_31_fu_897_p2 = (tmp_30_fu_891_p2 + tmp_27_fu_879_p2);

assign tmp_33_fu_926_p2 = (C_s_reg_393 ^ B_s_reg_404);

assign tmp_34_fu_932_p2 = (tmp_33_fu_926_p2 ^ D_s_reg_382);

assign tmp_35_fu_915_p1 = t_3_reg_426;

assign tmp_36_fu_938_p2 = (reg_627 + ap_const_lv32_6ED9EBA1);

assign tmp_37_fu_944_p2 = (tmp_36_fu_938_p2 + tmp_34_fu_932_p2);

assign tmp_38_fu_950_p2 = (tmp_37_fu_944_p2 + E_s_reg_371);

assign tmp_3_fu_736_p1 = tmp_s_fu_731_p2;

assign tmp_40_fu_979_p2 = (D_2_reg_448 | C_2_reg_459);

assign tmp_41_fu_985_p2 = (tmp_40_fu_979_p2 & B_2_reg_470);

assign tmp_42_fu_991_p2 = (D_2_reg_448 & C_2_reg_459);

assign tmp_43_fu_997_p2 = (tmp_41_fu_985_p2 | tmp_42_fu_991_p2);

assign tmp_44_fu_968_p1 = t_4_reg_492;

assign tmp_45_fu_1003_p2 = ($signed(reg_627) + $signed(ap_const_lv32_8F1BBCDC));

assign tmp_46_fu_1009_p2 = (tmp_45_fu_1003_p2 + E_2_reg_437);

assign tmp_47_fu_1015_p2 = (tmp_46_fu_1009_p2 + W_q0);

assign tmp_48_fu_1044_p2 = (A_reg_1202 + A_3_reg_547);

assign tmp_49_fu_1050_p2 = (B_reg_1218 + B_3_reg_536);

assign tmp_4_fu_746_p1 = tmp_8_fu_741_p2;

assign tmp_50_fu_1092_p2 = (C_reg_1224 + C_3_reg_525);

assign tmp_51_fu_1098_p2 = (D_reg_1242 + D_3_reg_514);

assign tmp_52_fu_1104_p2 = (E_reg_1248 + E_3_reg_503);

assign tmp_54_fu_1056_p2 = (C_3_reg_525 ^ B_3_reg_536);

assign tmp_55_fu_1062_p2 = (tmp_54_fu_1056_p2 ^ D_3_reg_514);

assign tmp_56_fu_1033_p1 = t_5_reg_558;

assign tmp_57_fu_1068_p2 = ($signed(reg_627) + $signed(ap_const_lv32_CA62C1D6));

assign tmp_58_fu_1074_p2 = (tmp_57_fu_1068_p2 + tmp_55_fu_1062_p2);

assign tmp_59_fu_1080_p2 = (tmp_58_fu_1074_p2 + E_3_reg_503);

assign tmp_5_fu_751_p1 = t_reg_286;

assign tmp_6_fu_720_p2 = (tmp_1_fu_707_p3 | ap_const_lv6_1);

assign tmp_7_fu_726_p1 = tmp_6_fu_720_p2;

assign tmp_8_fu_741_p2 = (tmp_1_reg_1117 | ap_const_lv6_3);

assign tmp_fu_703_p1 = t_reg_286[3:0];

assign tmp_s_fu_731_p2 = (tmp_1_reg_1117 | ap_const_lv6_2);

always @ (posedge ap_clk) begin
    tmp_1_reg_1117[1:0] <= 2'b00;
end

endmodule //SHA1ProcessMessageBlock
