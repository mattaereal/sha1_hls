// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SHA1ProcessMessageBlock,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.280000,HLS_SYN_LAT=414,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1164,HLS_SYN_LUT=1944}" *)

module SHA1ProcessMessageBlock (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        context_Intermediate_Hash_address0,
        context_Intermediate_Hash_ce0,
        context_Intermediate_Hash_we0,
        context_Intermediate_Hash_d0,
        context_Intermediate_Hash_q0,
        context_Intermediate_Hash_address1,
        context_Intermediate_Hash_ce1,
        context_Intermediate_Hash_we1,
        context_Intermediate_Hash_d1,
        context_Intermediate_Hash_q1,
        context_Message_Block_Index,
        context_Message_Block_Index_ap_vld,
        context_Message_Block_address0,
        context_Message_Block_ce0,
        context_Message_Block_q0,
        context_Message_Block_address1,
        context_Message_Block_ce1,
        context_Message_Block_q1
);

parameter    ap_ST_st1_fsm_0 = 23'b1;
parameter    ap_ST_st2_fsm_1 = 23'b10;
parameter    ap_ST_st3_fsm_2 = 23'b100;
parameter    ap_ST_st4_fsm_3 = 23'b1000;
parameter    ap_ST_st5_fsm_4 = 23'b10000;
parameter    ap_ST_st6_fsm_5 = 23'b100000;
parameter    ap_ST_st7_fsm_6 = 23'b1000000;
parameter    ap_ST_st8_fsm_7 = 23'b10000000;
parameter    ap_ST_st9_fsm_8 = 23'b100000000;
parameter    ap_ST_st10_fsm_9 = 23'b1000000000;
parameter    ap_ST_st11_fsm_10 = 23'b10000000000;
parameter    ap_ST_st12_fsm_11 = 23'b100000000000;
parameter    ap_ST_st13_fsm_12 = 23'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 23'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 23'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 23'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 23'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 23'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 23'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 23'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 23'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 23'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 23'b10000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv6_14 = 6'b10100;
parameter    ap_const_lv6_28 = 6'b101000;
parameter    ap_const_lv7_3C = 7'b111100;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv7_7D = 7'b1111101;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv7_72 = 7'b1110010;
parameter    ap_const_lv7_70 = 7'b1110000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv6_3C = 6'b111100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] context_Intermediate_Hash_address0;
output   context_Intermediate_Hash_ce0;
output   context_Intermediate_Hash_we0;
output  [31:0] context_Intermediate_Hash_d0;
input  [31:0] context_Intermediate_Hash_q0;
output  [2:0] context_Intermediate_Hash_address1;
output   context_Intermediate_Hash_ce1;
output   context_Intermediate_Hash_we1;
output  [31:0] context_Intermediate_Hash_d1;
input  [31:0] context_Intermediate_Hash_q1;
output  [15:0] context_Message_Block_Index;
output   context_Message_Block_Index_ap_vld;
output  [5:0] context_Message_Block_address0;
output   context_Message_Block_ce0;
input  [7:0] context_Message_Block_q0;
output  [5:0] context_Message_Block_address1;
output   context_Message_Block_ce1;
input  [7:0] context_Message_Block_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] context_Intermediate_Hash_address0;
reg context_Intermediate_Hash_ce0;
reg context_Intermediate_Hash_we0;
reg[31:0] context_Intermediate_Hash_d0;
reg[2:0] context_Intermediate_Hash_address1;
reg context_Intermediate_Hash_ce1;
reg context_Intermediate_Hash_we1;
reg[31:0] context_Intermediate_Hash_d1;
reg context_Message_Block_Index_ap_vld;
reg[5:0] context_Message_Block_address0;
reg context_Message_Block_ce0;
reg[5:0] context_Message_Block_address1;
reg context_Message_Block_ce1;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_38;
reg   [1:0] K_address0;
reg    K_ce0;
wire   [31:0] K_q0;
reg   [31:0] reg_607;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_82;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_89;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_97;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_105;
wire   [4:0] t_6_fu_629_p2;
reg   [4:0] t_6_reg_1214;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_115;
wire   [5:0] tmp_1_fu_639_p3;
reg   [5:0] tmp_1_reg_1219;
wire   [0:0] exitcond5_fu_623_p2;
reg   [7:0] context_Message_Block_load_reg_1235;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_133;
reg   [7:0] context_Message_Block_load_1_reg_1240;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_147;
wire   [0:0] exitcond4_fu_699_p2;
wire   [31:0] W_q0;
reg   [31:0] W_load_reg_1274;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_165;
wire   [31:0] W_q1;
reg   [31:0] W_load_1_reg_1279;
wire   [6:0] t_7_fu_791_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_180;
reg   [31:0] A_reg_1299;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_188;
wire   [2:0] context_Intermediate_Hash_addr_1_reg_1305;
wire   [2:0] context_Intermediate_Hash_addr_2_reg_1310;
reg   [31:0] B_reg_1315;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_200;
reg   [31:0] C_reg_1321;
reg   [31:0] D_reg_1339;
reg   [31:0] E_reg_1345;
wire   [4:0] t_8_fu_803_p2;
reg   [4:0] t_8_reg_1354;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_216;
wire   [0:0] exitcond3_fu_797_p2;
wire   [31:0] temp_fu_872_p2;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_230;
wire   [31:0] C_1_fu_892_p3;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_241;
wire   [0:0] exitcond2_fu_900_p2;
wire   [5:0] t_9_fu_911_p2;
reg   [5:0] t_9_reg_1382;
wire   [31:0] temp_1_fu_963_p2;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_255;
wire   [31:0] C_2_fu_983_p3;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_266;
wire   [0:0] exitcond1_fu_991_p2;
wire   [5:0] t_10_fu_1002_p2;
reg   [5:0] t_10_reg_1405;
wire   [31:0] temp_2_fu_1066_p2;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_280;
wire   [31:0] C_3_fu_1086_p3;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_291;
wire   [0:0] exitcond_fu_1094_p2;
wire   [31:0] tmp17_fu_1145_p2;
reg   [31:0] tmp17_reg_1428;
wire   [31:0] C_4_fu_1165_p3;
reg   [31:0] C_4_reg_1433;
wire   [6:0] t_11_fu_1173_p2;
reg   [6:0] t_11_reg_1438;
wire   [31:0] tmp_37_fu_1191_p2;
reg   [31:0] tmp_37_reg_1443;
wire   [31:0] tmp_38_fu_1196_p2;
reg   [31:0] tmp_38_reg_1448;
wire   [31:0] tmp_39_fu_1201_p2;
reg   [31:0] tmp_39_reg_1453;
wire   [31:0] temp_3_fu_1206_p2;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_317;
reg   [6:0] W_address0;
reg    W_ce0;
reg    W_we0;
wire   [31:0] W_d0;
reg   [6:0] W_address1;
reg    W_ce1;
reg    W_we1;
wire   [31:0] W_d1;
reg   [4:0] t_reg_314;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_343;
reg   [6:0] t_1_reg_326;
reg   [31:0] E1_reg_338;
reg   [31:0] E_1_reg_348;
reg   [31:0] D_1_reg_359;
reg   [31:0] B_read_assign_reg_370;
reg   [31:0] B_1_reg_380;
reg   [4:0] t_2_reg_391;
reg   [31:0] E_s_reg_402;
reg   [31:0] E_4_reg_413;
reg   [31:0] D_2_reg_425;
reg   [31:0] B_read_assign_1_reg_437;
reg   [31:0] B_2_reg_448;
reg   [5:0] t_3_reg_460;
reg   [31:0] E_2_reg_471;
reg   [31:0] E_5_reg_482;
reg   [31:0] D_3_reg_494;
reg   [31:0] B_read_assign_2_reg_506;
reg   [31:0] B_3_reg_517;
reg   [5:0] t_4_reg_529;
reg   [31:0] E_3_reg_540;
reg   [31:0] E_6_reg_550;
reg   [31:0] D_4_reg_562;
reg   [31:0] B_read_assign_3_reg_574;
reg   [31:0] B_4_reg_584;
reg   [6:0] t_5_reg_596;
wire   [63:0] tmp_2_fu_647_p1;
wire   [63:0] tmp_7_fu_658_p1;
wire   [63:0] tmp_3_fu_668_p1;
wire   [63:0] tmp_8_fu_678_p1;
wire   [63:0] tmp_5_fu_683_p1;
wire   [63:0] tmp_11_fu_711_p1;
wire   [63:0] tmp_13_fu_722_p1;
wire   [63:0] tmp_15_fu_733_p1;
wire   [63:0] tmp_17_fu_744_p1;
wire   [63:0] tmp_19_fu_786_p1;
wire   [63:0] tmp_25_fu_809_p1;
wire   [63:0] tmp_29_fu_906_p1;
wire   [63:0] tmp_34_fu_997_p1;
wire   [63:0] tmp_41_fu_1134_p1;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_428;
wire   [31:0] tmp_36_fu_1185_p2;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_450;
wire   [31:0] tmp_35_fu_1179_p2;
wire   [3:0] tmp_fu_635_p1;
wire   [5:0] tmp_6_fu_652_p2;
wire   [5:0] tmp_s_fu_663_p2;
wire   [5:0] tmp_4_fu_673_p2;
wire   [6:0] tmp_10_fu_705_p2;
wire   [6:0] tmp_12_fu_716_p2;
wire   [6:0] tmp_14_fu_727_p2;
wire   [6:0] tmp_16_fu_738_p2;
wire   [31:0] tmp4_fu_754_p2;
wire   [31:0] tmp3_fu_749_p2;
wire   [31:0] word_assign_fu_759_p2;
wire   [30:0] tmp_18_fu_765_p1;
wire   [0:0] tmp_20_fu_769_p3;
wire   [26:0] tmp_26_fu_814_p1;
wire   [4:0] tmp_71_i1_fu_818_p4;
wire   [31:0] tmp_22_fu_842_p2;
wire   [31:0] tmp_23_fu_848_p2;
wire   [31:0] tmp_21_fu_836_p2;
wire   [31:0] tmp_24_fu_854_p2;
wire   [31:0] tmp7_fu_860_p2;
wire   [31:0] tmp_72_i1_fu_828_p3;
wire   [31:0] tmp6_fu_866_p2;
wire   [31:0] grp_fu_611_p2;
wire   [1:0] tmp_27_fu_878_p1;
wire   [29:0] tmp_71_i_i_fu_882_p4;
wire   [26:0] tmp_42_fu_917_p1;
wire   [4:0] tmp_71_i2_fu_921_p4;
wire   [31:0] tmp8_fu_939_p2;
wire   [31:0] tmp_28_fu_945_p2;
wire   [31:0] tmp11_fu_951_p2;
wire   [31:0] tmp_72_i2_fu_931_p3;
wire   [31:0] tmp10_fu_957_p2;
wire   [31:0] grp_fu_617_p2;
wire   [1:0] tmp_43_fu_969_p1;
wire   [29:0] tmp_71_i_i1_fu_973_p4;
wire   [26:0] tmp_44_fu_1008_p1;
wire   [4:0] tmp_71_i3_fu_1012_p4;
wire   [31:0] tmp_30_fu_1030_p2;
wire   [31:0] tmp_31_fu_1036_p2;
wire   [31:0] tmp_32_fu_1042_p2;
wire   [31:0] tmp_33_fu_1048_p2;
wire   [31:0] tmp14_fu_1054_p2;
wire   [31:0] tmp_72_i3_fu_1022_p3;
wire   [31:0] tmp13_fu_1060_p2;
wire   [1:0] tmp_45_fu_1072_p1;
wire   [29:0] tmp_71_i_i2_fu_1076_p4;
wire   [26:0] tmp_46_fu_1100_p1;
wire   [4:0] tmp_71_i4_fu_1104_p4;
wire   [31:0] tmp15_fu_1122_p2;
wire   [31:0] tmp_40_fu_1128_p2;
wire   [31:0] tmp18_fu_1139_p2;
wire   [31:0] tmp_72_i4_fu_1114_p3;
wire   [1:0] tmp_47_fu_1151_p1;
wire   [29:0] tmp_71_i_i3_fu_1155_p4;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'b1;
end

SHA1ProcessMessageBlock_K #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
K_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(K_address0),
    .ce0(K_ce0),
    .q0(K_q0)
);

SHA1ProcessMessageBlock_W #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
W_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_address0),
    .ce0(W_ce0),
    .we0(W_we0),
    .d0(W_d0),
    .q0(W_q0),
    .address1(W_address1),
    .ce1(W_ce1),
    .we1(W_we1),
    .d1(W_d1),
    .q1(W_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        B_1_reg_380 <= temp_fu_872_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        B_1_reg_380 <= A_reg_1299;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        B_2_reg_448 <= temp_1_fu_963_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        B_2_reg_448 <= B_1_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        B_3_reg_517 <= temp_2_fu_1066_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        B_3_reg_517 <= B_2_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        B_4_reg_584 <= temp_3_fu_1206_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        B_4_reg_584 <= B_3_reg_517;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        B_read_assign_1_reg_437 <= B_2_reg_448;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        B_read_assign_1_reg_437 <= B_read_assign_reg_370;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        B_read_assign_2_reg_506 <= B_3_reg_517;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        B_read_assign_2_reg_506 <= B_read_assign_1_reg_437;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        B_read_assign_3_reg_574 <= B_4_reg_584;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        B_read_assign_3_reg_574 <= B_read_assign_2_reg_506;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        B_read_assign_reg_370 <= B_1_reg_380;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        B_read_assign_reg_370 <= B_reg_1315;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        D_1_reg_359 <= C_1_fu_892_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        D_1_reg_359 <= C_reg_1321;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        D_2_reg_425 <= C_2_fu_983_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        D_2_reg_425 <= D_1_reg_359;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        D_3_reg_494 <= C_3_fu_1086_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        D_3_reg_494 <= D_2_reg_425;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        D_4_reg_562 <= C_4_reg_1433;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        D_4_reg_562 <= D_3_reg_494;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        E1_reg_338 <= E_1_reg_348;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        E1_reg_338 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        E_1_reg_348 <= D_1_reg_359;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        E_1_reg_348 <= context_Intermediate_Hash_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        E_2_reg_471 <= E_5_reg_482;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        E_2_reg_471 <= E_s_reg_402;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        E_3_reg_540 <= E_6_reg_550;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        E_3_reg_540 <= E_2_reg_471;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        E_4_reg_413 <= D_2_reg_425;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        E_4_reg_413 <= E_1_reg_348;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        E_5_reg_482 <= D_3_reg_494;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        E_5_reg_482 <= E_4_reg_413;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        E_6_reg_550 <= D_4_reg_562;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        E_6_reg_550 <= E_5_reg_482;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        E_s_reg_402 <= E_4_reg_413;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        E_s_reg_402 <= E1_reg_338;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_fu_623_p2 == 1'b0))) begin
        t_1_reg_326 <= ap_const_lv7_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        t_1_reg_326 <= t_7_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        t_2_reg_391 <= t_8_reg_1354;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        t_2_reg_391 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        t_3_reg_460 <= t_9_reg_1382;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        t_3_reg_460 <= ap_const_lv6_14;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        t_4_reg_529 <= t_10_reg_1405;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        t_4_reg_529 <= ap_const_lv6_28;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        t_5_reg_596 <= t_11_reg_1438;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        t_5_reg_596 <= ap_const_lv7_3C;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        t_reg_314 <= t_6_reg_1214;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        t_reg_314 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        A_reg_1299 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        B_reg_1315 <= context_Intermediate_Hash_q0;
        C_reg_1321 <= context_Intermediate_Hash_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (1'b0 == exitcond_fu_1094_p2))) begin
        C_4_reg_1433 <= C_4_fu_1165_p3;
        t_11_reg_1438 <= t_11_fu_1173_p2;
        tmp17_reg_1428 <= tmp17_fu_1145_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        D_reg_1339 <= context_Intermediate_Hash_q1;
        E_reg_1345 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_load_1_reg_1279 <= W_q1;
        W_load_reg_1274 <= W_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_load_1_reg_1240 <= context_Message_Block_q1;
        context_Message_Block_load_reg_1235 <= context_Message_Block_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        reg_607 <= K_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) & (1'b0 == exitcond1_fu_991_p2))) begin
        t_10_reg_1405 <= t_10_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        t_6_reg_1214 <= t_6_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        t_8_reg_1354 <= t_8_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == exitcond2_fu_900_p2))) begin
        t_9_reg_1382 <= t_9_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_fu_623_p2 == 1'b0))) begin
        tmp_1_reg_1219[5 : 2] <= tmp_1_fu_639_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == exitcond_fu_1094_p2))) begin
        tmp_37_reg_1443 <= tmp_37_fu_1191_p2;
        tmp_38_reg_1448 <= tmp_38_fu_1196_p2;
        tmp_39_reg_1453 <= tmp_39_fu_1201_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        K_address0 = ap_const_lv2_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        K_address0 = ap_const_lv2_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        K_address0 = ap_const_lv2_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        K_address0 = ap_const_lv2_0;
    end else begin
        K_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        K_ce0 = 1'b1;
    end else begin
        K_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_address0 = tmp_5_fu_683_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        W_address0 = tmp_34_fu_997_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        W_address0 = tmp_25_fu_809_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address0 = tmp_17_fu_744_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address0 = tmp_11_fu_711_p1;
    end else begin
        W_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        W_address1 = tmp_19_fu_786_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        W_address1 = tmp_41_fu_1134_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        W_address1 = tmp_29_fu_906_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address1 = tmp_15_fu_733_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address1 = tmp_13_fu_722_p1;
    end else begin
        W_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        W_ce0 = 1'b1;
    end else begin
        W_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        W_ce1 = 1'b1;
    end else begin
        W_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_we0 = 1'b1;
    end else begin
        W_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        W_we1 = 1'b1;
    end else begin
        W_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_216) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_230) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_89) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_241) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_255) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_97) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_266) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_280) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_105) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_38) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_291) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_317) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_450) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_428) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_115) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_133) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_343) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_147) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_165) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_180) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_188) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_200) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        context_Intermediate_Hash_address0 = context_Intermediate_Hash_addr_1_reg_1305;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_0;
    end else begin
        context_Intermediate_Hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        context_Intermediate_Hash_address1 = context_Intermediate_Hash_addr_2_reg_1310;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_2;
    end else begin
        context_Intermediate_Hash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        context_Intermediate_Hash_ce0 = 1'b1;
    end else begin
        context_Intermediate_Hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        context_Intermediate_Hash_ce1 = 1'b1;
    end else begin
        context_Intermediate_Hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        context_Intermediate_Hash_d0 = tmp_38_reg_1448;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        context_Intermediate_Hash_d0 = tmp_36_fu_1185_p2;
    end else begin
        context_Intermediate_Hash_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        context_Intermediate_Hash_d1 = tmp_39_reg_1453;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        context_Intermediate_Hash_d1 = tmp_37_reg_1443;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        context_Intermediate_Hash_d1 = tmp_35_fu_1179_p2;
    end else begin
        context_Intermediate_Hash_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == exitcond_fu_1094_p2)) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        context_Intermediate_Hash_we0 = 1'b1;
    end else begin
        context_Intermediate_Hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == exitcond_fu_1094_p2)) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        context_Intermediate_Hash_we1 = 1'b1;
    end else begin
        context_Intermediate_Hash_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        context_Message_Block_Index_ap_vld = 1'b1;
    end else begin
        context_Message_Block_Index_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_address0 = tmp_3_fu_668_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        context_Message_Block_address0 = tmp_2_fu_647_p1;
    end else begin
        context_Message_Block_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_address1 = tmp_8_fu_678_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        context_Message_Block_address1 = tmp_7_fu_658_p1;
    end else begin
        context_Message_Block_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        context_Message_Block_ce0 = 1'b1;
    end else begin
        context_Message_Block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        context_Message_Block_ce1 = 1'b1;
    end else begin
        context_Message_Block_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond5_fu_623_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond4_fu_699_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            if (~(1'b0 == exitcond3_fu_797_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            if (~(1'b0 == exitcond2_fu_900_p2)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            if (~(1'b0 == exitcond1_fu_991_p2)) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            if (~(1'b0 == exitcond_fu_1094_p2)) begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_1_fu_892_p3 = {{tmp_27_fu_878_p1}, {tmp_71_i_i_fu_882_p4}};

assign C_2_fu_983_p3 = {{tmp_43_fu_969_p1}, {tmp_71_i_i1_fu_973_p4}};

assign C_3_fu_1086_p3 = {{tmp_45_fu_1072_p1}, {tmp_71_i_i2_fu_1076_p4}};

assign C_4_fu_1165_p3 = {{tmp_47_fu_1151_p1}, {tmp_71_i_i3_fu_1155_p4}};

assign W_d0 = {{{{context_Message_Block_load_reg_1235}, {context_Message_Block_load_1_reg_1240}}, {context_Message_Block_q0}}, {context_Message_Block_q1}};

assign W_d1 = {{tmp_18_fu_765_p1}, {tmp_20_fu_769_p3}};

always @ (*) begin
    ap_sig_105 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_115 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_133 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_147 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_165 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_180 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_188 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_200 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_216 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_230 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_241 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_255 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_266 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_280 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_291 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_317 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_343 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_38 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_428 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_450 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_82 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_89 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_97 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

assign context_Intermediate_Hash_addr_1_reg_1305 = ap_const_lv64_1;

assign context_Intermediate_Hash_addr_2_reg_1310 = ap_const_lv64_2;

assign context_Message_Block_Index = ap_const_lv16_0;

assign exitcond1_fu_991_p2 = ((t_4_reg_529 == ap_const_lv6_3C) ? 1'b1 : 1'b0);

assign exitcond2_fu_900_p2 = ((t_3_reg_460 == ap_const_lv6_28) ? 1'b1 : 1'b0);

assign exitcond3_fu_797_p2 = ((t_2_reg_391 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond4_fu_699_p2 = ((t_1_reg_326 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign exitcond5_fu_623_p2 = ((t_reg_314 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_1094_p2 = ((t_5_reg_596 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign grp_fu_611_p2 = (reg_607 + W_q0);

assign grp_fu_617_p2 = (reg_607 + W_q1);

assign t_10_fu_1002_p2 = (ap_const_lv6_1 + t_4_reg_529);

assign t_11_fu_1173_p2 = (ap_const_lv7_1 + t_5_reg_596);

assign t_6_fu_629_p2 = (t_reg_314 + ap_const_lv5_1);

assign t_7_fu_791_p2 = (ap_const_lv7_1 + t_1_reg_326);

assign t_8_fu_803_p2 = (t_2_reg_391 + ap_const_lv5_1);

assign t_9_fu_911_p2 = (ap_const_lv6_1 + t_3_reg_460);

assign temp_1_fu_963_p2 = (tmp10_fu_957_p2 + grp_fu_617_p2);

assign temp_2_fu_1066_p2 = (tmp13_fu_1060_p2 + grp_fu_611_p2);

assign temp_3_fu_1206_p2 = (tmp17_reg_1428 + grp_fu_617_p2);

assign temp_fu_872_p2 = (tmp6_fu_866_p2 + grp_fu_611_p2);

assign tmp10_fu_957_p2 = (tmp11_fu_951_p2 + tmp_72_i2_fu_931_p3);

assign tmp11_fu_951_p2 = (tmp_28_fu_945_p2 + E_s_reg_402);

assign tmp13_fu_1060_p2 = (tmp14_fu_1054_p2 + tmp_72_i3_fu_1022_p3);

assign tmp14_fu_1054_p2 = (E_2_reg_471 + tmp_33_fu_1048_p2);

assign tmp15_fu_1122_p2 = (B_read_assign_3_reg_574 ^ E_6_reg_550);

assign tmp17_fu_1145_p2 = (tmp18_fu_1139_p2 + tmp_72_i4_fu_1114_p3);

assign tmp18_fu_1139_p2 = (tmp_40_fu_1128_p2 + E_3_reg_540);

assign tmp3_fu_749_p2 = (W_load_reg_1274 ^ W_q1);

assign tmp4_fu_754_p2 = (W_load_1_reg_1279 ^ W_q0);

assign tmp6_fu_866_p2 = (tmp7_fu_860_p2 + tmp_72_i1_fu_828_p3);

assign tmp7_fu_860_p2 = (E1_reg_338 + tmp_24_fu_854_p2);

assign tmp8_fu_939_p2 = (B_read_assign_1_reg_437 ^ E_4_reg_413);

assign tmp_10_fu_705_p2 = ($signed(ap_const_lv7_7D) + $signed(t_1_reg_326));

assign tmp_11_fu_711_p1 = tmp_10_fu_705_p2;

assign tmp_12_fu_716_p2 = ($signed(ap_const_lv7_78) + $signed(t_1_reg_326));

assign tmp_13_fu_722_p1 = tmp_12_fu_716_p2;

assign tmp_14_fu_727_p2 = ($signed(ap_const_lv7_72) + $signed(t_1_reg_326));

assign tmp_15_fu_733_p1 = tmp_14_fu_727_p2;

assign tmp_16_fu_738_p2 = ($signed(ap_const_lv7_70) + $signed(t_1_reg_326));

assign tmp_17_fu_744_p1 = tmp_16_fu_738_p2;

assign tmp_18_fu_765_p1 = word_assign_fu_759_p2[30:0];

assign tmp_19_fu_786_p1 = t_1_reg_326;

assign tmp_1_fu_639_p3 = {{tmp_fu_635_p1}, {ap_const_lv2_0}};

assign tmp_20_fu_769_p3 = word_assign_fu_759_p2[ap_const_lv32_1F];

assign tmp_21_fu_836_p2 = (D_1_reg_359 & B_read_assign_reg_370);

assign tmp_22_fu_842_p2 = (B_read_assign_reg_370 ^ ap_const_lv32_FFFFFFFF);

assign tmp_23_fu_848_p2 = (E_1_reg_348 & tmp_22_fu_842_p2);

assign tmp_24_fu_854_p2 = (tmp_23_fu_848_p2 | tmp_21_fu_836_p2);

assign tmp_25_fu_809_p1 = t_2_reg_391;

assign tmp_26_fu_814_p1 = B_1_reg_380[26:0];

assign tmp_27_fu_878_p1 = B_read_assign_reg_370[1:0];

assign tmp_28_fu_945_p2 = (tmp8_fu_939_p2 ^ D_2_reg_425);

assign tmp_29_fu_906_p1 = t_3_reg_460;

assign tmp_2_fu_647_p1 = tmp_1_fu_639_p3;

assign tmp_30_fu_1030_p2 = (E_5_reg_482 | D_3_reg_494);

assign tmp_31_fu_1036_p2 = (tmp_30_fu_1030_p2 & B_read_assign_2_reg_506);

assign tmp_32_fu_1042_p2 = (E_5_reg_482 & D_3_reg_494);

assign tmp_33_fu_1048_p2 = (tmp_31_fu_1036_p2 | tmp_32_fu_1042_p2);

assign tmp_34_fu_997_p1 = t_4_reg_529;

assign tmp_35_fu_1179_p2 = (A_reg_1299 + B_4_reg_584);

assign tmp_36_fu_1185_p2 = (B_reg_1315 + B_read_assign_3_reg_574);

assign tmp_37_fu_1191_p2 = (C_reg_1321 + D_4_reg_562);

assign tmp_38_fu_1196_p2 = (D_reg_1339 + E_6_reg_550);

assign tmp_39_fu_1201_p2 = (E_reg_1345 + E_3_reg_540);

assign tmp_3_fu_668_p1 = tmp_s_fu_663_p2;

assign tmp_40_fu_1128_p2 = (tmp15_fu_1122_p2 ^ D_4_reg_562);

assign tmp_41_fu_1134_p1 = t_5_reg_596;

assign tmp_42_fu_917_p1 = B_2_reg_448[26:0];

assign tmp_43_fu_969_p1 = B_read_assign_1_reg_437[1:0];

assign tmp_44_fu_1008_p1 = B_3_reg_517[26:0];

assign tmp_45_fu_1072_p1 = B_read_assign_2_reg_506[1:0];

assign tmp_46_fu_1100_p1 = B_4_reg_584[26:0];

assign tmp_47_fu_1151_p1 = B_read_assign_3_reg_574[1:0];

assign tmp_4_fu_673_p2 = (tmp_1_reg_1219 | ap_const_lv6_3);

assign tmp_5_fu_683_p1 = t_reg_314;

assign tmp_6_fu_652_p2 = (tmp_1_fu_639_p3 | ap_const_lv6_1);

assign tmp_71_i1_fu_818_p4 = {{B_1_reg_380[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_71_i2_fu_921_p4 = {{B_2_reg_448[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_71_i3_fu_1012_p4 = {{B_3_reg_517[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_71_i4_fu_1104_p4 = {{B_4_reg_584[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_71_i_i1_fu_973_p4 = {{B_read_assign_1_reg_437[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_71_i_i2_fu_1076_p4 = {{B_read_assign_2_reg_506[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_71_i_i3_fu_1155_p4 = {{B_read_assign_3_reg_574[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_71_i_i_fu_882_p4 = {{B_read_assign_reg_370[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_72_i1_fu_828_p3 = {{tmp_26_fu_814_p1}, {tmp_71_i1_fu_818_p4}};

assign tmp_72_i2_fu_931_p3 = {{tmp_42_fu_917_p1}, {tmp_71_i2_fu_921_p4}};

assign tmp_72_i3_fu_1022_p3 = {{tmp_44_fu_1008_p1}, {tmp_71_i3_fu_1012_p4}};

assign tmp_72_i4_fu_1114_p3 = {{tmp_46_fu_1100_p1}, {tmp_71_i4_fu_1104_p4}};

assign tmp_7_fu_658_p1 = tmp_6_fu_652_p2;

assign tmp_8_fu_678_p1 = tmp_4_fu_673_p2;

assign tmp_fu_635_p1 = t_reg_314[3:0];

assign tmp_s_fu_663_p2 = (tmp_1_reg_1219 | ap_const_lv6_2);

assign word_assign_fu_759_p2 = (tmp4_fu_754_p2 ^ tmp3_fu_749_p2);

always @ (posedge ap_clk) begin
    tmp_1_reg_1219[1:0] <= 2'b00;
end

endmodule //SHA1ProcessMessageBlock
