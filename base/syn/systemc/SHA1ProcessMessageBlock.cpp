// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "SHA1ProcessMessageBlock.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic SHA1ProcessMessageBlock::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic SHA1ProcessMessageBlock::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st1_fsm_0 = "1";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st2_fsm_1 = "10";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st3_fsm_2 = "100";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st4_fsm_3 = "1000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st5_fsm_4 = "10000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st6_fsm_5 = "100000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<25> SHA1ProcessMessageBlock::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> SHA1ProcessMessageBlock::ap_const_lv1_1 = "1";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_B = "1011";
const sc_lv<1> SHA1ProcessMessageBlock::ap_const_lv1_0 = "0";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_E = "1110";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_11 = "10001";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_14 = "10100";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_D = "1101";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_13 = "10011";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_10 = "10000";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_16 = "10110";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_1 = "1";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_2 = "10";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_4 = "100";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_5 = "101";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_6 = "110";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_7 = "111";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_8 = "1000";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_9 = "1001";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_A = "1010";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_C = "1100";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_F = "1111";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_12 = "10010";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_15 = "10101";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_17 = "10111";
const sc_lv<5> SHA1ProcessMessageBlock::ap_const_lv5_0 = "00000";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_3 = "11";
const sc_lv<7> SHA1ProcessMessageBlock::ap_const_lv7_10 = "10000";
const sc_lv<6> SHA1ProcessMessageBlock::ap_const_lv6_14 = "10100";
const sc_lv<6> SHA1ProcessMessageBlock::ap_const_lv6_28 = "101000";
const sc_lv<7> SHA1ProcessMessageBlock::ap_const_lv7_3C = "111100";
const sc_lv<6> SHA1ProcessMessageBlock::ap_const_lv6_1 = "1";
const sc_lv<6> SHA1ProcessMessageBlock::ap_const_lv6_5 = "101";
const sc_lv<64> SHA1ProcessMessageBlock::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> SHA1ProcessMessageBlock::ap_const_lv64_1 = "1";
const sc_lv<64> SHA1ProcessMessageBlock::ap_const_lv64_2 = "10";
const sc_lv<64> SHA1ProcessMessageBlock::ap_const_lv64_3 = "11";
const sc_lv<64> SHA1ProcessMessageBlock::ap_const_lv64_4 = "100";
const sc_lv<16> SHA1ProcessMessageBlock::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_18 = "11000";
const sc_lv<5> SHA1ProcessMessageBlock::ap_const_lv5_10 = "10000";
const sc_lv<5> SHA1ProcessMessageBlock::ap_const_lv5_1 = "1";
const sc_lv<2> SHA1ProcessMessageBlock::ap_const_lv2_0 = "00";
const sc_lv<6> SHA1ProcessMessageBlock::ap_const_lv6_2 = "10";
const sc_lv<6> SHA1ProcessMessageBlock::ap_const_lv6_3 = "11";
const sc_lv<7> SHA1ProcessMessageBlock::ap_const_lv7_50 = "1010000";
const sc_lv<7> SHA1ProcessMessageBlock::ap_const_lv7_7D = "1111101";
const sc_lv<7> SHA1ProcessMessageBlock::ap_const_lv7_78 = "1111000";
const sc_lv<7> SHA1ProcessMessageBlock::ap_const_lv7_72 = "1110010";
const sc_lv<7> SHA1ProcessMessageBlock::ap_const_lv7_70 = "1110000";
const sc_lv<7> SHA1ProcessMessageBlock::ap_const_lv7_1 = "1";
const sc_lv<5> SHA1ProcessMessageBlock::ap_const_lv5_14 = "10100";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_5A827999 = "1011010100000100111100110011001";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_6ED9EBA1 = "1101110110110011110101110100001";
const sc_lv<6> SHA1ProcessMessageBlock::ap_const_lv6_3C = "111100";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_8F1BBCDC = "10001111000110111011110011011100";
const sc_lv<32> SHA1ProcessMessageBlock::ap_const_lv32_CA62C1D6 = "11001010011000101100000111010110";

SHA1ProcessMessageBlock::SHA1ProcessMessageBlock(sc_module_name name) : sc_module(name), mVcdFile(0) {
    W_U = new SHA1ProcessMessageBlock_W("W_U");
    W_U->clk(ap_clk);
    W_U->reset(ap_rst);
    W_U->address0(W_address0);
    W_U->ce0(W_ce0);
    W_U->we0(W_we0);
    W_U->d0(W_d0);
    W_U->q0(W_q0);
    W_U->address1(W_address1);
    W_U->ce1(W_ce1);
    W_U->we1(W_we1);
    W_U->d1(grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return);
    W_U->q1(W_q1);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569 = new SHA1ProcessMessageBlock_Swapping("grp_SHA1ProcessMessageBlock_Swapping_fu_569");
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->B(grp_SHA1ProcessMessageBlock_Swapping_fu_569_B);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->B_r(grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->D(grp_SHA1ProcessMessageBlock_Swapping_fu_569_D);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->E(grp_SHA1ProcessMessageBlock_Swapping_fu_569_E);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->A(grp_SHA1ProcessMessageBlock_Swapping_fu_569_A);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->ap_return_0(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->ap_return_1(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->ap_return_2(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->ap_return_3(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3);
    grp_SHA1ProcessMessageBlock_Swapping_fu_569->ap_return_4(grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4);
    grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594 = new SHA1ProcessMessageBlock_SHA1CircularShift("grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594");
    grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594->bits(grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits);
    grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594->word(grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word);
    grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594->ap_return(grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_W_address0);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_5_fu_751_p1 );
    sensitive << ( tmp_11_fu_779_p1 );
    sensitive << ( tmp_17_fu_812_p1 );
    sensitive << ( tmp_28_fu_856_p1 );
    sensitive << ( tmp_44_fu_968_p1 );

    SC_METHOD(thread_W_address1);
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( tmp_13_fu_790_p1 );
    sensitive << ( tmp_15_fu_801_p1 );
    sensitive << ( tmp_22_fu_833_p1 );
    sensitive << ( tmp_35_fu_915_p1 );
    sensitive << ( tmp_56_fu_1033_p1 );

    SC_METHOD(thread_W_ce0);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_W_ce1);
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_W_d0);
    sensitive << ( context_Message_Block_q0 );
    sensitive << ( context_Message_Block_q1 );
    sensitive << ( context_Message_Block_load_reg_1133 );
    sensitive << ( context_Message_Block_load_1_reg_1138 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_W_we0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_W_we1);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );

    SC_METHOD(thread_ap_sig_100);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_131);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_148);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_155);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_169);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_186);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_200);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_218);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_233);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_242);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_250);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_262);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_275);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_289);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_302);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_315);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_328);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_337);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_379);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_472);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_262 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_275 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_78 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_289 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_124 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_89 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_302 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_148 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_100 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_315 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_40 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_131 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_111 );

    SC_METHOD(thread_ap_sig_cseq_ST_st22_fsm_21);
    sensitive << ( ap_sig_328 );

    SC_METHOD(thread_ap_sig_cseq_ST_st23_fsm_22);
    sensitive << ( ap_sig_155 );

    SC_METHOD(thread_ap_sig_cseq_ST_st24_fsm_23);
    sensitive << ( ap_sig_337 );

    SC_METHOD(thread_ap_sig_cseq_ST_st25_fsm_24);
    sensitive << ( ap_sig_472 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_169 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_186 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_379 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_200 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_218 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_233 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_242 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_250 );

    SC_METHOD(thread_context_Intermediate_Hash_addr_1_reg_1208);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );

    SC_METHOD(thread_context_Intermediate_Hash_addr_2_reg_1213);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );

    SC_METHOD(thread_context_Intermediate_Hash_address0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( context_Intermediate_Hash_addr_1_reg_1208 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st24_fsm_23 );

    SC_METHOD(thread_context_Intermediate_Hash_address1);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( context_Intermediate_Hash_addr_2_reg_1213 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st24_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );

    SC_METHOD(thread_context_Intermediate_Hash_ce0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st24_fsm_23 );

    SC_METHOD(thread_context_Intermediate_Hash_ce1);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st24_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );

    SC_METHOD(thread_context_Intermediate_Hash_d0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st24_fsm_23 );
    sensitive << ( tmp_49_fu_1050_p2 );
    sensitive << ( tmp_51_fu_1098_p2 );

    SC_METHOD(thread_context_Intermediate_Hash_d1);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( tmp_52_reg_1326 );
    sensitive << ( ap_sig_cseq_ST_st24_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );
    sensitive << ( tmp_48_fu_1044_p2 );
    sensitive << ( tmp_50_fu_1092_p2 );

    SC_METHOD(thread_context_Intermediate_Hash_we0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( exitcond_fu_1027_p2 );
    sensitive << ( ap_sig_cseq_ST_st24_fsm_23 );

    SC_METHOD(thread_context_Intermediate_Hash_we1);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( exitcond_fu_1027_p2 );
    sensitive << ( ap_sig_cseq_ST_st24_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );

    SC_METHOD(thread_context_Message_Block_Index);
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );

    SC_METHOD(thread_context_Message_Block_Index_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );

    SC_METHOD(thread_context_Message_Block_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_2_fu_715_p1 );
    sensitive << ( tmp_3_fu_736_p1 );

    SC_METHOD(thread_context_Message_Block_address1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_7_fu_726_p1 );
    sensitive << ( tmp_4_fu_746_p1 );

    SC_METHOD(thread_context_Message_Block_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_context_Message_Block_ce1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_exitcond1_fu_962_p2);
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( t_4_reg_492 );

    SC_METHOD(thread_exitcond2_fu_909_p2);
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( t_3_reg_426 );

    SC_METHOD(thread_exitcond3_fu_844_p2);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( t_2_reg_360 );

    SC_METHOD(thread_exitcond4_fu_767_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( t_1_reg_298 );

    SC_METHOD(thread_exitcond5_fu_691_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( t_reg_286 );

    SC_METHOD(thread_exitcond_fu_1027_p2);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( t_5_reg_558 );

    SC_METHOD(thread_grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( exitcond3_fu_844_p2 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( exitcond2_fu_909_p2 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( exitcond1_fu_962_p2 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( exitcond_fu_1027_p2 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( exitcond3_fu_844_p2 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( exitcond2_fu_909_p2 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( exitcond1_fu_962_p2 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( exitcond_fu_1027_p2 );
    sensitive << ( tmp_20_reg_1192 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( A1_reg_350 );
    sensitive << ( A_s_reg_415 );
    sensitive << ( A_2_reg_481 );
    sensitive << ( A_3_reg_547 );

    SC_METHOD(thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_A);
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( temp_reg_1267 );
    sensitive << ( temp_1_reg_1285 );
    sensitive << ( temp_2_reg_1303 );
    sensitive << ( temp_3_reg_1321 );

    SC_METHOD(thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_B);
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( A1_reg_350 );
    sensitive << ( A_s_reg_415 );
    sensitive << ( A_2_reg_481 );
    sensitive << ( A_3_reg_547 );

    SC_METHOD(thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r);
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( B1_reg_340 );
    sensitive << ( B_s_reg_404 );
    sensitive << ( B_2_reg_470 );
    sensitive << ( B_3_reg_536 );

    SC_METHOD(thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_D);
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( C1_reg_330 );
    sensitive << ( C_s_reg_393 );
    sensitive << ( C_2_reg_459 );
    sensitive << ( C_3_reg_525 );

    SC_METHOD(thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_E);
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( D1_reg_320 );
    sensitive << ( D_s_reg_382 );
    sensitive << ( D_2_reg_448 );
    sensitive << ( D_3_reg_514 );

    SC_METHOD(thread_t_10_fu_973_p2);
    sensitive << ( t_4_reg_492 );

    SC_METHOD(thread_t_11_fu_1038_p2);
    sensitive << ( t_5_reg_558 );

    SC_METHOD(thread_t_6_fu_697_p2);
    sensitive << ( t_reg_286 );

    SC_METHOD(thread_t_7_fu_838_p2);
    sensitive << ( t_1_reg_298 );

    SC_METHOD(thread_t_8_fu_850_p2);
    sensitive << ( t_2_reg_360 );

    SC_METHOD(thread_t_9_fu_920_p2);
    sensitive << ( t_3_reg_426 );

    SC_METHOD(thread_temp_1_fu_956_p2);
    sensitive << ( W_q1 );
    sensitive << ( tmp_38_fu_950_p2 );

    SC_METHOD(thread_temp_2_fu_1021_p2);
    sensitive << ( tmp_47_fu_1015_p2 );
    sensitive << ( tmp_43_fu_997_p2 );

    SC_METHOD(thread_temp_3_fu_1086_p2);
    sensitive << ( W_q1 );
    sensitive << ( tmp_59_fu_1080_p2 );

    SC_METHOD(thread_temp_fu_903_p2);
    sensitive << ( W_q0 );
    sensitive << ( tmp_31_fu_897_p2 );

    SC_METHOD(thread_tmp_10_fu_773_p2);
    sensitive << ( t_1_reg_298 );

    SC_METHOD(thread_tmp_11_fu_779_p1);
    sensitive << ( tmp_10_fu_773_p2 );

    SC_METHOD(thread_tmp_12_fu_784_p2);
    sensitive << ( t_1_reg_298 );

    SC_METHOD(thread_tmp_13_fu_790_p1);
    sensitive << ( tmp_12_fu_784_p2 );

    SC_METHOD(thread_tmp_14_fu_795_p2);
    sensitive << ( t_1_reg_298 );

    SC_METHOD(thread_tmp_15_fu_801_p1);
    sensitive << ( tmp_14_fu_795_p2 );

    SC_METHOD(thread_tmp_16_fu_806_p2);
    sensitive << ( t_1_reg_298 );

    SC_METHOD(thread_tmp_17_fu_812_p1);
    sensitive << ( tmp_16_fu_806_p2 );

    SC_METHOD(thread_tmp_18_fu_817_p2);
    sensitive << ( W_load_reg_1172 );
    sensitive << ( W_load_1_reg_1177 );

    SC_METHOD(thread_tmp_19_fu_821_p2);
    sensitive << ( W_q1 );
    sensitive << ( tmp_18_fu_817_p2 );

    SC_METHOD(thread_tmp_1_fu_707_p3);
    sensitive << ( tmp_fu_703_p1 );

    SC_METHOD(thread_tmp_20_fu_827_p2);
    sensitive << ( W_q0 );
    sensitive << ( tmp_19_fu_821_p2 );

    SC_METHOD(thread_tmp_22_fu_833_p1);
    sensitive << ( t_1_reg_298 );

    SC_METHOD(thread_tmp_24_fu_861_p2);
    sensitive << ( C1_reg_330 );
    sensitive << ( B1_reg_340 );

    SC_METHOD(thread_tmp_25_fu_867_p2);
    sensitive << ( B1_reg_340 );

    SC_METHOD(thread_tmp_26_fu_873_p2);
    sensitive << ( D1_reg_320 );
    sensitive << ( tmp_25_fu_867_p2 );

    SC_METHOD(thread_tmp_27_fu_879_p2);
    sensitive << ( tmp_26_fu_873_p2 );
    sensitive << ( tmp_24_fu_861_p2 );

    SC_METHOD(thread_tmp_28_fu_856_p1);
    sensitive << ( t_2_reg_360 );

    SC_METHOD(thread_tmp_29_fu_885_p2);
    sensitive << ( reg_627 );

    SC_METHOD(thread_tmp_2_fu_715_p1);
    sensitive << ( tmp_1_fu_707_p3 );

    SC_METHOD(thread_tmp_30_fu_891_p2);
    sensitive << ( E1_reg_310 );
    sensitive << ( tmp_29_fu_885_p2 );

    SC_METHOD(thread_tmp_31_fu_897_p2);
    sensitive << ( tmp_30_fu_891_p2 );
    sensitive << ( tmp_27_fu_879_p2 );

    SC_METHOD(thread_tmp_33_fu_926_p2);
    sensitive << ( C_s_reg_393 );
    sensitive << ( B_s_reg_404 );

    SC_METHOD(thread_tmp_34_fu_932_p2);
    sensitive << ( D_s_reg_382 );
    sensitive << ( tmp_33_fu_926_p2 );

    SC_METHOD(thread_tmp_35_fu_915_p1);
    sensitive << ( t_3_reg_426 );

    SC_METHOD(thread_tmp_36_fu_938_p2);
    sensitive << ( reg_627 );

    SC_METHOD(thread_tmp_37_fu_944_p2);
    sensitive << ( tmp_36_fu_938_p2 );
    sensitive << ( tmp_34_fu_932_p2 );

    SC_METHOD(thread_tmp_38_fu_950_p2);
    sensitive << ( E_s_reg_371 );
    sensitive << ( tmp_37_fu_944_p2 );

    SC_METHOD(thread_tmp_3_fu_736_p1);
    sensitive << ( tmp_s_fu_731_p2 );

    SC_METHOD(thread_tmp_40_fu_979_p2);
    sensitive << ( D_2_reg_448 );
    sensitive << ( C_2_reg_459 );

    SC_METHOD(thread_tmp_41_fu_985_p2);
    sensitive << ( B_2_reg_470 );
    sensitive << ( tmp_40_fu_979_p2 );

    SC_METHOD(thread_tmp_42_fu_991_p2);
    sensitive << ( D_2_reg_448 );
    sensitive << ( C_2_reg_459 );

    SC_METHOD(thread_tmp_43_fu_997_p2);
    sensitive << ( tmp_41_fu_985_p2 );
    sensitive << ( tmp_42_fu_991_p2 );

    SC_METHOD(thread_tmp_44_fu_968_p1);
    sensitive << ( t_4_reg_492 );

    SC_METHOD(thread_tmp_45_fu_1003_p2);
    sensitive << ( reg_627 );

    SC_METHOD(thread_tmp_46_fu_1009_p2);
    sensitive << ( E_2_reg_437 );
    sensitive << ( tmp_45_fu_1003_p2 );

    SC_METHOD(thread_tmp_47_fu_1015_p2);
    sensitive << ( W_q0 );
    sensitive << ( tmp_46_fu_1009_p2 );

    SC_METHOD(thread_tmp_48_fu_1044_p2);
    sensitive << ( A_reg_1202 );
    sensitive << ( A_3_reg_547 );

    SC_METHOD(thread_tmp_49_fu_1050_p2);
    sensitive << ( B_reg_1218 );
    sensitive << ( B_3_reg_536 );

    SC_METHOD(thread_tmp_4_fu_746_p1);
    sensitive << ( tmp_8_fu_741_p2 );

    SC_METHOD(thread_tmp_50_fu_1092_p2);
    sensitive << ( C_reg_1224 );
    sensitive << ( C_3_reg_525 );

    SC_METHOD(thread_tmp_51_fu_1098_p2);
    sensitive << ( D_reg_1242 );
    sensitive << ( D_3_reg_514 );

    SC_METHOD(thread_tmp_52_fu_1104_p2);
    sensitive << ( E_reg_1248 );
    sensitive << ( E_3_reg_503 );

    SC_METHOD(thread_tmp_54_fu_1056_p2);
    sensitive << ( C_3_reg_525 );
    sensitive << ( B_3_reg_536 );

    SC_METHOD(thread_tmp_55_fu_1062_p2);
    sensitive << ( D_3_reg_514 );
    sensitive << ( tmp_54_fu_1056_p2 );

    SC_METHOD(thread_tmp_56_fu_1033_p1);
    sensitive << ( t_5_reg_558 );

    SC_METHOD(thread_tmp_57_fu_1068_p2);
    sensitive << ( reg_627 );

    SC_METHOD(thread_tmp_58_fu_1074_p2);
    sensitive << ( tmp_57_fu_1068_p2 );
    sensitive << ( tmp_55_fu_1062_p2 );

    SC_METHOD(thread_tmp_59_fu_1080_p2);
    sensitive << ( E_3_reg_503 );
    sensitive << ( tmp_58_fu_1074_p2 );

    SC_METHOD(thread_tmp_5_fu_751_p1);
    sensitive << ( t_reg_286 );

    SC_METHOD(thread_tmp_6_fu_720_p2);
    sensitive << ( tmp_1_fu_707_p3 );

    SC_METHOD(thread_tmp_7_fu_726_p1);
    sensitive << ( tmp_6_fu_720_p2 );

    SC_METHOD(thread_tmp_8_fu_741_p2);
    sensitive << ( tmp_1_reg_1117 );

    SC_METHOD(thread_tmp_fu_703_p1);
    sensitive << ( t_reg_286 );

    SC_METHOD(thread_tmp_s_fu_731_p2);
    sensitive << ( tmp_1_reg_1117 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond3_fu_844_p2 );
    sensitive << ( exitcond2_fu_909_p2 );
    sensitive << ( exitcond1_fu_962_p2 );
    sensitive << ( exitcond_fu_1027_p2 );
    sensitive << ( exitcond5_fu_691_p2 );
    sensitive << ( exitcond4_fu_767_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "SHA1ProcessMessageBlock_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, context_Intermediate_Hash_address0, "(port)context_Intermediate_Hash_address0");
    sc_trace(mVcdFile, context_Intermediate_Hash_ce0, "(port)context_Intermediate_Hash_ce0");
    sc_trace(mVcdFile, context_Intermediate_Hash_we0, "(port)context_Intermediate_Hash_we0");
    sc_trace(mVcdFile, context_Intermediate_Hash_d0, "(port)context_Intermediate_Hash_d0");
    sc_trace(mVcdFile, context_Intermediate_Hash_q0, "(port)context_Intermediate_Hash_q0");
    sc_trace(mVcdFile, context_Intermediate_Hash_address1, "(port)context_Intermediate_Hash_address1");
    sc_trace(mVcdFile, context_Intermediate_Hash_ce1, "(port)context_Intermediate_Hash_ce1");
    sc_trace(mVcdFile, context_Intermediate_Hash_we1, "(port)context_Intermediate_Hash_we1");
    sc_trace(mVcdFile, context_Intermediate_Hash_d1, "(port)context_Intermediate_Hash_d1");
    sc_trace(mVcdFile, context_Intermediate_Hash_q1, "(port)context_Intermediate_Hash_q1");
    sc_trace(mVcdFile, context_Message_Block_Index, "(port)context_Message_Block_Index");
    sc_trace(mVcdFile, context_Message_Block_Index_ap_vld, "(port)context_Message_Block_Index_ap_vld");
    sc_trace(mVcdFile, context_Message_Block_address0, "(port)context_Message_Block_address0");
    sc_trace(mVcdFile, context_Message_Block_ce0, "(port)context_Message_Block_ce0");
    sc_trace(mVcdFile, context_Message_Block_q0, "(port)context_Message_Block_q0");
    sc_trace(mVcdFile, context_Message_Block_address1, "(port)context_Message_Block_address1");
    sc_trace(mVcdFile, context_Message_Block_ce1, "(port)context_Message_Block_ce1");
    sc_trace(mVcdFile, context_Message_Block_q1, "(port)context_Message_Block_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_40, "ap_sig_40");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return, "grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return");
    sc_trace(mVcdFile, reg_627, "reg_627");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_78, "ap_sig_78");
    sc_trace(mVcdFile, exitcond3_fu_844_p2, "exitcond3_fu_844_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_89, "ap_sig_89");
    sc_trace(mVcdFile, exitcond2_fu_909_p2, "exitcond2_fu_909_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_100, "ap_sig_100");
    sc_trace(mVcdFile, exitcond1_fu_962_p2, "exitcond1_fu_962_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_111, "ap_sig_111");
    sc_trace(mVcdFile, exitcond_fu_1027_p2, "exitcond_fu_1027_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_124, "ap_sig_124");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_131, "ap_sig_131");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_148, "ap_sig_148");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st23_fsm_22, "ap_sig_cseq_ST_st23_fsm_22");
    sc_trace(mVcdFile, ap_sig_155, "ap_sig_155");
    sc_trace(mVcdFile, t_6_fu_697_p2, "t_6_fu_697_p2");
    sc_trace(mVcdFile, t_6_reg_1112, "t_6_reg_1112");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_169, "ap_sig_169");
    sc_trace(mVcdFile, tmp_1_fu_707_p3, "tmp_1_fu_707_p3");
    sc_trace(mVcdFile, tmp_1_reg_1117, "tmp_1_reg_1117");
    sc_trace(mVcdFile, exitcond5_fu_691_p2, "exitcond5_fu_691_p2");
    sc_trace(mVcdFile, context_Message_Block_load_reg_1133, "context_Message_Block_load_reg_1133");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_186, "ap_sig_186");
    sc_trace(mVcdFile, context_Message_Block_load_1_reg_1138, "context_Message_Block_load_1_reg_1138");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_200, "ap_sig_200");
    sc_trace(mVcdFile, exitcond4_fu_767_p2, "exitcond4_fu_767_p2");
    sc_trace(mVcdFile, W_q0, "W_q0");
    sc_trace(mVcdFile, W_load_reg_1172, "W_load_reg_1172");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_218, "ap_sig_218");
    sc_trace(mVcdFile, W_q1, "W_q1");
    sc_trace(mVcdFile, W_load_1_reg_1177, "W_load_1_reg_1177");
    sc_trace(mVcdFile, tmp_20_fu_827_p2, "tmp_20_fu_827_p2");
    sc_trace(mVcdFile, tmp_20_reg_1192, "tmp_20_reg_1192");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_233, "ap_sig_233");
    sc_trace(mVcdFile, t_7_fu_838_p2, "t_7_fu_838_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_242, "ap_sig_242");
    sc_trace(mVcdFile, A_reg_1202, "A_reg_1202");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_250, "ap_sig_250");
    sc_trace(mVcdFile, context_Intermediate_Hash_addr_1_reg_1208, "context_Intermediate_Hash_addr_1_reg_1208");
    sc_trace(mVcdFile, context_Intermediate_Hash_addr_2_reg_1213, "context_Intermediate_Hash_addr_2_reg_1213");
    sc_trace(mVcdFile, B_reg_1218, "B_reg_1218");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_262, "ap_sig_262");
    sc_trace(mVcdFile, C_reg_1224, "C_reg_1224");
    sc_trace(mVcdFile, D_reg_1242, "D_reg_1242");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_275, "ap_sig_275");
    sc_trace(mVcdFile, E_reg_1248, "E_reg_1248");
    sc_trace(mVcdFile, t_8_fu_850_p2, "t_8_fu_850_p2");
    sc_trace(mVcdFile, t_8_reg_1257, "t_8_reg_1257");
    sc_trace(mVcdFile, temp_fu_903_p2, "temp_fu_903_p2");
    sc_trace(mVcdFile, temp_reg_1267, "temp_reg_1267");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_289, "ap_sig_289");
    sc_trace(mVcdFile, t_9_fu_920_p2, "t_9_fu_920_p2");
    sc_trace(mVcdFile, t_9_reg_1280, "t_9_reg_1280");
    sc_trace(mVcdFile, temp_1_fu_956_p2, "temp_1_fu_956_p2");
    sc_trace(mVcdFile, temp_1_reg_1285, "temp_1_reg_1285");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_302, "ap_sig_302");
    sc_trace(mVcdFile, t_10_fu_973_p2, "t_10_fu_973_p2");
    sc_trace(mVcdFile, t_10_reg_1298, "t_10_reg_1298");
    sc_trace(mVcdFile, temp_2_fu_1021_p2, "temp_2_fu_1021_p2");
    sc_trace(mVcdFile, temp_2_reg_1303, "temp_2_reg_1303");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_315, "ap_sig_315");
    sc_trace(mVcdFile, t_11_fu_1038_p2, "t_11_fu_1038_p2");
    sc_trace(mVcdFile, t_11_reg_1316, "t_11_reg_1316");
    sc_trace(mVcdFile, temp_3_fu_1086_p2, "temp_3_fu_1086_p2");
    sc_trace(mVcdFile, temp_3_reg_1321, "temp_3_reg_1321");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st22_fsm_21, "ap_sig_cseq_ST_st22_fsm_21");
    sc_trace(mVcdFile, ap_sig_328, "ap_sig_328");
    sc_trace(mVcdFile, tmp_52_fu_1104_p2, "tmp_52_fu_1104_p2");
    sc_trace(mVcdFile, tmp_52_reg_1326, "tmp_52_reg_1326");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st24_fsm_23, "ap_sig_cseq_ST_st24_fsm_23");
    sc_trace(mVcdFile, ap_sig_337, "ap_sig_337");
    sc_trace(mVcdFile, W_address0, "W_address0");
    sc_trace(mVcdFile, W_ce0, "W_ce0");
    sc_trace(mVcdFile, W_we0, "W_we0");
    sc_trace(mVcdFile, W_d0, "W_d0");
    sc_trace(mVcdFile, W_address1, "W_address1");
    sc_trace(mVcdFile, W_ce1, "W_ce1");
    sc_trace(mVcdFile, W_we1, "W_we1");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_B, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_B");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_D, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_D");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_E, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_E");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_A, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_A");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4, "grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits, "grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits");
    sc_trace(mVcdFile, grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word, "grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word");
    sc_trace(mVcdFile, t_reg_286, "t_reg_286");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_379, "ap_sig_379");
    sc_trace(mVcdFile, t_1_reg_298, "t_1_reg_298");
    sc_trace(mVcdFile, E1_reg_310, "E1_reg_310");
    sc_trace(mVcdFile, D1_reg_320, "D1_reg_320");
    sc_trace(mVcdFile, C1_reg_330, "C1_reg_330");
    sc_trace(mVcdFile, B1_reg_340, "B1_reg_340");
    sc_trace(mVcdFile, A1_reg_350, "A1_reg_350");
    sc_trace(mVcdFile, t_2_reg_360, "t_2_reg_360");
    sc_trace(mVcdFile, E_s_reg_371, "E_s_reg_371");
    sc_trace(mVcdFile, D_s_reg_382, "D_s_reg_382");
    sc_trace(mVcdFile, C_s_reg_393, "C_s_reg_393");
    sc_trace(mVcdFile, B_s_reg_404, "B_s_reg_404");
    sc_trace(mVcdFile, A_s_reg_415, "A_s_reg_415");
    sc_trace(mVcdFile, t_3_reg_426, "t_3_reg_426");
    sc_trace(mVcdFile, E_2_reg_437, "E_2_reg_437");
    sc_trace(mVcdFile, D_2_reg_448, "D_2_reg_448");
    sc_trace(mVcdFile, C_2_reg_459, "C_2_reg_459");
    sc_trace(mVcdFile, B_2_reg_470, "B_2_reg_470");
    sc_trace(mVcdFile, A_2_reg_481, "A_2_reg_481");
    sc_trace(mVcdFile, t_4_reg_492, "t_4_reg_492");
    sc_trace(mVcdFile, E_3_reg_503, "E_3_reg_503");
    sc_trace(mVcdFile, D_3_reg_514, "D_3_reg_514");
    sc_trace(mVcdFile, C_3_reg_525, "C_3_reg_525");
    sc_trace(mVcdFile, B_3_reg_536, "B_3_reg_536");
    sc_trace(mVcdFile, A_3_reg_547, "A_3_reg_547");
    sc_trace(mVcdFile, t_5_reg_558, "t_5_reg_558");
    sc_trace(mVcdFile, tmp_2_fu_715_p1, "tmp_2_fu_715_p1");
    sc_trace(mVcdFile, tmp_7_fu_726_p1, "tmp_7_fu_726_p1");
    sc_trace(mVcdFile, tmp_3_fu_736_p1, "tmp_3_fu_736_p1");
    sc_trace(mVcdFile, tmp_4_fu_746_p1, "tmp_4_fu_746_p1");
    sc_trace(mVcdFile, tmp_5_fu_751_p1, "tmp_5_fu_751_p1");
    sc_trace(mVcdFile, tmp_11_fu_779_p1, "tmp_11_fu_779_p1");
    sc_trace(mVcdFile, tmp_13_fu_790_p1, "tmp_13_fu_790_p1");
    sc_trace(mVcdFile, tmp_15_fu_801_p1, "tmp_15_fu_801_p1");
    sc_trace(mVcdFile, tmp_17_fu_812_p1, "tmp_17_fu_812_p1");
    sc_trace(mVcdFile, tmp_22_fu_833_p1, "tmp_22_fu_833_p1");
    sc_trace(mVcdFile, tmp_28_fu_856_p1, "tmp_28_fu_856_p1");
    sc_trace(mVcdFile, tmp_35_fu_915_p1, "tmp_35_fu_915_p1");
    sc_trace(mVcdFile, tmp_44_fu_968_p1, "tmp_44_fu_968_p1");
    sc_trace(mVcdFile, tmp_56_fu_1033_p1, "tmp_56_fu_1033_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st25_fsm_24, "ap_sig_cseq_ST_st25_fsm_24");
    sc_trace(mVcdFile, ap_sig_472, "ap_sig_472");
    sc_trace(mVcdFile, tmp_49_fu_1050_p2, "tmp_49_fu_1050_p2");
    sc_trace(mVcdFile, tmp_51_fu_1098_p2, "tmp_51_fu_1098_p2");
    sc_trace(mVcdFile, tmp_48_fu_1044_p2, "tmp_48_fu_1044_p2");
    sc_trace(mVcdFile, tmp_50_fu_1092_p2, "tmp_50_fu_1092_p2");
    sc_trace(mVcdFile, tmp_fu_703_p1, "tmp_fu_703_p1");
    sc_trace(mVcdFile, tmp_6_fu_720_p2, "tmp_6_fu_720_p2");
    sc_trace(mVcdFile, tmp_s_fu_731_p2, "tmp_s_fu_731_p2");
    sc_trace(mVcdFile, tmp_8_fu_741_p2, "tmp_8_fu_741_p2");
    sc_trace(mVcdFile, tmp_10_fu_773_p2, "tmp_10_fu_773_p2");
    sc_trace(mVcdFile, tmp_12_fu_784_p2, "tmp_12_fu_784_p2");
    sc_trace(mVcdFile, tmp_14_fu_795_p2, "tmp_14_fu_795_p2");
    sc_trace(mVcdFile, tmp_16_fu_806_p2, "tmp_16_fu_806_p2");
    sc_trace(mVcdFile, tmp_18_fu_817_p2, "tmp_18_fu_817_p2");
    sc_trace(mVcdFile, tmp_19_fu_821_p2, "tmp_19_fu_821_p2");
    sc_trace(mVcdFile, tmp_25_fu_867_p2, "tmp_25_fu_867_p2");
    sc_trace(mVcdFile, tmp_26_fu_873_p2, "tmp_26_fu_873_p2");
    sc_trace(mVcdFile, tmp_24_fu_861_p2, "tmp_24_fu_861_p2");
    sc_trace(mVcdFile, tmp_29_fu_885_p2, "tmp_29_fu_885_p2");
    sc_trace(mVcdFile, tmp_30_fu_891_p2, "tmp_30_fu_891_p2");
    sc_trace(mVcdFile, tmp_27_fu_879_p2, "tmp_27_fu_879_p2");
    sc_trace(mVcdFile, tmp_31_fu_897_p2, "tmp_31_fu_897_p2");
    sc_trace(mVcdFile, tmp_33_fu_926_p2, "tmp_33_fu_926_p2");
    sc_trace(mVcdFile, tmp_36_fu_938_p2, "tmp_36_fu_938_p2");
    sc_trace(mVcdFile, tmp_34_fu_932_p2, "tmp_34_fu_932_p2");
    sc_trace(mVcdFile, tmp_37_fu_944_p2, "tmp_37_fu_944_p2");
    sc_trace(mVcdFile, tmp_38_fu_950_p2, "tmp_38_fu_950_p2");
    sc_trace(mVcdFile, tmp_40_fu_979_p2, "tmp_40_fu_979_p2");
    sc_trace(mVcdFile, tmp_41_fu_985_p2, "tmp_41_fu_985_p2");
    sc_trace(mVcdFile, tmp_42_fu_991_p2, "tmp_42_fu_991_p2");
    sc_trace(mVcdFile, tmp_45_fu_1003_p2, "tmp_45_fu_1003_p2");
    sc_trace(mVcdFile, tmp_46_fu_1009_p2, "tmp_46_fu_1009_p2");
    sc_trace(mVcdFile, tmp_47_fu_1015_p2, "tmp_47_fu_1015_p2");
    sc_trace(mVcdFile, tmp_43_fu_997_p2, "tmp_43_fu_997_p2");
    sc_trace(mVcdFile, tmp_54_fu_1056_p2, "tmp_54_fu_1056_p2");
    sc_trace(mVcdFile, tmp_57_fu_1068_p2, "tmp_57_fu_1068_p2");
    sc_trace(mVcdFile, tmp_55_fu_1062_p2, "tmp_55_fu_1062_p2");
    sc_trace(mVcdFile, tmp_58_fu_1074_p2, "tmp_58_fu_1074_p2");
    sc_trace(mVcdFile, tmp_59_fu_1080_p2, "tmp_59_fu_1080_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("SHA1ProcessMessageBlock.hdltvin.dat");
    mHdltvoutHandle.open("SHA1ProcessMessageBlock.hdltvout.dat");
}

SHA1ProcessMessageBlock::~SHA1ProcessMessageBlock() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete W_U;
    delete grp_SHA1ProcessMessageBlock_Swapping_fu_569;
    delete grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594;
}

void SHA1ProcessMessageBlock::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        A1_reg_350 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        A1_reg_350 = A_reg_1202.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read()))) {
        A_2_reg_481 = A_s_reg_415.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        A_2_reg_481 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read()))) {
        A_3_reg_547 = A_2_reg_481.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        A_3_reg_547 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
         !esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0))) {
        A_s_reg_415 = A1_reg_350.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        A_s_reg_415 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        B1_reg_340 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        B1_reg_340 = B_reg_1218.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read()))) {
        B_2_reg_470 = B_s_reg_404.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        B_2_reg_470 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read()))) {
        B_3_reg_536 = B_2_reg_470.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        B_3_reg_536 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
         !esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0))) {
        B_s_reg_404 = B1_reg_340.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        B_s_reg_404 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        C1_reg_330 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        C1_reg_330 = C_reg_1224.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read()))) {
        C_2_reg_459 = C_s_reg_393.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        C_2_reg_459 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read()))) {
        C_3_reg_525 = C_2_reg_459.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        C_3_reg_525 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
         !esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0))) {
        C_s_reg_393 = C1_reg_330.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        C_s_reg_393 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        D1_reg_320 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        D1_reg_320 = context_Intermediate_Hash_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read()))) {
        D_2_reg_448 = D_s_reg_382.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        D_2_reg_448 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read()))) {
        D_3_reg_514 = D_2_reg_448.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        D_3_reg_514 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
         !esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0))) {
        D_s_reg_382 = D1_reg_320.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        D_s_reg_382 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        E1_reg_310 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        E1_reg_310 = context_Intermediate_Hash_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read()))) {
        E_2_reg_437 = E_s_reg_371.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        E_2_reg_437 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read()))) {
        E_3_reg_503 = E_2_reg_437.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        E_3_reg_503 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
         !esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0))) {
        E_s_reg_371 = E1_reg_310.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        E_s_reg_371 = grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_691_p2.read()))) {
        t_1_reg_298 = ap_const_lv7_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        t_1_reg_298 = t_7_fu_838_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        t_2_reg_360 = t_8_reg_1257.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        t_2_reg_360 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
         !esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0))) {
        t_3_reg_426 = ap_const_lv6_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        t_3_reg_426 = t_9_reg_1280.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read()))) {
        t_4_reg_492 = ap_const_lv6_28;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        t_4_reg_492 = t_10_reg_1298.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read()))) {
        t_5_reg_558 = ap_const_lv7_3C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        t_5_reg_558 = t_11_reg_1316.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        t_reg_286 = t_6_reg_1112.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        t_reg_286 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        A_reg_1202 = context_Intermediate_Hash_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        B_reg_1218 = context_Intermediate_Hash_q0.read();
        C_reg_1224 = context_Intermediate_Hash_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        D_reg_1242 = context_Intermediate_Hash_q1.read();
        E_reg_1248 = context_Intermediate_Hash_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        W_load_1_reg_1177 = W_q1.read();
        W_load_reg_1172 = W_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        context_Message_Block_load_1_reg_1138 = context_Message_Block_q1.read();
        context_Message_Block_load_reg_1133 = context_Message_Block_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
  esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1027_p2.read())))) {
        reg_627 = grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read()))) {
        t_10_reg_1298 = t_10_fu_973_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1027_p2.read()))) {
        t_11_reg_1316 = t_11_fu_1038_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        t_6_reg_1112 = t_6_fu_697_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        t_8_reg_1257 = t_8_fu_850_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read()))) {
        t_9_reg_1280 = t_9_fu_920_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        temp_1_reg_1285 = temp_1_fu_956_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        temp_2_reg_1303 = temp_2_fu_1021_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        temp_3_reg_1321 = temp_3_fu_1086_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        temp_reg_1267 = temp_fu_903_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_691_p2.read()))) {
        tmp_1_reg_1117 = tmp_1_fu_707_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        tmp_20_reg_1192 = tmp_20_fu_827_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read())) {
        tmp_52_reg_1326 = tmp_52_fu_1104_p2.read();
    }
}

void SHA1ProcessMessageBlock::thread_W_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        W_address0 =  (sc_lv<7>) (tmp_5_fu_751_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        W_address0 =  (sc_lv<7>) (tmp_44_fu_968_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        W_address0 =  (sc_lv<7>) (tmp_28_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        W_address0 =  (sc_lv<7>) (tmp_17_fu_812_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        W_address0 =  (sc_lv<7>) (tmp_11_fu_779_p1.read());
    } else {
        W_address0 = "XXXXXXX";
    }
}

void SHA1ProcessMessageBlock::thread_W_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        W_address1 =  (sc_lv<7>) (tmp_22_fu_833_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        W_address1 =  (sc_lv<7>) (tmp_56_fu_1033_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        W_address1 =  (sc_lv<7>) (tmp_35_fu_915_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        W_address1 =  (sc_lv<7>) (tmp_15_fu_801_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        W_address1 =  (sc_lv<7>) (tmp_13_fu_790_p1.read());
    } else {
        W_address1 = "XXXXXXX";
    }
}

void SHA1ProcessMessageBlock::thread_W_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        W_ce0 = ap_const_logic_1;
    } else {
        W_ce0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_W_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        W_ce1 = ap_const_logic_1;
    } else {
        W_ce1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_W_d0() {
    W_d0 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(context_Message_Block_load_reg_1133.read(), context_Message_Block_load_1_reg_1138.read()), context_Message_Block_q0.read()), context_Message_Block_q1.read());
}

void SHA1ProcessMessageBlock::thread_W_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        W_we0 = ap_const_logic_1;
    } else {
        W_we0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_W_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        W_we1 = ap_const_logic_1;
    } else {
        W_we1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_100() {
    ap_sig_100 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void SHA1ProcessMessageBlock::thread_ap_sig_111() {
    ap_sig_111 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void SHA1ProcessMessageBlock::thread_ap_sig_124() {
    ap_sig_124 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void SHA1ProcessMessageBlock::thread_ap_sig_131() {
    ap_sig_131 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void SHA1ProcessMessageBlock::thread_ap_sig_148() {
    ap_sig_148 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void SHA1ProcessMessageBlock::thread_ap_sig_155() {
    ap_sig_155 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(22, 22));
}

void SHA1ProcessMessageBlock::thread_ap_sig_169() {
    ap_sig_169 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void SHA1ProcessMessageBlock::thread_ap_sig_186() {
    ap_sig_186 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void SHA1ProcessMessageBlock::thread_ap_sig_200() {
    ap_sig_200 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void SHA1ProcessMessageBlock::thread_ap_sig_218() {
    ap_sig_218 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void SHA1ProcessMessageBlock::thread_ap_sig_233() {
    ap_sig_233 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void SHA1ProcessMessageBlock::thread_ap_sig_242() {
    ap_sig_242 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void SHA1ProcessMessageBlock::thread_ap_sig_250() {
    ap_sig_250 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void SHA1ProcessMessageBlock::thread_ap_sig_262() {
    ap_sig_262 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void SHA1ProcessMessageBlock::thread_ap_sig_275() {
    ap_sig_275 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void SHA1ProcessMessageBlock::thread_ap_sig_289() {
    ap_sig_289 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void SHA1ProcessMessageBlock::thread_ap_sig_302() {
    ap_sig_302 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void SHA1ProcessMessageBlock::thread_ap_sig_315() {
    ap_sig_315 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void SHA1ProcessMessageBlock::thread_ap_sig_328() {
    ap_sig_328 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(21, 21));
}

void SHA1ProcessMessageBlock::thread_ap_sig_337() {
    ap_sig_337 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(23, 23));
}

void SHA1ProcessMessageBlock::thread_ap_sig_379() {
    ap_sig_379 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void SHA1ProcessMessageBlock::thread_ap_sig_40() {
    ap_sig_40 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void SHA1ProcessMessageBlock::thread_ap_sig_472() {
    ap_sig_472 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(24, 24));
}

void SHA1ProcessMessageBlock::thread_ap_sig_78() {
    ap_sig_78 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void SHA1ProcessMessageBlock::thread_ap_sig_89() {
    ap_sig_89 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_262.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_275.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_78.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_289.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_124.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_89.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_302.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_148.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_100.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_315.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_40.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_131.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_111.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st22_fsm_21() {
    if (ap_sig_328.read()) {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st23_fsm_22() {
    if (ap_sig_155.read()) {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st24_fsm_23() {
    if (ap_sig_337.read()) {
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st25_fsm_24() {
    if (ap_sig_472.read()) {
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_169.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_186.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_379.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_200.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_218.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_233.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_242.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_250.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_addr_1_reg_1208() {
    context_Intermediate_Hash_addr_1_reg_1208 =  (sc_lv<3>) (ap_const_lv64_1);
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_addr_2_reg_1213() {
    context_Intermediate_Hash_addr_2_reg_1213 =  (sc_lv<3>) (ap_const_lv64_2);
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read())) {
        context_Intermediate_Hash_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        context_Intermediate_Hash_address0 = context_Intermediate_Hash_addr_1_reg_1208.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        context_Intermediate_Hash_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        context_Intermediate_Hash_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        context_Intermediate_Hash_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        context_Intermediate_Hash_address0 =  (sc_lv<3>) ("XXX");
    }
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read())) {
        context_Intermediate_Hash_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read())) {
        context_Intermediate_Hash_address1 = context_Intermediate_Hash_addr_2_reg_1213.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        context_Intermediate_Hash_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        context_Intermediate_Hash_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        context_Intermediate_Hash_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else {
        context_Intermediate_Hash_address1 =  (sc_lv<3>) ("XXX");
    }
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read()))) {
        context_Intermediate_Hash_ce0 = ap_const_logic_1;
    } else {
        context_Intermediate_Hash_ce0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read()))) {
        context_Intermediate_Hash_ce1 = ap_const_logic_1;
    } else {
        context_Intermediate_Hash_ce1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read())) {
        context_Intermediate_Hash_d0 = tmp_51_fu_1098_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        context_Intermediate_Hash_d0 = tmp_49_fu_1050_p2.read();
    } else {
        context_Intermediate_Hash_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read())) {
        context_Intermediate_Hash_d1 = tmp_52_reg_1326.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read())) {
        context_Intermediate_Hash_d1 = tmp_50_fu_1092_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        context_Intermediate_Hash_d1 = tmp_48_fu_1044_p2.read();
    } else {
        context_Intermediate_Hash_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1027_p2.read())))) {
        context_Intermediate_Hash_we0 = ap_const_logic_1;
    } else {
        context_Intermediate_Hash_we0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_context_Intermediate_Hash_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1027_p2.read())))) {
        context_Intermediate_Hash_we1 = ap_const_logic_1;
    } else {
        context_Intermediate_Hash_we1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_context_Message_Block_Index() {
    context_Message_Block_Index = ap_const_lv16_0;
}

void SHA1ProcessMessageBlock::thread_context_Message_Block_Index_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read())) {
        context_Message_Block_Index_ap_vld = ap_const_logic_1;
    } else {
        context_Message_Block_Index_ap_vld = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_context_Message_Block_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        context_Message_Block_address0 =  (sc_lv<6>) (tmp_3_fu_736_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        context_Message_Block_address0 =  (sc_lv<6>) (tmp_2_fu_715_p1.read());
    } else {
        context_Message_Block_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_context_Message_Block_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        context_Message_Block_address1 =  (sc_lv<6>) (tmp_4_fu_746_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        context_Message_Block_address1 =  (sc_lv<6>) (tmp_7_fu_726_p1.read());
    } else {
        context_Message_Block_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_context_Message_Block_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()))) {
        context_Message_Block_ce0 = ap_const_logic_1;
    } else {
        context_Message_Block_ce0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_context_Message_Block_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()))) {
        context_Message_Block_ce1 = ap_const_logic_1;
    } else {
        context_Message_Block_ce1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock::thread_exitcond1_fu_962_p2() {
    exitcond1_fu_962_p2 = (!t_4_reg_492.read().is_01() || !ap_const_lv6_3C.is_01())? sc_lv<1>(): sc_lv<1>(t_4_reg_492.read() == ap_const_lv6_3C);
}

void SHA1ProcessMessageBlock::thread_exitcond2_fu_909_p2() {
    exitcond2_fu_909_p2 = (!t_3_reg_426.read().is_01() || !ap_const_lv6_28.is_01())? sc_lv<1>(): sc_lv<1>(t_3_reg_426.read() == ap_const_lv6_28);
}

void SHA1ProcessMessageBlock::thread_exitcond3_fu_844_p2() {
    exitcond3_fu_844_p2 = (!t_2_reg_360.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<1>(): sc_lv<1>(t_2_reg_360.read() == ap_const_lv5_14);
}

void SHA1ProcessMessageBlock::thread_exitcond4_fu_767_p2() {
    exitcond4_fu_767_p2 = (!t_1_reg_298.read().is_01() || !ap_const_lv7_50.is_01())? sc_lv<1>(): sc_lv<1>(t_1_reg_298.read() == ap_const_lv7_50);
}

void SHA1ProcessMessageBlock::thread_exitcond5_fu_691_p2() {
    exitcond5_fu_691_p2 = (!t_reg_286.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(t_reg_286.read() == ap_const_lv5_10);
}

void SHA1ProcessMessageBlock::thread_exitcond_fu_1027_p2() {
    exitcond_fu_1027_p2 = (!t_5_reg_558.read().is_01() || !ap_const_lv7_50.is_01())? sc_lv<1>(): sc_lv<1>(t_5_reg_558.read() == ap_const_lv7_50);
}

void SHA1ProcessMessageBlock::thread_grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1027_p2.read())))) {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits = ap_const_lv6_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits = ap_const_lv6_1;
    } else {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits =  (sc_lv<6>) ("XXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1027_p2.read()))) {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = A_3_reg_547.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read()))) {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = A_2_reg_481.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read()))) {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = A_s_reg_415.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0))) {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = A1_reg_350.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word = tmp_20_reg_1192.read();
    } else {
        grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = temp_3_reg_1321.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = temp_2_reg_1303.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = temp_1_reg_1285.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A = temp_reg_1267.read();
    } else {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_A =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = A_3_reg_547.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = A_2_reg_481.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = A_s_reg_415.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B = A1_reg_350.read();
    } else {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = B_3_reg_536.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = B_2_reg_470.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = B_s_reg_404.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r = B1_reg_340.read();
    } else {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_D() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = C_3_reg_525.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = C_2_reg_459.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = C_s_reg_393.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D = C1_reg_330.read();
    } else {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_D =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_grp_SHA1ProcessMessageBlock_Swapping_fu_569_E() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = D_3_reg_514.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = D_2_reg_448.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = D_s_reg_382.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E = D1_reg_320.read();
    } else {
        grp_SHA1ProcessMessageBlock_Swapping_fu_569_E =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SHA1ProcessMessageBlock::thread_t_10_fu_973_p2() {
    t_10_fu_973_p2 = (!t_4_reg_492.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(t_4_reg_492.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void SHA1ProcessMessageBlock::thread_t_11_fu_1038_p2() {
    t_11_fu_1038_p2 = (!t_5_reg_558.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(t_5_reg_558.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void SHA1ProcessMessageBlock::thread_t_6_fu_697_p2() {
    t_6_fu_697_p2 = (!t_reg_286.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(t_reg_286.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void SHA1ProcessMessageBlock::thread_t_7_fu_838_p2() {
    t_7_fu_838_p2 = (!t_1_reg_298.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(t_1_reg_298.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void SHA1ProcessMessageBlock::thread_t_8_fu_850_p2() {
    t_8_fu_850_p2 = (!t_2_reg_360.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(t_2_reg_360.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void SHA1ProcessMessageBlock::thread_t_9_fu_920_p2() {
    t_9_fu_920_p2 = (!t_3_reg_426.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(t_3_reg_426.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void SHA1ProcessMessageBlock::thread_temp_1_fu_956_p2() {
    temp_1_fu_956_p2 = (!tmp_38_fu_950_p2.read().is_01() || !W_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_38_fu_950_p2.read()) + sc_biguint<32>(W_q1.read()));
}

void SHA1ProcessMessageBlock::thread_temp_2_fu_1021_p2() {
    temp_2_fu_1021_p2 = (!tmp_47_fu_1015_p2.read().is_01() || !tmp_43_fu_997_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_47_fu_1015_p2.read()) + sc_biguint<32>(tmp_43_fu_997_p2.read()));
}

void SHA1ProcessMessageBlock::thread_temp_3_fu_1086_p2() {
    temp_3_fu_1086_p2 = (!tmp_59_fu_1080_p2.read().is_01() || !W_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_59_fu_1080_p2.read()) + sc_biguint<32>(W_q1.read()));
}

void SHA1ProcessMessageBlock::thread_temp_fu_903_p2() {
    temp_fu_903_p2 = (!tmp_31_fu_897_p2.read().is_01() || !W_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_31_fu_897_p2.read()) + sc_biguint<32>(W_q0.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_10_fu_773_p2() {
    tmp_10_fu_773_p2 = (!t_1_reg_298.read().is_01() || !ap_const_lv7_7D.is_01())? sc_lv<7>(): (sc_biguint<7>(t_1_reg_298.read()) + sc_bigint<7>(ap_const_lv7_7D));
}

void SHA1ProcessMessageBlock::thread_tmp_11_fu_779_p1() {
    tmp_11_fu_779_p1 = esl_zext<64,7>(tmp_10_fu_773_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_12_fu_784_p2() {
    tmp_12_fu_784_p2 = (!t_1_reg_298.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<7>(): (sc_biguint<7>(t_1_reg_298.read()) + sc_bigint<7>(ap_const_lv7_78));
}

void SHA1ProcessMessageBlock::thread_tmp_13_fu_790_p1() {
    tmp_13_fu_790_p1 = esl_zext<64,7>(tmp_12_fu_784_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_14_fu_795_p2() {
    tmp_14_fu_795_p2 = (!t_1_reg_298.read().is_01() || !ap_const_lv7_72.is_01())? sc_lv<7>(): (sc_biguint<7>(t_1_reg_298.read()) + sc_bigint<7>(ap_const_lv7_72));
}

void SHA1ProcessMessageBlock::thread_tmp_15_fu_801_p1() {
    tmp_15_fu_801_p1 = esl_zext<64,7>(tmp_14_fu_795_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_16_fu_806_p2() {
    tmp_16_fu_806_p2 = (!t_1_reg_298.read().is_01() || !ap_const_lv7_70.is_01())? sc_lv<7>(): (sc_biguint<7>(t_1_reg_298.read()) + sc_bigint<7>(ap_const_lv7_70));
}

void SHA1ProcessMessageBlock::thread_tmp_17_fu_812_p1() {
    tmp_17_fu_812_p1 = esl_zext<64,7>(tmp_16_fu_806_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_18_fu_817_p2() {
    tmp_18_fu_817_p2 = (W_load_1_reg_1177.read() ^ W_load_reg_1172.read());
}

void SHA1ProcessMessageBlock::thread_tmp_19_fu_821_p2() {
    tmp_19_fu_821_p2 = (tmp_18_fu_817_p2.read() ^ W_q1.read());
}

void SHA1ProcessMessageBlock::thread_tmp_1_fu_707_p3() {
    tmp_1_fu_707_p3 = esl_concat<4,2>(tmp_fu_703_p1.read(), ap_const_lv2_0);
}

void SHA1ProcessMessageBlock::thread_tmp_20_fu_827_p2() {
    tmp_20_fu_827_p2 = (tmp_19_fu_821_p2.read() ^ W_q0.read());
}

void SHA1ProcessMessageBlock::thread_tmp_22_fu_833_p1() {
    tmp_22_fu_833_p1 = esl_zext<64,7>(t_1_reg_298.read());
}

void SHA1ProcessMessageBlock::thread_tmp_24_fu_861_p2() {
    tmp_24_fu_861_p2 = (C1_reg_330.read() & B1_reg_340.read());
}

void SHA1ProcessMessageBlock::thread_tmp_25_fu_867_p2() {
    tmp_25_fu_867_p2 = (B1_reg_340.read() ^ ap_const_lv32_FFFFFFFF);
}

void SHA1ProcessMessageBlock::thread_tmp_26_fu_873_p2() {
    tmp_26_fu_873_p2 = (D1_reg_320.read() & tmp_25_fu_867_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_27_fu_879_p2() {
    tmp_27_fu_879_p2 = (tmp_26_fu_873_p2.read() | tmp_24_fu_861_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_28_fu_856_p1() {
    tmp_28_fu_856_p1 = esl_zext<64,5>(t_2_reg_360.read());
}

void SHA1ProcessMessageBlock::thread_tmp_29_fu_885_p2() {
    tmp_29_fu_885_p2 = (!reg_627.read().is_01() || !ap_const_lv32_5A827999.is_01())? sc_lv<32>(): (sc_biguint<32>(reg_627.read()) + sc_biguint<32>(ap_const_lv32_5A827999));
}

void SHA1ProcessMessageBlock::thread_tmp_2_fu_715_p1() {
    tmp_2_fu_715_p1 = esl_zext<64,6>(tmp_1_fu_707_p3.read());
}

void SHA1ProcessMessageBlock::thread_tmp_30_fu_891_p2() {
    tmp_30_fu_891_p2 = (!tmp_29_fu_885_p2.read().is_01() || !E1_reg_310.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_29_fu_885_p2.read()) + sc_biguint<32>(E1_reg_310.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_31_fu_897_p2() {
    tmp_31_fu_897_p2 = (!tmp_30_fu_891_p2.read().is_01() || !tmp_27_fu_879_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_30_fu_891_p2.read()) + sc_biguint<32>(tmp_27_fu_879_p2.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_33_fu_926_p2() {
    tmp_33_fu_926_p2 = (C_s_reg_393.read() ^ B_s_reg_404.read());
}

void SHA1ProcessMessageBlock::thread_tmp_34_fu_932_p2() {
    tmp_34_fu_932_p2 = (tmp_33_fu_926_p2.read() ^ D_s_reg_382.read());
}

void SHA1ProcessMessageBlock::thread_tmp_35_fu_915_p1() {
    tmp_35_fu_915_p1 = esl_zext<64,6>(t_3_reg_426.read());
}

void SHA1ProcessMessageBlock::thread_tmp_36_fu_938_p2() {
    tmp_36_fu_938_p2 = (!reg_627.read().is_01() || !ap_const_lv32_6ED9EBA1.is_01())? sc_lv<32>(): (sc_biguint<32>(reg_627.read()) + sc_biguint<32>(ap_const_lv32_6ED9EBA1));
}

void SHA1ProcessMessageBlock::thread_tmp_37_fu_944_p2() {
    tmp_37_fu_944_p2 = (!tmp_36_fu_938_p2.read().is_01() || !tmp_34_fu_932_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_36_fu_938_p2.read()) + sc_biguint<32>(tmp_34_fu_932_p2.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_38_fu_950_p2() {
    tmp_38_fu_950_p2 = (!tmp_37_fu_944_p2.read().is_01() || !E_s_reg_371.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_37_fu_944_p2.read()) + sc_biguint<32>(E_s_reg_371.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_3_fu_736_p1() {
    tmp_3_fu_736_p1 = esl_zext<64,6>(tmp_s_fu_731_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_40_fu_979_p2() {
    tmp_40_fu_979_p2 = (D_2_reg_448.read() | C_2_reg_459.read());
}

void SHA1ProcessMessageBlock::thread_tmp_41_fu_985_p2() {
    tmp_41_fu_985_p2 = (tmp_40_fu_979_p2.read() & B_2_reg_470.read());
}

void SHA1ProcessMessageBlock::thread_tmp_42_fu_991_p2() {
    tmp_42_fu_991_p2 = (D_2_reg_448.read() & C_2_reg_459.read());
}

void SHA1ProcessMessageBlock::thread_tmp_43_fu_997_p2() {
    tmp_43_fu_997_p2 = (tmp_41_fu_985_p2.read() | tmp_42_fu_991_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_44_fu_968_p1() {
    tmp_44_fu_968_p1 = esl_zext<64,6>(t_4_reg_492.read());
}

void SHA1ProcessMessageBlock::thread_tmp_45_fu_1003_p2() {
    tmp_45_fu_1003_p2 = (!reg_627.read().is_01() || !ap_const_lv32_8F1BBCDC.is_01())? sc_lv<32>(): (sc_biguint<32>(reg_627.read()) + sc_bigint<32>(ap_const_lv32_8F1BBCDC));
}

void SHA1ProcessMessageBlock::thread_tmp_46_fu_1009_p2() {
    tmp_46_fu_1009_p2 = (!tmp_45_fu_1003_p2.read().is_01() || !E_2_reg_437.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_45_fu_1003_p2.read()) + sc_biguint<32>(E_2_reg_437.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_47_fu_1015_p2() {
    tmp_47_fu_1015_p2 = (!tmp_46_fu_1009_p2.read().is_01() || !W_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_46_fu_1009_p2.read()) + sc_biguint<32>(W_q0.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_48_fu_1044_p2() {
    tmp_48_fu_1044_p2 = (!A_reg_1202.read().is_01() || !A_3_reg_547.read().is_01())? sc_lv<32>(): (sc_biguint<32>(A_reg_1202.read()) + sc_biguint<32>(A_3_reg_547.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_49_fu_1050_p2() {
    tmp_49_fu_1050_p2 = (!B_reg_1218.read().is_01() || !B_3_reg_536.read().is_01())? sc_lv<32>(): (sc_biguint<32>(B_reg_1218.read()) + sc_biguint<32>(B_3_reg_536.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_4_fu_746_p1() {
    tmp_4_fu_746_p1 = esl_zext<64,6>(tmp_8_fu_741_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_50_fu_1092_p2() {
    tmp_50_fu_1092_p2 = (!C_reg_1224.read().is_01() || !C_3_reg_525.read().is_01())? sc_lv<32>(): (sc_biguint<32>(C_reg_1224.read()) + sc_biguint<32>(C_3_reg_525.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_51_fu_1098_p2() {
    tmp_51_fu_1098_p2 = (!D_reg_1242.read().is_01() || !D_3_reg_514.read().is_01())? sc_lv<32>(): (sc_biguint<32>(D_reg_1242.read()) + sc_biguint<32>(D_3_reg_514.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_52_fu_1104_p2() {
    tmp_52_fu_1104_p2 = (!E_reg_1248.read().is_01() || !E_3_reg_503.read().is_01())? sc_lv<32>(): (sc_biguint<32>(E_reg_1248.read()) + sc_biguint<32>(E_3_reg_503.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_54_fu_1056_p2() {
    tmp_54_fu_1056_p2 = (C_3_reg_525.read() ^ B_3_reg_536.read());
}

void SHA1ProcessMessageBlock::thread_tmp_55_fu_1062_p2() {
    tmp_55_fu_1062_p2 = (tmp_54_fu_1056_p2.read() ^ D_3_reg_514.read());
}

void SHA1ProcessMessageBlock::thread_tmp_56_fu_1033_p1() {
    tmp_56_fu_1033_p1 = esl_zext<64,7>(t_5_reg_558.read());
}

void SHA1ProcessMessageBlock::thread_tmp_57_fu_1068_p2() {
    tmp_57_fu_1068_p2 = (!reg_627.read().is_01() || !ap_const_lv32_CA62C1D6.is_01())? sc_lv<32>(): (sc_biguint<32>(reg_627.read()) + sc_bigint<32>(ap_const_lv32_CA62C1D6));
}

void SHA1ProcessMessageBlock::thread_tmp_58_fu_1074_p2() {
    tmp_58_fu_1074_p2 = (!tmp_57_fu_1068_p2.read().is_01() || !tmp_55_fu_1062_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_57_fu_1068_p2.read()) + sc_biguint<32>(tmp_55_fu_1062_p2.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_59_fu_1080_p2() {
    tmp_59_fu_1080_p2 = (!tmp_58_fu_1074_p2.read().is_01() || !E_3_reg_503.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_58_fu_1074_p2.read()) + sc_biguint<32>(E_3_reg_503.read()));
}

void SHA1ProcessMessageBlock::thread_tmp_5_fu_751_p1() {
    tmp_5_fu_751_p1 = esl_zext<64,5>(t_reg_286.read());
}

void SHA1ProcessMessageBlock::thread_tmp_6_fu_720_p2() {
    tmp_6_fu_720_p2 = (tmp_1_fu_707_p3.read() | ap_const_lv6_1);
}

void SHA1ProcessMessageBlock::thread_tmp_7_fu_726_p1() {
    tmp_7_fu_726_p1 = esl_zext<64,6>(tmp_6_fu_720_p2.read());
}

void SHA1ProcessMessageBlock::thread_tmp_8_fu_741_p2() {
    tmp_8_fu_741_p2 = (tmp_1_reg_1117.read() | ap_const_lv6_3);
}

void SHA1ProcessMessageBlock::thread_tmp_fu_703_p1() {
    tmp_fu_703_p1 = t_reg_286.read().range(4-1, 0);
}

void SHA1ProcessMessageBlock::thread_tmp_s_fu_731_p2() {
    tmp_s_fu_731_p2 = (tmp_1_reg_1117.read() | ap_const_lv6_2);
}

void SHA1ProcessMessageBlock::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_691_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_767_p2.read())) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            if (!esl_seteq<1,1,1>(exitcond3_fu_844_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 16384 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_909_p2.read())) {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            } else {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 131072 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_962_p2.read())) {
                ap_NS_fsm = ap_ST_st21_fsm_20;
            } else {
                ap_NS_fsm = ap_ST_st19_fsm_18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 1048576 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1027_p2.read())) {
                ap_NS_fsm = ap_ST_st24_fsm_23;
            } else {
                ap_NS_fsm = ap_ST_st22_fsm_21;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void SHA1ProcessMessageBlock::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Intermediate_Hash_address0\" :  \"" << context_Intermediate_Hash_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Intermediate_Hash_ce0\" :  \"" << context_Intermediate_Hash_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Intermediate_Hash_we0\" :  \"" << context_Intermediate_Hash_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Intermediate_Hash_d0\" :  \"" << context_Intermediate_Hash_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"context_Intermediate_Hash_q0\" :  \"" << context_Intermediate_Hash_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Intermediate_Hash_address1\" :  \"" << context_Intermediate_Hash_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Intermediate_Hash_ce1\" :  \"" << context_Intermediate_Hash_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Intermediate_Hash_we1\" :  \"" << context_Intermediate_Hash_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Intermediate_Hash_d1\" :  \"" << context_Intermediate_Hash_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"context_Intermediate_Hash_q1\" :  \"" << context_Intermediate_Hash_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Message_Block_Index\" :  \"" << context_Message_Block_Index.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Message_Block_Index_ap_vld\" :  \"" << context_Message_Block_Index_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Message_Block_address0\" :  \"" << context_Message_Block_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Message_Block_ce0\" :  \"" << context_Message_Block_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"context_Message_Block_q0\" :  \"" << context_Message_Block_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Message_Block_address1\" :  \"" << context_Message_Block_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"context_Message_Block_ce1\" :  \"" << context_Message_Block_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"context_Message_Block_q1\" :  \"" << context_Message_Block_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

