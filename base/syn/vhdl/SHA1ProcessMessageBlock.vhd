-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SHA1ProcessMessageBlock is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    context_Intermediate_Hash_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    context_Intermediate_Hash_ce0 : OUT STD_LOGIC;
    context_Intermediate_Hash_we0 : OUT STD_LOGIC;
    context_Intermediate_Hash_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    context_Intermediate_Hash_ce1 : OUT STD_LOGIC;
    context_Intermediate_Hash_we1 : OUT STD_LOGIC;
    context_Intermediate_Hash_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    context_Message_Block_Index : OUT STD_LOGIC_VECTOR (15 downto 0);
    context_Message_Block_Index_ap_vld : OUT STD_LOGIC;
    context_Message_Block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    context_Message_Block_ce0 : OUT STD_LOGIC;
    context_Message_Block_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    context_Message_Block_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    context_Message_Block_ce1 : OUT STD_LOGIC;
    context_Message_Block_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of SHA1ProcessMessageBlock is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "SHA1ProcessMessageBlock,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.280000,HLS_SYN_LAT=414,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1164,HLS_SYN_LUT=1944}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_72 : STD_LOGIC_VECTOR (6 downto 0) := "1110010";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_38 : BOOLEAN;
    signal K_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal K_ce0 : STD_LOGIC;
    signal K_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_607 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_82 : BOOLEAN;
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_89 : BOOLEAN;
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_97 : BOOLEAN;
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_105 : BOOLEAN;
    signal t_6_fu_629_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_6_reg_1214 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_115 : BOOLEAN;
    signal tmp_1_fu_639_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1219 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond5_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal context_Message_Block_load_reg_1235 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_133 : BOOLEAN;
    signal context_Message_Block_load_1_reg_1240 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_147 : BOOLEAN;
    signal exitcond4_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal W_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_load_reg_1274 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_165 : BOOLEAN;
    signal W_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_load_1_reg_1279 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_7_fu_791_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_180 : BOOLEAN;
    signal A_reg_1299 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_188 : BOOLEAN;
    signal context_Intermediate_Hash_addr_1_reg_1305 : STD_LOGIC_VECTOR (2 downto 0);
    signal context_Intermediate_Hash_addr_2_reg_1310 : STD_LOGIC_VECTOR (2 downto 0);
    signal B_reg_1315 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_200 : BOOLEAN;
    signal C_reg_1321 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_reg_1339 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_reg_1345 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_8_fu_803_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_8_reg_1354 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_216 : BOOLEAN;
    signal exitcond3_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_fu_872_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_230 : BOOLEAN;
    signal C_1_fu_892_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_241 : BOOLEAN;
    signal exitcond2_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_9_fu_911_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_9_reg_1382 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_1_fu_963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_255 : BOOLEAN;
    signal C_2_fu_983_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_266 : BOOLEAN;
    signal exitcond1_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_10_fu_1002_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_10_reg_1405 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_2_fu_1066_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_280 : BOOLEAN;
    signal C_3_fu_1086_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_291 : BOOLEAN;
    signal exitcond_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp17_fu_1145_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_reg_1428 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_4_fu_1165_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_4_reg_1433 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_11_fu_1173_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_11_reg_1438 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_37_fu_1191_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_reg_1443 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1196_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_1448 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_1201_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_1453 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_1206_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_317 : BOOLEAN;
    signal W_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ce0 : STD_LOGIC;
    signal W_we0 : STD_LOGIC;
    signal W_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ce1 : STD_LOGIC;
    signal W_we1 : STD_LOGIC;
    signal W_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_reg_314 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_343 : BOOLEAN;
    signal t_1_reg_326 : STD_LOGIC_VECTOR (6 downto 0);
    signal E1_reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_1_reg_348 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_1_reg_359 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_read_assign_reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_reg_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_2_reg_391 : STD_LOGIC_VECTOR (4 downto 0);
    signal E_s_reg_402 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_4_reg_413 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_2_reg_425 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_read_assign_1_reg_437 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_reg_448 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_3_reg_460 : STD_LOGIC_VECTOR (5 downto 0);
    signal E_2_reg_471 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_5_reg_482 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_3_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_read_assign_2_reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_reg_517 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_4_reg_529 : STD_LOGIC_VECTOR (5 downto 0);
    signal E_3_reg_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_6_reg_550 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_4_reg_562 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_read_assign_3_reg_574 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_5_reg_596 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_678_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_711_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st23_fsm_22 : STD_LOGIC;
    signal ap_sig_428 : BOOLEAN;
    signal tmp_36_fu_1185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_450 : BOOLEAN;
    signal tmp_35_fu_1179_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_635_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_652_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_663_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_673_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_705_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_12_fu_716_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_727_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_16_fu_738_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp4_fu_754_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_749_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal word_assign_fu_759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_765_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_20_fu_769_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_814_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_i1_fu_818_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_fu_842_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_848_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_836_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_854_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_860_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_i1_fu_828_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_866_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_611_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_878_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_i_i_fu_882_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_42_fu_917_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_i2_fu_921_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp8_fu_939_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_945_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_i2_fu_931_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_617_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_969_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_i_i1_fu_973_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_44_fu_1008_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_i3_fu_1012_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_30_fu_1030_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_1036_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_1042_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_1048_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1054_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_i3_fu_1022_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1072_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_i_i2_fu_1076_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_46_fu_1100_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_i4_fu_1104_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp15_fu_1122_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1128_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_fu_1139_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_i4_fu_1114_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1151_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_i_i3_fu_1155_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);

    component SHA1ProcessMessageBlock_K IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SHA1ProcessMessageBlock_W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    K_U : component SHA1ProcessMessageBlock_K
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => K_address0,
        ce0 => K_ce0,
        q0 => K_q0);

    W_U : component SHA1ProcessMessageBlock_W
    generic map (
        DataWidth => 32,
        AddressRange => 80,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_address0,
        ce0 => W_ce0,
        we0 => W_we0,
        d0 => W_d0,
        q0 => W_q0,
        address1 => W_address1,
        ce1 => W_ce1,
        we1 => W_we1,
        d1 => W_d1,
        q1 => W_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    B_1_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                B_1_reg_380 <= temp_fu_872_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                B_1_reg_380 <= A_reg_1299;
            end if; 
        end if;
    end process;

    B_2_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                B_2_reg_448 <= temp_1_fu_963_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                B_2_reg_448 <= B_1_reg_380;
            end if; 
        end if;
    end process;

    B_3_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                B_3_reg_517 <= temp_2_fu_1066_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                B_3_reg_517 <= B_2_reg_448;
            end if; 
        end if;
    end process;

    B_4_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                B_4_reg_584 <= temp_3_fu_1206_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
                B_4_reg_584 <= B_3_reg_517;
            end if; 
        end if;
    end process;

    B_read_assign_1_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                B_read_assign_1_reg_437 <= B_2_reg_448;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                B_read_assign_1_reg_437 <= B_read_assign_reg_370;
            end if; 
        end if;
    end process;

    B_read_assign_2_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                B_read_assign_2_reg_506 <= B_3_reg_517;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                B_read_assign_2_reg_506 <= B_read_assign_1_reg_437;
            end if; 
        end if;
    end process;

    B_read_assign_3_reg_574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                B_read_assign_3_reg_574 <= B_4_reg_584;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
                B_read_assign_3_reg_574 <= B_read_assign_2_reg_506;
            end if; 
        end if;
    end process;

    B_read_assign_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                B_read_assign_reg_370 <= B_1_reg_380;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                B_read_assign_reg_370 <= B_reg_1315;
            end if; 
        end if;
    end process;

    D_1_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                D_1_reg_359 <= C_1_fu_892_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                D_1_reg_359 <= C_reg_1321;
            end if; 
        end if;
    end process;

    D_2_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                D_2_reg_425 <= C_2_fu_983_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                D_2_reg_425 <= D_1_reg_359;
            end if; 
        end if;
    end process;

    D_3_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                D_3_reg_494 <= C_3_fu_1086_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                D_3_reg_494 <= D_2_reg_425;
            end if; 
        end if;
    end process;

    D_4_reg_562_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                D_4_reg_562 <= C_4_reg_1433;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
                D_4_reg_562 <= D_3_reg_494;
            end if; 
        end if;
    end process;

    E1_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                E1_reg_338 <= E_1_reg_348;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                E1_reg_338 <= context_Intermediate_Hash_q0;
            end if; 
        end if;
    end process;

    E_1_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                E_1_reg_348 <= D_1_reg_359;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                E_1_reg_348 <= context_Intermediate_Hash_q1;
            end if; 
        end if;
    end process;

    E_2_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                E_2_reg_471 <= E_5_reg_482;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                E_2_reg_471 <= E_s_reg_402;
            end if; 
        end if;
    end process;

    E_3_reg_540_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                E_3_reg_540 <= E_6_reg_550;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
                E_3_reg_540 <= E_2_reg_471;
            end if; 
        end if;
    end process;

    E_4_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                E_4_reg_413 <= D_2_reg_425;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                E_4_reg_413 <= E_1_reg_348;
            end if; 
        end if;
    end process;

    E_5_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                E_5_reg_482 <= D_3_reg_494;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                E_5_reg_482 <= E_4_reg_413;
            end if; 
        end if;
    end process;

    E_6_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                E_6_reg_550 <= D_4_reg_562;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
                E_6_reg_550 <= E_5_reg_482;
            end if; 
        end if;
    end process;

    E_s_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                E_s_reg_402 <= E_4_reg_413;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                E_s_reg_402 <= E1_reg_338;
            end if; 
        end if;
    end process;

    t_1_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_fu_623_p2 = ap_const_lv1_0)))) then 
                t_1_reg_326 <= ap_const_lv7_10;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                t_1_reg_326 <= t_7_fu_791_p2;
            end if; 
        end if;
    end process;

    t_2_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                t_2_reg_391 <= t_8_reg_1354;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                t_2_reg_391 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    t_3_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                t_3_reg_460 <= t_9_reg_1382;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                t_3_reg_460 <= ap_const_lv6_14;
            end if; 
        end if;
    end process;

    t_4_reg_529_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                t_4_reg_529 <= t_10_reg_1405;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                t_4_reg_529 <= ap_const_lv6_28;
            end if; 
        end if;
    end process;

    t_5_reg_596_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                t_5_reg_596 <= t_11_reg_1438;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
                t_5_reg_596 <= ap_const_lv7_3C;
            end if; 
        end if;
    end process;

    t_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                t_reg_314 <= t_6_reg_1214;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                t_reg_314 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                A_reg_1299 <= context_Intermediate_Hash_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                B_reg_1315 <= context_Intermediate_Hash_q0;
                C_reg_1321 <= context_Intermediate_Hash_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and (ap_const_lv1_0 = exitcond_fu_1094_p2))) then
                C_4_reg_1433 <= C_4_fu_1165_p3;
                t_11_reg_1438 <= t_11_fu_1173_p2;
                tmp17_reg_1428 <= tmp17_fu_1145_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                D_reg_1339 <= context_Intermediate_Hash_q1;
                E_reg_1345 <= context_Intermediate_Hash_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                W_load_1_reg_1279 <= W_q1;
                W_load_reg_1274 <= W_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                context_Message_Block_load_1_reg_1240 <= context_Message_Block_q1;
                context_Message_Block_load_reg_1235 <= context_Message_Block_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18))) then
                reg_607 <= K_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and (ap_const_lv1_0 = exitcond1_fu_991_p2))) then
                t_10_reg_1405 <= t_10_fu_1002_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                t_6_reg_1214 <= t_6_fu_629_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                t_8_reg_1354 <= t_8_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = exitcond2_fu_900_p2))) then
                t_9_reg_1382 <= t_9_fu_911_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_623_p2 = ap_const_lv1_0))) then
                    tmp_1_reg_1219(5 downto 2) <= tmp_1_fu_639_p3(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((ap_const_lv1_0 = exitcond_fu_1094_p2)))) then
                tmp_37_reg_1443 <= tmp_37_fu_1191_p2;
                tmp_38_reg_1448 <= tmp_38_fu_1196_p2;
                tmp_39_reg_1453 <= tmp_39_fu_1201_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1219(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond5_fu_623_p2, exitcond4_fu_699_p2, exitcond3_fu_797_p2, exitcond2_fu_900_p2, exitcond1_fu_991_p2, exitcond_fu_1094_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond5_fu_623_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_699_p2))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_797_p2))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_900_p2))) then
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_991_p2))) then
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                end if;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1094_p2))) then
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                else
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                end if;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    C_1_fu_892_p3 <= (tmp_27_fu_878_p1 & tmp_71_i_i_fu_882_p4);
    C_2_fu_983_p3 <= (tmp_43_fu_969_p1 & tmp_71_i_i1_fu_973_p4);
    C_3_fu_1086_p3 <= (tmp_45_fu_1072_p1 & tmp_71_i_i2_fu_1076_p4);
    C_4_fu_1165_p3 <= (tmp_47_fu_1151_p1 & tmp_71_i_i3_fu_1155_p4);

    K_address0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            K_address0 <= ap_const_lv2_3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            K_address0 <= ap_const_lv2_2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            K_address0 <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            K_address0 <= ap_const_lv2_0;
        else 
            K_address0 <= "XX";
        end if; 
    end process;


    K_ce0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            K_ce0 <= ap_const_logic_1;
        else 
            K_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_address0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3, tmp_5_fu_683_p1, tmp_11_fu_711_p1, tmp_17_fu_744_p1, tmp_25_fu_809_p1, tmp_34_fu_997_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            W_address0 <= tmp_5_fu_683_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            W_address0 <= tmp_34_fu_997_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            W_address0 <= tmp_25_fu_809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            W_address0 <= tmp_17_fu_744_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            W_address0 <= tmp_11_fu_711_p1(7 - 1 downto 0);
        else 
            W_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_address1_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19, tmp_13_fu_722_p1, tmp_15_fu_733_p1, tmp_19_fu_786_p1, tmp_29_fu_906_p1, tmp_41_fu_1134_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            W_address1 <= tmp_19_fu_786_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            W_address1 <= tmp_41_fu_1134_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            W_address1 <= tmp_29_fu_906_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            W_address1 <= tmp_15_fu_733_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            W_address1 <= tmp_13_fu_722_p1(7 - 1 downto 0);
        else 
            W_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            W_ce0 <= ap_const_logic_1;
        else 
            W_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_ce1_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            W_ce1 <= ap_const_logic_1;
        else 
            W_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    W_d0 <= (((context_Message_Block_load_reg_1235 & context_Message_Block_load_1_reg_1240) & context_Message_Block_q0) & context_Message_Block_q1);
    W_d1 <= (tmp_18_fu_765_p1 & tmp_20_fu_769_p3);

    W_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            W_we0 <= ap_const_logic_1;
        else 
            W_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_we1_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            W_we1 <= ap_const_logic_1;
        else 
            W_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_105_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_105 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_115_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_115 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_133_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_133 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_147_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_147 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_165_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_165 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_180_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_180 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_188_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_188 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_200_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_200 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_216_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_216 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_230_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_230 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_241_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_241 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_255_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_255 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_266_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_266 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_280_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_280 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_291_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_291 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_317_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_317 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_343_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_343 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_38_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_38 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_428_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_428 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_450_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_450 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_82_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_82 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_89_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_89 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_97_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_97 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_82)
    begin
        if (ap_sig_82) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_216)
    begin
        if (ap_sig_216) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_230)
    begin
        if (ap_sig_230) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_89)
    begin
        if (ap_sig_89) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_241)
    begin
        if (ap_sig_241) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_255)
    begin
        if (ap_sig_255) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_97)
    begin
        if (ap_sig_97) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_266)
    begin
        if (ap_sig_266) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_280)
    begin
        if (ap_sig_280) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_105)
    begin
        if (ap_sig_105) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_38)
    begin
        if (ap_sig_38) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_291)
    begin
        if (ap_sig_291) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_317)
    begin
        if (ap_sig_317) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_450)
    begin
        if (ap_sig_450) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st23_fsm_22_assign_proc : process(ap_sig_428)
    begin
        if (ap_sig_428) then 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_115)
    begin
        if (ap_sig_115) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_133)
    begin
        if (ap_sig_133) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_343)
    begin
        if (ap_sig_343) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_147)
    begin
        if (ap_sig_147) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_165)
    begin
        if (ap_sig_165) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_180)
    begin
        if (ap_sig_180) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_188)
    begin
        if (ap_sig_188) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_200)
    begin
        if (ap_sig_200) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    context_Intermediate_Hash_addr_1_reg_1305 <= ap_const_lv64_1(3 - 1 downto 0);
    context_Intermediate_Hash_addr_2_reg_1310 <= ap_const_lv64_2(3 - 1 downto 0);

    context_Intermediate_Hash_address0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st8_fsm_7, context_Intermediate_Hash_addr_1_reg_1305, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st22_fsm_21)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            context_Intermediate_Hash_address0 <= context_Intermediate_Hash_addr_1_reg_1305;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            context_Intermediate_Hash_address0 <= "XXX";
        end if; 
    end process;


    context_Intermediate_Hash_address1_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, context_Intermediate_Hash_addr_2_reg_1310, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st22_fsm_21)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            context_Intermediate_Hash_address1 <= context_Intermediate_Hash_addr_2_reg_1310;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        else 
            context_Intermediate_Hash_address1 <= "XXX";
        end if; 
    end process;


    context_Intermediate_Hash_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st22_fsm_21)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21))) then 
            context_Intermediate_Hash_ce0 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_ce1_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st22_fsm_21)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21))) then 
            context_Intermediate_Hash_ce1 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_d0_assign_proc : process(ap_sig_cseq_ST_st20_fsm_19, tmp_38_reg_1448, tmp_36_fu_1185_p2, ap_sig_cseq_ST_st22_fsm_21)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            context_Intermediate_Hash_d0 <= tmp_38_reg_1448;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            context_Intermediate_Hash_d0 <= tmp_36_fu_1185_p2;
        else 
            context_Intermediate_Hash_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    context_Intermediate_Hash_d1_assign_proc : process(ap_sig_cseq_ST_st20_fsm_19, tmp_37_reg_1443, tmp_39_reg_1453, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st22_fsm_21, tmp_35_fu_1179_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            context_Intermediate_Hash_d1 <= tmp_39_reg_1453;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            context_Intermediate_Hash_d1 <= tmp_37_reg_1443;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            context_Intermediate_Hash_d1 <= tmp_35_fu_1179_p2;
        else 
            context_Intermediate_Hash_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    context_Intermediate_Hash_we0_assign_proc : process(ap_sig_cseq_ST_st20_fsm_19, exitcond_fu_1094_p2, ap_sig_cseq_ST_st22_fsm_21)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((ap_const_lv1_0 = exitcond_fu_1094_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21))) then 
            context_Intermediate_Hash_we0 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_we0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_we1_assign_proc : process(ap_sig_cseq_ST_st20_fsm_19, exitcond_fu_1094_p2, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st22_fsm_21)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((ap_const_lv1_0 = exitcond_fu_1094_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21))) then 
            context_Intermediate_Hash_we1 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_we1 <= ap_const_logic_0;
        end if; 
    end process;

    context_Message_Block_Index <= ap_const_lv16_0;

    context_Message_Block_Index_ap_vld_assign_proc : process(ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            context_Message_Block_Index_ap_vld <= ap_const_logic_1;
        else 
            context_Message_Block_Index_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    context_Message_Block_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, tmp_2_fu_647_p1, tmp_3_fu_668_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            context_Message_Block_address0 <= tmp_3_fu_668_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            context_Message_Block_address0 <= tmp_2_fu_647_p1(6 - 1 downto 0);
        else 
            context_Message_Block_address0 <= "XXXXXX";
        end if; 
    end process;


    context_Message_Block_address1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, tmp_7_fu_658_p1, tmp_8_fu_678_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            context_Message_Block_address1 <= tmp_8_fu_678_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            context_Message_Block_address1 <= tmp_7_fu_658_p1(6 - 1 downto 0);
        else 
            context_Message_Block_address1 <= "XXXXXX";
        end if; 
    end process;


    context_Message_Block_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            context_Message_Block_ce0 <= ap_const_logic_1;
        else 
            context_Message_Block_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Message_Block_ce1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            context_Message_Block_ce1 <= ap_const_logic_1;
        else 
            context_Message_Block_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_991_p2 <= "1" when (t_4_reg_529 = ap_const_lv6_3C) else "0";
    exitcond2_fu_900_p2 <= "1" when (t_3_reg_460 = ap_const_lv6_28) else "0";
    exitcond3_fu_797_p2 <= "1" when (t_2_reg_391 = ap_const_lv5_14) else "0";
    exitcond4_fu_699_p2 <= "1" when (t_1_reg_326 = ap_const_lv7_50) else "0";
    exitcond5_fu_623_p2 <= "1" when (t_reg_314 = ap_const_lv5_10) else "0";
    exitcond_fu_1094_p2 <= "1" when (t_5_reg_596 = ap_const_lv7_50) else "0";
    grp_fu_611_p2 <= std_logic_vector(unsigned(reg_607) + unsigned(W_q0));
    grp_fu_617_p2 <= std_logic_vector(unsigned(reg_607) + unsigned(W_q1));
    t_10_fu_1002_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(t_4_reg_529));
    t_11_fu_1173_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(t_5_reg_596));
    t_6_fu_629_p2 <= std_logic_vector(unsigned(t_reg_314) + unsigned(ap_const_lv5_1));
    t_7_fu_791_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(t_1_reg_326));
    t_8_fu_803_p2 <= std_logic_vector(unsigned(t_2_reg_391) + unsigned(ap_const_lv5_1));
    t_9_fu_911_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(t_3_reg_460));
    temp_1_fu_963_p2 <= std_logic_vector(unsigned(tmp10_fu_957_p2) + unsigned(grp_fu_617_p2));
    temp_2_fu_1066_p2 <= std_logic_vector(unsigned(tmp13_fu_1060_p2) + unsigned(grp_fu_611_p2));
    temp_3_fu_1206_p2 <= std_logic_vector(unsigned(tmp17_reg_1428) + unsigned(grp_fu_617_p2));
    temp_fu_872_p2 <= std_logic_vector(unsigned(tmp6_fu_866_p2) + unsigned(grp_fu_611_p2));
    tmp10_fu_957_p2 <= std_logic_vector(unsigned(tmp11_fu_951_p2) + unsigned(tmp_72_i2_fu_931_p3));
    tmp11_fu_951_p2 <= std_logic_vector(unsigned(tmp_28_fu_945_p2) + unsigned(E_s_reg_402));
    tmp13_fu_1060_p2 <= std_logic_vector(unsigned(tmp14_fu_1054_p2) + unsigned(tmp_72_i3_fu_1022_p3));
    tmp14_fu_1054_p2 <= std_logic_vector(unsigned(E_2_reg_471) + unsigned(tmp_33_fu_1048_p2));
    tmp15_fu_1122_p2 <= (B_read_assign_3_reg_574 xor E_6_reg_550);
    tmp17_fu_1145_p2 <= std_logic_vector(unsigned(tmp18_fu_1139_p2) + unsigned(tmp_72_i4_fu_1114_p3));
    tmp18_fu_1139_p2 <= std_logic_vector(unsigned(tmp_40_fu_1128_p2) + unsigned(E_3_reg_540));
    tmp3_fu_749_p2 <= (W_load_reg_1274 xor W_q1);
    tmp4_fu_754_p2 <= (W_load_1_reg_1279 xor W_q0);
    tmp6_fu_866_p2 <= std_logic_vector(unsigned(tmp7_fu_860_p2) + unsigned(tmp_72_i1_fu_828_p3));
    tmp7_fu_860_p2 <= std_logic_vector(unsigned(E1_reg_338) + unsigned(tmp_24_fu_854_p2));
    tmp8_fu_939_p2 <= (B_read_assign_1_reg_437 xor E_4_reg_413);
    tmp_10_fu_705_p2 <= std_logic_vector(signed(ap_const_lv7_7D) + signed(t_1_reg_326));
    tmp_11_fu_711_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_705_p2),64));
    tmp_12_fu_716_p2 <= std_logic_vector(signed(ap_const_lv7_78) + signed(t_1_reg_326));
    tmp_13_fu_722_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_716_p2),64));
    tmp_14_fu_727_p2 <= std_logic_vector(signed(ap_const_lv7_72) + signed(t_1_reg_326));
    tmp_15_fu_733_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_727_p2),64));
    tmp_16_fu_738_p2 <= std_logic_vector(signed(ap_const_lv7_70) + signed(t_1_reg_326));
    tmp_17_fu_744_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_738_p2),64));
    tmp_18_fu_765_p1 <= word_assign_fu_759_p2(31 - 1 downto 0);
    tmp_19_fu_786_p1 <= std_logic_vector(resize(unsigned(t_1_reg_326),64));
    tmp_1_fu_639_p3 <= (tmp_fu_635_p1 & ap_const_lv2_0);
    tmp_20_fu_769_p3 <= word_assign_fu_759_p2(31 downto 31);
    tmp_21_fu_836_p2 <= (D_1_reg_359 and B_read_assign_reg_370);
    tmp_22_fu_842_p2 <= (B_read_assign_reg_370 xor ap_const_lv32_FFFFFFFF);
    tmp_23_fu_848_p2 <= (E_1_reg_348 and tmp_22_fu_842_p2);
    tmp_24_fu_854_p2 <= (tmp_23_fu_848_p2 or tmp_21_fu_836_p2);
    tmp_25_fu_809_p1 <= std_logic_vector(resize(unsigned(t_2_reg_391),64));
    tmp_26_fu_814_p1 <= B_1_reg_380(27 - 1 downto 0);
    tmp_27_fu_878_p1 <= B_read_assign_reg_370(2 - 1 downto 0);
    tmp_28_fu_945_p2 <= (tmp8_fu_939_p2 xor D_2_reg_425);
    tmp_29_fu_906_p1 <= std_logic_vector(resize(unsigned(t_3_reg_460),64));
    tmp_2_fu_647_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_639_p3),64));
    tmp_30_fu_1030_p2 <= (E_5_reg_482 or D_3_reg_494);
    tmp_31_fu_1036_p2 <= (tmp_30_fu_1030_p2 and B_read_assign_2_reg_506);
    tmp_32_fu_1042_p2 <= (E_5_reg_482 and D_3_reg_494);
    tmp_33_fu_1048_p2 <= (tmp_31_fu_1036_p2 or tmp_32_fu_1042_p2);
    tmp_34_fu_997_p1 <= std_logic_vector(resize(unsigned(t_4_reg_529),64));
    tmp_35_fu_1179_p2 <= std_logic_vector(unsigned(A_reg_1299) + unsigned(B_4_reg_584));
    tmp_36_fu_1185_p2 <= std_logic_vector(unsigned(B_reg_1315) + unsigned(B_read_assign_3_reg_574));
    tmp_37_fu_1191_p2 <= std_logic_vector(unsigned(C_reg_1321) + unsigned(D_4_reg_562));
    tmp_38_fu_1196_p2 <= std_logic_vector(unsigned(D_reg_1339) + unsigned(E_6_reg_550));
    tmp_39_fu_1201_p2 <= std_logic_vector(unsigned(E_reg_1345) + unsigned(E_3_reg_540));
    tmp_3_fu_668_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_663_p2),64));
    tmp_40_fu_1128_p2 <= (tmp15_fu_1122_p2 xor D_4_reg_562);
    tmp_41_fu_1134_p1 <= std_logic_vector(resize(unsigned(t_5_reg_596),64));
    tmp_42_fu_917_p1 <= B_2_reg_448(27 - 1 downto 0);
    tmp_43_fu_969_p1 <= B_read_assign_1_reg_437(2 - 1 downto 0);
    tmp_44_fu_1008_p1 <= B_3_reg_517(27 - 1 downto 0);
    tmp_45_fu_1072_p1 <= B_read_assign_2_reg_506(2 - 1 downto 0);
    tmp_46_fu_1100_p1 <= B_4_reg_584(27 - 1 downto 0);
    tmp_47_fu_1151_p1 <= B_read_assign_3_reg_574(2 - 1 downto 0);
    tmp_4_fu_673_p2 <= (tmp_1_reg_1219 or ap_const_lv6_3);
    tmp_5_fu_683_p1 <= std_logic_vector(resize(unsigned(t_reg_314),64));
    tmp_6_fu_652_p2 <= (tmp_1_fu_639_p3 or ap_const_lv6_1);
    tmp_71_i1_fu_818_p4 <= B_1_reg_380(31 downto 27);
    tmp_71_i2_fu_921_p4 <= B_2_reg_448(31 downto 27);
    tmp_71_i3_fu_1012_p4 <= B_3_reg_517(31 downto 27);
    tmp_71_i4_fu_1104_p4 <= B_4_reg_584(31 downto 27);
    tmp_71_i_i1_fu_973_p4 <= B_read_assign_1_reg_437(31 downto 2);
    tmp_71_i_i2_fu_1076_p4 <= B_read_assign_2_reg_506(31 downto 2);
    tmp_71_i_i3_fu_1155_p4 <= B_read_assign_3_reg_574(31 downto 2);
    tmp_71_i_i_fu_882_p4 <= B_read_assign_reg_370(31 downto 2);
    tmp_72_i1_fu_828_p3 <= (tmp_26_fu_814_p1 & tmp_71_i1_fu_818_p4);
    tmp_72_i2_fu_931_p3 <= (tmp_42_fu_917_p1 & tmp_71_i2_fu_921_p4);
    tmp_72_i3_fu_1022_p3 <= (tmp_44_fu_1008_p1 & tmp_71_i3_fu_1012_p4);
    tmp_72_i4_fu_1114_p3 <= (tmp_46_fu_1100_p1 & tmp_71_i4_fu_1104_p4);
    tmp_7_fu_658_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_652_p2),64));
    tmp_8_fu_678_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_673_p2),64));
    tmp_fu_635_p1 <= t_reg_314(4 - 1 downto 0);
    tmp_s_fu_663_p2 <= (tmp_1_reg_1219 or ap_const_lv6_2);
    word_assign_fu_759_p2 <= (tmp4_fu_754_p2 xor tmp3_fu_749_p2);
end behav;
