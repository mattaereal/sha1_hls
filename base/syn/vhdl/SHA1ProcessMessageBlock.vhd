-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SHA1ProcessMessageBlock is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    context_Intermediate_Hash_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    context_Intermediate_Hash_ce0 : OUT STD_LOGIC;
    context_Intermediate_Hash_we0 : OUT STD_LOGIC;
    context_Intermediate_Hash_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    context_Intermediate_Hash_ce1 : OUT STD_LOGIC;
    context_Intermediate_Hash_we1 : OUT STD_LOGIC;
    context_Intermediate_Hash_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    context_Message_Block_Index : OUT STD_LOGIC_VECTOR (15 downto 0);
    context_Message_Block_Index_ap_vld : OUT STD_LOGIC;
    context_Message_Block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    context_Message_Block_ce0 : OUT STD_LOGIC;
    context_Message_Block_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    context_Message_Block_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    context_Message_Block_ce1 : OUT STD_LOGIC;
    context_Message_Block_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of SHA1ProcessMessageBlock is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "SHA1ProcessMessageBlock,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.513240,HLS_SYN_LAT=555,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1198,HLS_SYN_LUT=2626}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_72 : STD_LOGIC_VECTOR (6 downto 0) := "1110010";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_5A827999 : STD_LOGIC_VECTOR (31 downto 0) := "01011010100000100111100110011001";
    constant ap_const_lv32_6ED9EBA1 : STD_LOGIC_VECTOR (31 downto 0) := "01101110110110011110101110100001";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv32_8F1BBCDC : STD_LOGIC_VECTOR (31 downto 0) := "10001111000110111011110011011100";
    constant ap_const_lv32_CA62C1D6 : STD_LOGIC_VECTOR (31 downto 0) := "11001010011000101100000111010110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_40 : BOOLEAN;
    signal grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_627 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_78 : BOOLEAN;
    signal exitcond3_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_89 : BOOLEAN;
    signal exitcond2_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_100 : BOOLEAN;
    signal exitcond1_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_111 : BOOLEAN;
    signal exitcond_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_124 : BOOLEAN;
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_131 : BOOLEAN;
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_148 : BOOLEAN;
    signal ap_sig_cseq_ST_st23_fsm_22 : STD_LOGIC;
    signal ap_sig_155 : BOOLEAN;
    signal t_6_fu_697_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_6_reg_1112 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_169 : BOOLEAN;
    signal tmp_1_fu_707_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1117 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond5_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal context_Message_Block_load_reg_1133 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_186 : BOOLEAN;
    signal context_Message_Block_load_1_reg_1138 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_200 : BOOLEAN;
    signal exitcond4_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal W_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_load_reg_1172 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_218 : BOOLEAN;
    signal W_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_load_1_reg_1177 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_827_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_1192 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_233 : BOOLEAN;
    signal t_7_fu_838_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_242 : BOOLEAN;
    signal A_reg_1202 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_250 : BOOLEAN;
    signal context_Intermediate_Hash_addr_1_reg_1208 : STD_LOGIC_VECTOR (2 downto 0);
    signal context_Intermediate_Hash_addr_2_reg_1213 : STD_LOGIC_VECTOR (2 downto 0);
    signal B_reg_1218 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_262 : BOOLEAN;
    signal C_reg_1224 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_reg_1242 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_275 : BOOLEAN;
    signal E_reg_1248 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_8_fu_850_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_8_reg_1257 : STD_LOGIC_VECTOR (4 downto 0);
    signal temp_fu_903_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_reg_1267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_289 : BOOLEAN;
    signal t_9_fu_920_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_9_reg_1280 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_1_fu_956_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_reg_1285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_302 : BOOLEAN;
    signal t_10_fu_973_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_10_reg_1298 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_2_fu_1021_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_reg_1303 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_315 : BOOLEAN;
    signal t_11_fu_1038_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_11_reg_1316 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_3_fu_1086_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_reg_1321 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_328 : BOOLEAN;
    signal tmp_52_fu_1104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_reg_1326 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st24_fsm_23 : STD_LOGIC;
    signal ap_sig_337 : BOOLEAN;
    signal W_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ce0 : STD_LOGIC;
    signal W_we0 : STD_LOGIC;
    signal W_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ce1 : STD_LOGIC;
    signal W_we1 : STD_LOGIC;
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_B : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_D : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_E : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word : STD_LOGIC_VECTOR (31 downto 0);
    signal t_reg_286 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_379 : BOOLEAN;
    signal t_1_reg_298 : STD_LOGIC_VECTOR (6 downto 0);
    signal E1_reg_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal D1_reg_320 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_reg_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal B1_reg_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal A1_reg_350 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_2_reg_360 : STD_LOGIC_VECTOR (4 downto 0);
    signal E_s_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_s_reg_382 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_s_reg_393 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_s_reg_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_s_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_3_reg_426 : STD_LOGIC_VECTOR (5 downto 0);
    signal E_2_reg_437 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_2_reg_448 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_2_reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_2_reg_481 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_4_reg_492 : STD_LOGIC_VECTOR (5 downto 0);
    signal E_3_reg_503 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_3_reg_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_3_reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_reg_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_3_reg_547 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_5_reg_558 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_801_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_1033_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st25_fsm_24 : STD_LOGIC;
    signal ap_sig_472 : BOOLEAN;
    signal tmp_49_fu_1050_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1098_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1044_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1092_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_703_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_720_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_731_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_741_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_773_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_12_fu_784_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_795_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_16_fu_806_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_817_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_821_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_867_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_885_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_891_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_879_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_926_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_938_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_932_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_944_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_950_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_979_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_985_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_991_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1009_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1015_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_1056_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1068_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_1062_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_1074_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_1080_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);

    component SHA1ProcessMessageBlock_Swapping IS
    port (
        B : IN STD_LOGIC_VECTOR (31 downto 0);
        B_r : IN STD_LOGIC_VECTOR (31 downto 0);
        D : IN STD_LOGIC_VECTOR (31 downto 0);
        E : IN STD_LOGIC_VECTOR (31 downto 0);
        A : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SHA1ProcessMessageBlock_SHA1CircularShift IS
    port (
        bits : IN STD_LOGIC_VECTOR (5 downto 0);
        word : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SHA1ProcessMessageBlock_W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    W_U : component SHA1ProcessMessageBlock_W
    generic map (
        DataWidth => 32,
        AddressRange => 80,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_address0,
        ce0 => W_ce0,
        we0 => W_we0,
        d0 => W_d0,
        q0 => W_q0,
        address1 => W_address1,
        ce1 => W_ce1,
        we1 => W_we1,
        d1 => grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return,
        q1 => W_q1);

    grp_SHA1ProcessMessageBlock_Swapping_fu_569 : component SHA1ProcessMessageBlock_Swapping
    port map (
        B => grp_SHA1ProcessMessageBlock_Swapping_fu_569_B,
        B_r => grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r,
        D => grp_SHA1ProcessMessageBlock_Swapping_fu_569_D,
        E => grp_SHA1ProcessMessageBlock_Swapping_fu_569_E,
        A => grp_SHA1ProcessMessageBlock_Swapping_fu_569_A,
        ap_return_0 => grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0,
        ap_return_1 => grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1,
        ap_return_2 => grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2,
        ap_return_3 => grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3,
        ap_return_4 => grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4);

    grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594 : component SHA1ProcessMessageBlock_SHA1CircularShift
    port map (
        bits => grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits,
        word => grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word,
        ap_return => grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    A1_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                A1_reg_350 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                A1_reg_350 <= A_reg_1202;
            end if; 
        end if;
    end process;

    A_2_reg_481_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond2_fu_909_p2)))) then 
                A_2_reg_481 <= A_s_reg_415;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                A_2_reg_481 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
            end if; 
        end if;
    end process;

    A_3_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = exitcond1_fu_962_p2)))) then 
                A_3_reg_547 <= A_2_reg_481;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
                A_3_reg_547 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
            end if; 
        end if;
    end process;

    A_s_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((exitcond3_fu_844_p2 = ap_const_lv1_0)))) then 
                A_s_reg_415 <= A1_reg_350;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
                A_s_reg_415 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_1;
            end if; 
        end if;
    end process;

    B1_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                B1_reg_340 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                B1_reg_340 <= B_reg_1218;
            end if; 
        end if;
    end process;

    B_2_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond2_fu_909_p2)))) then 
                B_2_reg_470 <= B_s_reg_404;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                B_2_reg_470 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
            end if; 
        end if;
    end process;

    B_3_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = exitcond1_fu_962_p2)))) then 
                B_3_reg_536 <= B_2_reg_470;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
                B_3_reg_536 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
            end if; 
        end if;
    end process;

    B_s_reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((exitcond3_fu_844_p2 = ap_const_lv1_0)))) then 
                B_s_reg_404 <= B1_reg_340;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
                B_s_reg_404 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_2;
            end if; 
        end if;
    end process;

    C1_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                C1_reg_330 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                C1_reg_330 <= C_reg_1224;
            end if; 
        end if;
    end process;

    C_2_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond2_fu_909_p2)))) then 
                C_2_reg_459 <= C_s_reg_393;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                C_2_reg_459 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
            end if; 
        end if;
    end process;

    C_3_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = exitcond1_fu_962_p2)))) then 
                C_3_reg_525 <= C_2_reg_459;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
                C_3_reg_525 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
            end if; 
        end if;
    end process;

    C_s_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((exitcond3_fu_844_p2 = ap_const_lv1_0)))) then 
                C_s_reg_393 <= C1_reg_330;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
                C_s_reg_393 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_3;
            end if; 
        end if;
    end process;

    D1_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                D1_reg_320 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                D1_reg_320 <= context_Intermediate_Hash_q1;
            end if; 
        end if;
    end process;

    D_2_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond2_fu_909_p2)))) then 
                D_2_reg_448 <= D_s_reg_382;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                D_2_reg_448 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
            end if; 
        end if;
    end process;

    D_3_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = exitcond1_fu_962_p2)))) then 
                D_3_reg_514 <= D_2_reg_448;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
                D_3_reg_514 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
            end if; 
        end if;
    end process;

    D_s_reg_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((exitcond3_fu_844_p2 = ap_const_lv1_0)))) then 
                D_s_reg_382 <= D1_reg_320;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
                D_s_reg_382 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_4;
            end if; 
        end if;
    end process;

    E1_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                E1_reg_310 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                E1_reg_310 <= context_Intermediate_Hash_q0;
            end if; 
        end if;
    end process;

    E_2_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond2_fu_909_p2)))) then 
                E_2_reg_437 <= E_s_reg_371;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                E_2_reg_437 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
            end if; 
        end if;
    end process;

    E_3_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = exitcond1_fu_962_p2)))) then 
                E_3_reg_503 <= E_2_reg_437;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
                E_3_reg_503 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
            end if; 
        end if;
    end process;

    E_s_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((exitcond3_fu_844_p2 = ap_const_lv1_0)))) then 
                E_s_reg_371 <= E1_reg_310;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
                E_s_reg_371 <= grp_SHA1ProcessMessageBlock_Swapping_fu_569_ap_return_0;
            end if; 
        end if;
    end process;

    t_1_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond5_fu_691_p2)))) then 
                t_1_reg_298 <= ap_const_lv7_10;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                t_1_reg_298 <= t_7_fu_838_p2;
            end if; 
        end if;
    end process;

    t_2_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                t_2_reg_360 <= t_8_reg_1257;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                t_2_reg_360 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    t_3_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((exitcond3_fu_844_p2 = ap_const_lv1_0)))) then 
                t_3_reg_426 <= ap_const_lv6_14;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
                t_3_reg_426 <= t_9_reg_1280;
            end if; 
        end if;
    end process;

    t_4_reg_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond2_fu_909_p2)))) then 
                t_4_reg_492 <= ap_const_lv6_28;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                t_4_reg_492 <= t_10_reg_1298;
            end if; 
        end if;
    end process;

    t_5_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = exitcond1_fu_962_p2)))) then 
                t_5_reg_558 <= ap_const_lv7_3C;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
                t_5_reg_558 <= t_11_reg_1316;
            end if; 
        end if;
    end process;

    t_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                t_reg_286 <= t_6_reg_1112;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                t_reg_286 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                A_reg_1202 <= context_Intermediate_Hash_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                B_reg_1218 <= context_Intermediate_Hash_q0;
                C_reg_1224 <= context_Intermediate_Hash_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                D_reg_1242 <= context_Intermediate_Hash_q1;
                E_reg_1248 <= context_Intermediate_Hash_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                W_load_1_reg_1177 <= W_q1;
                W_load_reg_1172 <= W_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                context_Message_Block_load_1_reg_1138 <= context_Message_Block_q1;
                context_Message_Block_load_reg_1133 <= context_Message_Block_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (exitcond3_fu_844_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = exitcond2_fu_909_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = exitcond1_fu_962_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (ap_const_lv1_0 = exitcond_fu_1027_p2)))) then
                reg_627 <= grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = exitcond1_fu_962_p2))) then
                t_10_reg_1298 <= t_10_fu_973_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (ap_const_lv1_0 = exitcond_fu_1027_p2))) then
                t_11_reg_1316 <= t_11_fu_1038_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                t_6_reg_1112 <= t_6_fu_697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                t_8_reg_1257 <= t_8_fu_850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = exitcond2_fu_909_p2))) then
                t_9_reg_1280 <= t_9_fu_920_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                temp_1_reg_1285 <= temp_1_fu_956_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then
                temp_2_reg_1303 <= temp_2_fu_1021_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then
                temp_3_reg_1321 <= temp_3_fu_1086_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                temp_reg_1267 <= temp_fu_903_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond5_fu_691_p2))) then
                    tmp_1_reg_1117(5 downto 2) <= tmp_1_fu_707_p3(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                tmp_20_reg_1192 <= tmp_20_fu_827_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then
                tmp_52_reg_1326 <= tmp_52_fu_1104_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1117(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond3_fu_844_p2, exitcond2_fu_909_p2, exitcond1_fu_962_p2, exitcond_fu_1027_p2, exitcond5_fu_691_p2, exitcond4_fu_767_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond5_fu_691_p2))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_767_p2))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                if (not((exitcond3_fu_844_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st15_fsm_14 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_909_p2))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st18_fsm_17 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_962_p2))) then
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                end if;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st21_fsm_20 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1027_p2))) then
                    ap_NS_fsm <= ap_ST_st24_fsm_23;
                else
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                end if;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    W_address0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3, tmp_5_fu_751_p1, tmp_11_fu_779_p1, tmp_17_fu_812_p1, tmp_28_fu_856_p1, tmp_44_fu_968_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            W_address0 <= tmp_5_fu_751_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            W_address0 <= tmp_44_fu_968_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            W_address0 <= tmp_28_fu_856_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            W_address0 <= tmp_17_fu_812_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            W_address0 <= tmp_11_fu_779_p1(7 - 1 downto 0);
        else 
            W_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_address1_assign_proc : process(ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, tmp_13_fu_790_p1, tmp_15_fu_801_p1, tmp_22_fu_833_p1, tmp_35_fu_915_p1, tmp_56_fu_1033_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            W_address1 <= tmp_22_fu_833_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            W_address1 <= tmp_56_fu_1033_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            W_address1 <= tmp_35_fu_915_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            W_address1 <= tmp_15_fu_801_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            W_address1 <= tmp_13_fu_790_p1(7 - 1 downto 0);
        else 
            W_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_ce0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            W_ce0 <= ap_const_logic_1;
        else 
            W_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_ce1_assign_proc : process(ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7))) then 
            W_ce1 <= ap_const_logic_1;
        else 
            W_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    W_d0 <= (((context_Message_Block_load_reg_1133 & context_Message_Block_load_1_reg_1138) & context_Message_Block_q0) & context_Message_Block_q1);

    W_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            W_we0 <= ap_const_logic_1;
        else 
            W_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_we1_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7))) then 
            W_we1 <= ap_const_logic_1;
        else 
            W_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_sig_cseq_ST_st25_fsm_24)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st25_fsm_24)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_100_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_100 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_111_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_111 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_124_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_124 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_131_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_131 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_148_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_148 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_155_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_155 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_169_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_169 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_186_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_186 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_200_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_200 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_218_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_218 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_233_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_233 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_242_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_242 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_250_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_250 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_262_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_262 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_275_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_275 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_289_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_289 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_302_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_302 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_315_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_315 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_328_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_328 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_337_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_337 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    ap_sig_379_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_379 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_40_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_40 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_472_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_472 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_78_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_78 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_89_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_89 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_262)
    begin
        if (ap_sig_262) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_275)
    begin
        if (ap_sig_275) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_78)
    begin
        if (ap_sig_78) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_289)
    begin
        if (ap_sig_289) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_124)
    begin
        if (ap_sig_124) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_89)
    begin
        if (ap_sig_89) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_302)
    begin
        if (ap_sig_302) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_148)
    begin
        if (ap_sig_148) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_100)
    begin
        if (ap_sig_100) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_315)
    begin
        if (ap_sig_315) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_40)
    begin
        if (ap_sig_40) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_131)
    begin
        if (ap_sig_131) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_111)
    begin
        if (ap_sig_111) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_328)
    begin
        if (ap_sig_328) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st23_fsm_22_assign_proc : process(ap_sig_155)
    begin
        if (ap_sig_155) then 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st24_fsm_23_assign_proc : process(ap_sig_337)
    begin
        if (ap_sig_337) then 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st25_fsm_24_assign_proc : process(ap_sig_472)
    begin
        if (ap_sig_472) then 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_169)
    begin
        if (ap_sig_169) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_186)
    begin
        if (ap_sig_186) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_379)
    begin
        if (ap_sig_379) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_200)
    begin
        if (ap_sig_200) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_218)
    begin
        if (ap_sig_218) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_233)
    begin
        if (ap_sig_233) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_242)
    begin
        if (ap_sig_242) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_250)
    begin
        if (ap_sig_250) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    context_Intermediate_Hash_addr_1_reg_1208 <= ap_const_lv64_1(3 - 1 downto 0);
    context_Intermediate_Hash_addr_2_reg_1213 <= ap_const_lv64_2(3 - 1 downto 0);

    context_Intermediate_Hash_address0_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, context_Intermediate_Hash_addr_1_reg_1208, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st24_fsm_23)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            context_Intermediate_Hash_address0 <= context_Intermediate_Hash_addr_1_reg_1208;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            context_Intermediate_Hash_address0 <= "XXX";
        end if; 
    end process;


    context_Intermediate_Hash_address1_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st9_fsm_8, context_Intermediate_Hash_addr_2_reg_1213, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            context_Intermediate_Hash_address1 <= context_Intermediate_Hash_addr_2_reg_1213;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        else 
            context_Intermediate_Hash_address1 <= "XXX";
        end if; 
    end process;


    context_Intermediate_Hash_ce0_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st24_fsm_23)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23))) then 
            context_Intermediate_Hash_ce0 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_ce1_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24))) then 
            context_Intermediate_Hash_ce1 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_d0_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st24_fsm_23, tmp_49_fu_1050_p2, tmp_51_fu_1098_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            context_Intermediate_Hash_d0 <= tmp_51_fu_1098_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            context_Intermediate_Hash_d0 <= tmp_49_fu_1050_p2;
        else 
            context_Intermediate_Hash_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    context_Intermediate_Hash_d1_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, tmp_52_reg_1326, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, tmp_48_fu_1044_p2, tmp_50_fu_1092_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            context_Intermediate_Hash_d1 <= tmp_52_reg_1326;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            context_Intermediate_Hash_d1 <= tmp_50_fu_1092_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            context_Intermediate_Hash_d1 <= tmp_48_fu_1044_p2;
        else 
            context_Intermediate_Hash_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    context_Intermediate_Hash_we0_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, exitcond_fu_1027_p2, ap_sig_cseq_ST_st24_fsm_23)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((ap_const_lv1_0 = exitcond_fu_1027_p2))))) then 
            context_Intermediate_Hash_we0 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_we0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_we1_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, exitcond_fu_1027_p2, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((ap_const_lv1_0 = exitcond_fu_1027_p2))))) then 
            context_Intermediate_Hash_we1 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_we1 <= ap_const_logic_0;
        end if; 
    end process;

    context_Message_Block_Index <= ap_const_lv16_0;

    context_Message_Block_Index_ap_vld_assign_proc : process(ap_sig_cseq_ST_st25_fsm_24)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            context_Message_Block_Index_ap_vld <= ap_const_logic_1;
        else 
            context_Message_Block_Index_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    context_Message_Block_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, tmp_2_fu_715_p1, tmp_3_fu_736_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            context_Message_Block_address0 <= tmp_3_fu_736_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            context_Message_Block_address0 <= tmp_2_fu_715_p1(6 - 1 downto 0);
        else 
            context_Message_Block_address0 <= "XXXXXX";
        end if; 
    end process;


    context_Message_Block_address1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, tmp_7_fu_726_p1, tmp_4_fu_746_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            context_Message_Block_address1 <= tmp_4_fu_746_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            context_Message_Block_address1 <= tmp_7_fu_726_p1(6 - 1 downto 0);
        else 
            context_Message_Block_address1 <= "XXXXXX";
        end if; 
    end process;


    context_Message_Block_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            context_Message_Block_ce0 <= ap_const_logic_1;
        else 
            context_Message_Block_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Message_Block_ce1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            context_Message_Block_ce1 <= ap_const_logic_1;
        else 
            context_Message_Block_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_962_p2 <= "1" when (t_4_reg_492 = ap_const_lv6_3C) else "0";
    exitcond2_fu_909_p2 <= "1" when (t_3_reg_426 = ap_const_lv6_28) else "0";
    exitcond3_fu_844_p2 <= "1" when (t_2_reg_360 = ap_const_lv5_14) else "0";
    exitcond4_fu_767_p2 <= "1" when (t_1_reg_298 = ap_const_lv7_50) else "0";
    exitcond5_fu_691_p2 <= "1" when (t_reg_286 = ap_const_lv5_10) else "0";
    exitcond_fu_1027_p2 <= "1" when (t_5_reg_558 = ap_const_lv7_50) else "0";

    grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, exitcond3_fu_844_p2, ap_sig_cseq_ST_st15_fsm_14, exitcond2_fu_909_p2, ap_sig_cseq_ST_st18_fsm_17, exitcond1_fu_962_p2, ap_sig_cseq_ST_st21_fsm_20, exitcond_fu_1027_p2, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (exitcond3_fu_844_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = exitcond2_fu_909_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = exitcond1_fu_962_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (ap_const_lv1_0 = exitcond_fu_1027_p2)))) then 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits <= ap_const_lv6_5;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits <= ap_const_lv6_1;
        else 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_bits <= "XXXXXX";
        end if; 
    end process;


    grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, exitcond3_fu_844_p2, ap_sig_cseq_ST_st15_fsm_14, exitcond2_fu_909_p2, ap_sig_cseq_ST_st18_fsm_17, exitcond1_fu_962_p2, ap_sig_cseq_ST_st21_fsm_20, exitcond_fu_1027_p2, tmp_20_reg_1192, ap_sig_cseq_ST_st8_fsm_7, A1_reg_350, A_s_reg_415, A_2_reg_481, A_3_reg_547)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (ap_const_lv1_0 = exitcond_fu_1027_p2))) then 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word <= A_3_reg_547;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = exitcond1_fu_962_p2))) then 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word <= A_2_reg_481;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = exitcond2_fu_909_p2))) then 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word <= A_s_reg_415;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (exitcond3_fu_844_p2 = ap_const_lv1_0))) then 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word <= A1_reg_350;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word <= tmp_20_reg_1192;
        else 
            grp_SHA1ProcessMessageBlock_SHA1CircularShift_fu_594_word <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SHA1ProcessMessageBlock_Swapping_fu_569_A_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st23_fsm_22, temp_reg_1267, temp_1_reg_1285, temp_2_reg_1303, temp_3_reg_1321)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_A <= temp_3_reg_1321;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_A <= temp_2_reg_1303;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_A <= temp_1_reg_1285;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_A <= temp_reg_1267;
        else 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st23_fsm_22, A1_reg_350, A_s_reg_415, A_2_reg_481, A_3_reg_547)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B <= A_3_reg_547;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B <= A_2_reg_481;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B <= A_s_reg_415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B <= A1_reg_350;
        else 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st23_fsm_22, B1_reg_340, B_s_reg_404, B_2_reg_470, B_3_reg_536)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r <= B_3_reg_536;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r <= B_2_reg_470;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r <= B_s_reg_404;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r <= B1_reg_340;
        else 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_B_r <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SHA1ProcessMessageBlock_Swapping_fu_569_D_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st23_fsm_22, C1_reg_330, C_s_reg_393, C_2_reg_459, C_3_reg_525)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_D <= C_3_reg_525;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_D <= C_2_reg_459;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_D <= C_s_reg_393;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_D <= C1_reg_330;
        else 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_D <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SHA1ProcessMessageBlock_Swapping_fu_569_E_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st23_fsm_22, D1_reg_320, D_s_reg_382, D_2_reg_448, D_3_reg_514)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_E <= D_3_reg_514;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_E <= D_2_reg_448;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_E <= D_s_reg_382;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_E <= D1_reg_320;
        else 
            grp_SHA1ProcessMessageBlock_Swapping_fu_569_E <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    t_10_fu_973_p2 <= std_logic_vector(unsigned(t_4_reg_492) + unsigned(ap_const_lv6_1));
    t_11_fu_1038_p2 <= std_logic_vector(unsigned(t_5_reg_558) + unsigned(ap_const_lv7_1));
    t_6_fu_697_p2 <= std_logic_vector(unsigned(t_reg_286) + unsigned(ap_const_lv5_1));
    t_7_fu_838_p2 <= std_logic_vector(unsigned(t_1_reg_298) + unsigned(ap_const_lv7_1));
    t_8_fu_850_p2 <= std_logic_vector(unsigned(t_2_reg_360) + unsigned(ap_const_lv5_1));
    t_9_fu_920_p2 <= std_logic_vector(unsigned(t_3_reg_426) + unsigned(ap_const_lv6_1));
    temp_1_fu_956_p2 <= std_logic_vector(unsigned(tmp_38_fu_950_p2) + unsigned(W_q1));
    temp_2_fu_1021_p2 <= std_logic_vector(unsigned(tmp_47_fu_1015_p2) + unsigned(tmp_43_fu_997_p2));
    temp_3_fu_1086_p2 <= std_logic_vector(unsigned(tmp_59_fu_1080_p2) + unsigned(W_q1));
    temp_fu_903_p2 <= std_logic_vector(unsigned(tmp_31_fu_897_p2) + unsigned(W_q0));
    tmp_10_fu_773_p2 <= std_logic_vector(unsigned(t_1_reg_298) + unsigned(ap_const_lv7_7D));
    tmp_11_fu_779_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_773_p2),64));
    tmp_12_fu_784_p2 <= std_logic_vector(unsigned(t_1_reg_298) + unsigned(ap_const_lv7_78));
    tmp_13_fu_790_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_784_p2),64));
    tmp_14_fu_795_p2 <= std_logic_vector(unsigned(t_1_reg_298) + unsigned(ap_const_lv7_72));
    tmp_15_fu_801_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_795_p2),64));
    tmp_16_fu_806_p2 <= std_logic_vector(unsigned(t_1_reg_298) + unsigned(ap_const_lv7_70));
    tmp_17_fu_812_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_806_p2),64));
    tmp_18_fu_817_p2 <= (W_load_1_reg_1177 xor W_load_reg_1172);
    tmp_19_fu_821_p2 <= (tmp_18_fu_817_p2 xor W_q1);
    tmp_1_fu_707_p3 <= (tmp_fu_703_p1 & ap_const_lv2_0);
    tmp_20_fu_827_p2 <= (tmp_19_fu_821_p2 xor W_q0);
    tmp_22_fu_833_p1 <= std_logic_vector(resize(unsigned(t_1_reg_298),64));
    tmp_24_fu_861_p2 <= (C1_reg_330 and B1_reg_340);
    tmp_25_fu_867_p2 <= (B1_reg_340 xor ap_const_lv32_FFFFFFFF);
    tmp_26_fu_873_p2 <= (D1_reg_320 and tmp_25_fu_867_p2);
    tmp_27_fu_879_p2 <= (tmp_26_fu_873_p2 or tmp_24_fu_861_p2);
    tmp_28_fu_856_p1 <= std_logic_vector(resize(unsigned(t_2_reg_360),64));
    tmp_29_fu_885_p2 <= std_logic_vector(unsigned(reg_627) + unsigned(ap_const_lv32_5A827999));
    tmp_2_fu_715_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_707_p3),64));
    tmp_30_fu_891_p2 <= std_logic_vector(unsigned(tmp_29_fu_885_p2) + unsigned(E1_reg_310));
    tmp_31_fu_897_p2 <= std_logic_vector(unsigned(tmp_30_fu_891_p2) + unsigned(tmp_27_fu_879_p2));
    tmp_33_fu_926_p2 <= (C_s_reg_393 xor B_s_reg_404);
    tmp_34_fu_932_p2 <= (tmp_33_fu_926_p2 xor D_s_reg_382);
    tmp_35_fu_915_p1 <= std_logic_vector(resize(unsigned(t_3_reg_426),64));
    tmp_36_fu_938_p2 <= std_logic_vector(unsigned(reg_627) + unsigned(ap_const_lv32_6ED9EBA1));
    tmp_37_fu_944_p2 <= std_logic_vector(unsigned(tmp_36_fu_938_p2) + unsigned(tmp_34_fu_932_p2));
    tmp_38_fu_950_p2 <= std_logic_vector(unsigned(tmp_37_fu_944_p2) + unsigned(E_s_reg_371));
    tmp_3_fu_736_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_731_p2),64));
    tmp_40_fu_979_p2 <= (D_2_reg_448 or C_2_reg_459);
    tmp_41_fu_985_p2 <= (tmp_40_fu_979_p2 and B_2_reg_470);
    tmp_42_fu_991_p2 <= (D_2_reg_448 and C_2_reg_459);
    tmp_43_fu_997_p2 <= (tmp_41_fu_985_p2 or tmp_42_fu_991_p2);
    tmp_44_fu_968_p1 <= std_logic_vector(resize(unsigned(t_4_reg_492),64));
    tmp_45_fu_1003_p2 <= std_logic_vector(unsigned(reg_627) + unsigned(ap_const_lv32_8F1BBCDC));
    tmp_46_fu_1009_p2 <= std_logic_vector(unsigned(tmp_45_fu_1003_p2) + unsigned(E_2_reg_437));
    tmp_47_fu_1015_p2 <= std_logic_vector(unsigned(tmp_46_fu_1009_p2) + unsigned(W_q0));
    tmp_48_fu_1044_p2 <= std_logic_vector(unsigned(A_reg_1202) + unsigned(A_3_reg_547));
    tmp_49_fu_1050_p2 <= std_logic_vector(unsigned(B_reg_1218) + unsigned(B_3_reg_536));
    tmp_4_fu_746_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_741_p2),64));
    tmp_50_fu_1092_p2 <= std_logic_vector(unsigned(C_reg_1224) + unsigned(C_3_reg_525));
    tmp_51_fu_1098_p2 <= std_logic_vector(unsigned(D_reg_1242) + unsigned(D_3_reg_514));
    tmp_52_fu_1104_p2 <= std_logic_vector(unsigned(E_reg_1248) + unsigned(E_3_reg_503));
    tmp_54_fu_1056_p2 <= (C_3_reg_525 xor B_3_reg_536);
    tmp_55_fu_1062_p2 <= (tmp_54_fu_1056_p2 xor D_3_reg_514);
    tmp_56_fu_1033_p1 <= std_logic_vector(resize(unsigned(t_5_reg_558),64));
    tmp_57_fu_1068_p2 <= std_logic_vector(unsigned(reg_627) + unsigned(ap_const_lv32_CA62C1D6));
    tmp_58_fu_1074_p2 <= std_logic_vector(unsigned(tmp_57_fu_1068_p2) + unsigned(tmp_55_fu_1062_p2));
    tmp_59_fu_1080_p2 <= std_logic_vector(unsigned(tmp_58_fu_1074_p2) + unsigned(E_3_reg_503));
    tmp_5_fu_751_p1 <= std_logic_vector(resize(unsigned(t_reg_286),64));
    tmp_6_fu_720_p2 <= (tmp_1_fu_707_p3 or ap_const_lv6_1);
    tmp_7_fu_726_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_720_p2),64));
    tmp_8_fu_741_p2 <= (tmp_1_reg_1117 or ap_const_lv6_3);
    tmp_fu_703_p1 <= t_reg_286(4 - 1 downto 0);
    tmp_s_fu_731_p2 <= (tmp_1_reg_1117 or ap_const_lv6_2);
end behav;
