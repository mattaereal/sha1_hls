// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "SHA1ProcessMessageBlock_Loop_loop1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_ST_st2_fsm_1 = "10";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_ST_st3_fsm_2 = "100";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_ST_st4_fsm_3 = "1000";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_ST_st5_fsm_4 = "10000";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_ST_st6_fsm_5 = "100000";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<32> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv1_1 = "1";
const sc_lv<32> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv32_5 = "101";
const sc_lv<32> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv32_1 = "1";
const sc_lv<1> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv1_0 = "0";
const sc_lv<32> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv32_2 = "10";
const sc_lv<32> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv32_6 = "110";
const sc_lv<32> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv32_4 = "100";
const sc_lv<5> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv5_0 = "00000";
const sc_lv<32> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv32_3 = "11";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv7_10 = "10000";
const sc_lv<5> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv5_10 = "10000";
const sc_lv<5> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv5_1 = "1";
const sc_lv<2> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv2_0 = "00";
const sc_lv<6> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv6_1 = "1";
const sc_lv<6> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv6_2 = "10";
const sc_lv<6> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv6_3 = "11";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv7_50 = "1010000";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv7_7D = "1111101";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv7_78 = "1111000";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv7_72 = "1110010";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv7_70 = "1110000";
const sc_lv<32> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv32_1F = "11111";
const sc_lv<7> SHA1ProcessMessageBlock_Loop_loop1_proc::ap_const_lv7_1 = "1";

SHA1ProcessMessageBlock_Loop_loop1_proc::SHA1ProcessMessageBlock_Loop_loop1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_W_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_5_i_fu_234_p1 );
    sensitive << ( tmp_4_fu_262_p1 );
    sensitive << ( tmp_s_fu_295_p1 );

    SC_METHOD(thread_W_address1);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp_6_fu_273_p1 );
    sensitive << ( tmp_8_fu_284_p1 );
    sensitive << ( tmp_11_fu_337_p1 );

    SC_METHOD(thread_W_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_W_ce1);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_W_d0);
    sensitive << ( context_Message_Block_q0 );
    sensitive << ( context_Message_Block_q1 );
    sensitive << ( reg_372 );
    sensitive << ( reg_415 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_W_d1);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_1_fu_316_p1 );
    sensitive << ( tmp_2_fu_320_p3 );

    SC_METHOD(thread_W_we0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_W_we1);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( exitcond4_fu_250_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( exitcond4_fu_250_p2 );

    SC_METHOD(thread_ap_sig_103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_120);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_128);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_90);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_25 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_69 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_82 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_128 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_103 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_60 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_90 );

    SC_METHOD(thread_context_Message_Block_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_2_i_fu_198_p1 );
    sensitive << ( tmp_11_i_fu_219_p1 );

    SC_METHOD(thread_context_Message_Block_address1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_7_i_fu_209_p1 );
    sensitive << ( tmp_16_i_fu_229_p1 );

    SC_METHOD(thread_context_Message_Block_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_context_Message_Block_ce1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_exitcond4_fu_250_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( t_1_reg_162 );

    SC_METHOD(thread_exitcond5_i_i_fu_174_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( t_0_i_i_reg_150 );

    SC_METHOD(thread_t_2_fu_342_p2);
    sensitive << ( t_1_reg_162 );

    SC_METHOD(thread_t_fu_180_p2);
    sensitive << ( t_0_i_i_reg_150 );

    SC_METHOD(thread_tmp1_fu_300_p2);
    sensitive << ( W_q1 );
    sensitive << ( W_load_reg_351 );

    SC_METHOD(thread_tmp2_fu_305_p2);
    sensitive << ( W_q0 );
    sensitive << ( W_load_1_reg_410 );

    SC_METHOD(thread_tmp_10_i_fu_214_p0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( reg_395 );

    SC_METHOD(thread_tmp_10_i_fu_214_p2);
    sensitive << ( tmp_10_i_fu_214_p0 );

    SC_METHOD(thread_tmp_11_fu_337_p1);
    sensitive << ( t_1_reg_162 );

    SC_METHOD(thread_tmp_11_i_fu_219_p1);
    sensitive << ( tmp_10_i_fu_214_p2 );

    SC_METHOD(thread_tmp_15_i_fu_224_p0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( reg_395 );

    SC_METHOD(thread_tmp_15_i_fu_224_p2);
    sensitive << ( tmp_15_i_fu_224_p0 );

    SC_METHOD(thread_tmp_16_i_fu_229_p1);
    sensitive << ( tmp_15_i_fu_224_p2 );

    SC_METHOD(thread_tmp_1_fu_316_p1);
    sensitive << ( word_assign_fu_310_p2 );

    SC_METHOD(thread_tmp_1_i_fu_190_p3);
    sensitive << ( tmp_fu_186_p1 );

    SC_METHOD(thread_tmp_2_fu_320_p3);
    sensitive << ( word_assign_fu_310_p2 );

    SC_METHOD(thread_tmp_2_i_fu_198_p1);
    sensitive << ( tmp_1_i_fu_190_p3 );

    SC_METHOD(thread_tmp_3_fu_256_p2);
    sensitive << ( t_1_reg_162 );

    SC_METHOD(thread_tmp_4_fu_262_p1);
    sensitive << ( tmp_3_fu_256_p2 );

    SC_METHOD(thread_tmp_5_fu_267_p2);
    sensitive << ( t_1_reg_162 );

    SC_METHOD(thread_tmp_5_i_fu_234_p1);
    sensitive << ( t_0_i_i_reg_150 );

    SC_METHOD(thread_tmp_6_fu_273_p1);
    sensitive << ( tmp_5_fu_267_p2 );

    SC_METHOD(thread_tmp_6_i_fu_203_p2);
    sensitive << ( tmp_1_i_fu_190_p3 );

    SC_METHOD(thread_tmp_7_fu_278_p2);
    sensitive << ( t_1_reg_162 );

    SC_METHOD(thread_tmp_7_i_fu_209_p1);
    sensitive << ( tmp_6_i_fu_203_p2 );

    SC_METHOD(thread_tmp_8_fu_284_p1);
    sensitive << ( tmp_7_fu_278_p2 );

    SC_METHOD(thread_tmp_9_fu_289_p2);
    sensitive << ( t_1_reg_162 );

    SC_METHOD(thread_tmp_fu_186_p1);
    sensitive << ( t_0_i_i_reg_150 );

    SC_METHOD(thread_tmp_s_fu_295_p1);
    sensitive << ( tmp_9_fu_289_p2 );

    SC_METHOD(thread_word_assign_fu_310_p2);
    sensitive << ( tmp2_fu_305_p2 );
    sensitive << ( tmp1_fu_300_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond5_i_i_fu_174_p2 );
    sensitive << ( exitcond4_fu_250_p2 );
    sensitive << ( ap_sig_120 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "SHA1ProcessMessageBlock_Loop_loop1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, context_Message_Block_address0, "(port)context_Message_Block_address0");
    sc_trace(mVcdFile, context_Message_Block_ce0, "(port)context_Message_Block_ce0");
    sc_trace(mVcdFile, context_Message_Block_q0, "(port)context_Message_Block_q0");
    sc_trace(mVcdFile, context_Message_Block_address1, "(port)context_Message_Block_address1");
    sc_trace(mVcdFile, context_Message_Block_ce1, "(port)context_Message_Block_ce1");
    sc_trace(mVcdFile, context_Message_Block_q1, "(port)context_Message_Block_q1");
    sc_trace(mVcdFile, W_address0, "(port)W_address0");
    sc_trace(mVcdFile, W_ce0, "(port)W_ce0");
    sc_trace(mVcdFile, W_we0, "(port)W_we0");
    sc_trace(mVcdFile, W_d0, "(port)W_d0");
    sc_trace(mVcdFile, W_q0, "(port)W_q0");
    sc_trace(mVcdFile, W_address1, "(port)W_address1");
    sc_trace(mVcdFile, W_ce1, "(port)W_ce1");
    sc_trace(mVcdFile, W_we1, "(port)W_we1");
    sc_trace(mVcdFile, W_d1, "(port)W_d1");
    sc_trace(mVcdFile, W_q1, "(port)W_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_25, "ap_sig_25");
    sc_trace(mVcdFile, W_load_reg_351, "W_load_reg_351");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_60, "ap_sig_60");
    sc_trace(mVcdFile, t_fu_180_p2, "t_fu_180_p2");
    sc_trace(mVcdFile, t_reg_356, "t_reg_356");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_69, "ap_sig_69");
    sc_trace(mVcdFile, reg_372, "reg_372");
    sc_trace(mVcdFile, exitcond5_i_i_fu_174_p2, "exitcond5_i_i_fu_174_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_82, "ap_sig_82");
    sc_trace(mVcdFile, t_2_fu_342_p2, "t_2_fu_342_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_90, "ap_sig_90");
    sc_trace(mVcdFile, reg_395, "reg_395");
    sc_trace(mVcdFile, tmp_1_i_fu_190_p3, "tmp_1_i_fu_190_p3");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_103, "ap_sig_103");
    sc_trace(mVcdFile, exitcond4_fu_250_p2, "exitcond4_fu_250_p2");
    sc_trace(mVcdFile, W_load_1_reg_410, "W_load_1_reg_410");
    sc_trace(mVcdFile, reg_415, "reg_415");
    sc_trace(mVcdFile, t_0_i_i_reg_150, "t_0_i_i_reg_150");
    sc_trace(mVcdFile, ap_sig_120, "ap_sig_120");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_128, "ap_sig_128");
    sc_trace(mVcdFile, t_1_reg_162, "t_1_reg_162");
    sc_trace(mVcdFile, tmp_2_i_fu_198_p1, "tmp_2_i_fu_198_p1");
    sc_trace(mVcdFile, tmp_7_i_fu_209_p1, "tmp_7_i_fu_209_p1");
    sc_trace(mVcdFile, tmp_11_i_fu_219_p1, "tmp_11_i_fu_219_p1");
    sc_trace(mVcdFile, tmp_16_i_fu_229_p1, "tmp_16_i_fu_229_p1");
    sc_trace(mVcdFile, tmp_5_i_fu_234_p1, "tmp_5_i_fu_234_p1");
    sc_trace(mVcdFile, tmp_4_fu_262_p1, "tmp_4_fu_262_p1");
    sc_trace(mVcdFile, tmp_6_fu_273_p1, "tmp_6_fu_273_p1");
    sc_trace(mVcdFile, tmp_8_fu_284_p1, "tmp_8_fu_284_p1");
    sc_trace(mVcdFile, tmp_s_fu_295_p1, "tmp_s_fu_295_p1");
    sc_trace(mVcdFile, tmp_11_fu_337_p1, "tmp_11_fu_337_p1");
    sc_trace(mVcdFile, tmp_fu_186_p1, "tmp_fu_186_p1");
    sc_trace(mVcdFile, tmp_6_i_fu_203_p2, "tmp_6_i_fu_203_p2");
    sc_trace(mVcdFile, tmp_10_i_fu_214_p0, "tmp_10_i_fu_214_p0");
    sc_trace(mVcdFile, tmp_10_i_fu_214_p2, "tmp_10_i_fu_214_p2");
    sc_trace(mVcdFile, tmp_15_i_fu_224_p0, "tmp_15_i_fu_224_p0");
    sc_trace(mVcdFile, tmp_15_i_fu_224_p2, "tmp_15_i_fu_224_p2");
    sc_trace(mVcdFile, tmp_3_fu_256_p2, "tmp_3_fu_256_p2");
    sc_trace(mVcdFile, tmp_5_fu_267_p2, "tmp_5_fu_267_p2");
    sc_trace(mVcdFile, tmp_7_fu_278_p2, "tmp_7_fu_278_p2");
    sc_trace(mVcdFile, tmp_9_fu_289_p2, "tmp_9_fu_289_p2");
    sc_trace(mVcdFile, tmp2_fu_305_p2, "tmp2_fu_305_p2");
    sc_trace(mVcdFile, tmp1_fu_300_p2, "tmp1_fu_300_p2");
    sc_trace(mVcdFile, word_assign_fu_310_p2, "word_assign_fu_310_p2");
    sc_trace(mVcdFile, tmp_1_fu_316_p1, "tmp_1_fu_316_p1");
    sc_trace(mVcdFile, tmp_2_fu_320_p3, "tmp_2_fu_320_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

SHA1ProcessMessageBlock_Loop_loop1_proc::~SHA1ProcessMessageBlock_Loop_loop1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_250_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        reg_372 =  (sc_lv<8>) (t_2_fu_342_p2.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        reg_372 = context_Message_Block_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond5_i_i_fu_174_p2.read(), ap_const_lv1_0))) {
        reg_372 =  (sc_lv<8>) (tmp_7_i_fu_209_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        reg_395 =  (sc_lv<7>) (tmp_s_fu_295_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_250_p2.read()))) {
        reg_395 =  (sc_lv<7>) (tmp_6_fu_273_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond5_i_i_fu_174_p2.read(), ap_const_lv1_0))) {
        reg_395 =  (sc_lv<7>) (tmp_1_i_fu_190_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        reg_395 =  (sc_lv<7>) (tmp_16_i_fu_229_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond5_i_i_fu_174_p2.read(), ap_const_lv1_0))) {
        reg_415 =  (sc_lv<8>) (tmp_2_i_fu_198_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        reg_415 = context_Message_Block_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        reg_415 =  (sc_lv<8>) (tmp_8_fu_284_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_250_p2.read()))) {
        reg_415 =  (sc_lv<8>) (tmp_4_fu_262_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        t_0_i_i_reg_150 = t_reg_356.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !ap_sig_120.read())) {
        t_0_i_i_reg_150 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond5_i_i_fu_174_p2.read(), ap_const_lv1_0))) {
        t_1_reg_162 = ap_const_lv7_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        t_1_reg_162 = t_2_fu_342_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        W_load_1_reg_410 = W_q1.read();
        W_load_reg_351 = W_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        t_reg_356 = t_fu_180_p2.read();
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_W_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        W_address0 =  (sc_lv<7>) (tmp_5_i_fu_234_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        W_address0 =  (sc_lv<7>) (tmp_s_fu_295_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        W_address0 =  (sc_lv<7>) (tmp_4_fu_262_p1.read());
    } else {
        W_address0 = "XXXXXXX";
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_W_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        W_address1 =  (sc_lv<7>) (tmp_11_fu_337_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        W_address1 =  (sc_lv<7>) (tmp_8_fu_284_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        W_address1 =  (sc_lv<7>) (tmp_6_fu_273_p1.read());
    } else {
        W_address1 = "XXXXXXX";
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_W_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        W_ce0 = ap_const_logic_1;
    } else {
        W_ce0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_W_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        W_ce1 = ap_const_logic_1;
    } else {
        W_ce1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_W_d0() {
    W_d0 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(reg_415.read(), reg_372.read()), context_Message_Block_q0.read()), context_Message_Block_q1.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_W_d1() {
    W_d1 = esl_concat<31,1>(tmp_1_fu_316_p1.read(), tmp_2_fu_320_p3.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_W_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        W_we0 = ap_const_logic_1;
    } else {
        W_we0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_W_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        W_we1 = ap_const_logic_1;
    } else {
        W_we1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_250_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_250_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_103() {
    ap_sig_103 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_120() {
    ap_sig_120 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_128() {
    ap_sig_128 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_25() {
    ap_sig_25 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_60() {
    ap_sig_60 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_69() {
    ap_sig_69 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_82() {
    ap_sig_82 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_90() {
    ap_sig_90 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_25.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_69.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_82.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_128.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_103.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_60.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_90.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_context_Message_Block_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        context_Message_Block_address0 =  (sc_lv<6>) (tmp_11_i_fu_219_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        context_Message_Block_address0 =  (sc_lv<6>) (tmp_2_i_fu_198_p1.read());
    } else {
        context_Message_Block_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_context_Message_Block_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        context_Message_Block_address1 =  (sc_lv<6>) (tmp_16_i_fu_229_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        context_Message_Block_address1 =  (sc_lv<6>) (tmp_7_i_fu_209_p1.read());
    } else {
        context_Message_Block_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_context_Message_Block_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()))) {
        context_Message_Block_ce0 = ap_const_logic_1;
    } else {
        context_Message_Block_ce0 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_context_Message_Block_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()))) {
        context_Message_Block_ce1 = ap_const_logic_1;
    } else {
        context_Message_Block_ce1 = ap_const_logic_0;
    }
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_exitcond4_fu_250_p2() {
    exitcond4_fu_250_p2 = (!t_1_reg_162.read().is_01() || !ap_const_lv7_50.is_01())? sc_lv<1>(): sc_lv<1>(t_1_reg_162.read() == ap_const_lv7_50);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_exitcond5_i_i_fu_174_p2() {
    exitcond5_i_i_fu_174_p2 = (!t_0_i_i_reg_150.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(t_0_i_i_reg_150.read() == ap_const_lv5_10);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_t_2_fu_342_p2() {
    t_2_fu_342_p2 = (!ap_const_lv7_1.is_01() || !t_1_reg_162.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(t_1_reg_162.read()));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_t_fu_180_p2() {
    t_fu_180_p2 = (!t_0_i_i_reg_150.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(t_0_i_i_reg_150.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp1_fu_300_p2() {
    tmp1_fu_300_p2 = (W_load_reg_351.read() ^ W_q1.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp2_fu_305_p2() {
    tmp2_fu_305_p2 = (W_load_1_reg_410.read() ^ W_q0.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_10_i_fu_214_p0() {
    tmp_10_i_fu_214_p0 =  (sc_lv<6>) (reg_395.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_10_i_fu_214_p2() {
    tmp_10_i_fu_214_p2 = (tmp_10_i_fu_214_p0.read() | ap_const_lv6_2);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_11_fu_337_p1() {
    tmp_11_fu_337_p1 = esl_zext<64,7>(t_1_reg_162.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_11_i_fu_219_p1() {
    tmp_11_i_fu_219_p1 = esl_zext<64,6>(tmp_10_i_fu_214_p2.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_15_i_fu_224_p0() {
    tmp_15_i_fu_224_p0 =  (sc_lv<6>) (reg_395.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_15_i_fu_224_p2() {
    tmp_15_i_fu_224_p2 = (tmp_15_i_fu_224_p0.read() | ap_const_lv6_3);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_16_i_fu_229_p1() {
    tmp_16_i_fu_229_p1 = esl_zext<64,6>(tmp_15_i_fu_224_p2.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_1_fu_316_p1() {
    tmp_1_fu_316_p1 = word_assign_fu_310_p2.read().range(31-1, 0);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_1_i_fu_190_p3() {
    tmp_1_i_fu_190_p3 = esl_concat<4,2>(tmp_fu_186_p1.read(), ap_const_lv2_0);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_2_fu_320_p3() {
    tmp_2_fu_320_p3 = word_assign_fu_310_p2.read().range(31, 31);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_2_i_fu_198_p1() {
    tmp_2_i_fu_198_p1 = esl_zext<64,6>(tmp_1_i_fu_190_p3.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_3_fu_256_p2() {
    tmp_3_fu_256_p2 = (!ap_const_lv7_7D.is_01() || !t_1_reg_162.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_7D) + sc_biguint<7>(t_1_reg_162.read()));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_4_fu_262_p1() {
    tmp_4_fu_262_p1 = esl_zext<64,7>(tmp_3_fu_256_p2.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_5_fu_267_p2() {
    tmp_5_fu_267_p2 = (!ap_const_lv7_78.is_01() || !t_1_reg_162.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_78) + sc_biguint<7>(t_1_reg_162.read()));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_5_i_fu_234_p1() {
    tmp_5_i_fu_234_p1 = esl_zext<64,5>(t_0_i_i_reg_150.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_6_fu_273_p1() {
    tmp_6_fu_273_p1 = esl_zext<64,7>(tmp_5_fu_267_p2.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_6_i_fu_203_p2() {
    tmp_6_i_fu_203_p2 = (tmp_1_i_fu_190_p3.read() | ap_const_lv6_1);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_7_fu_278_p2() {
    tmp_7_fu_278_p2 = (!ap_const_lv7_72.is_01() || !t_1_reg_162.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_72) + sc_biguint<7>(t_1_reg_162.read()));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_7_i_fu_209_p1() {
    tmp_7_i_fu_209_p1 = esl_zext<64,6>(tmp_6_i_fu_203_p2.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_8_fu_284_p1() {
    tmp_8_fu_284_p1 = esl_zext<64,7>(tmp_7_fu_278_p2.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_9_fu_289_p2() {
    tmp_9_fu_289_p2 = (!ap_const_lv7_70.is_01() || !t_1_reg_162.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_70) + sc_biguint<7>(t_1_reg_162.read()));
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_fu_186_p1() {
    tmp_fu_186_p1 = t_0_i_i_reg_150.read().range(4-1, 0);
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_tmp_s_fu_295_p1() {
    tmp_s_fu_295_p1 = esl_zext<64,7>(tmp_9_fu_289_p2.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_word_assign_fu_310_p2() {
    word_assign_fu_310_p2 = (tmp2_fu_305_p2.read() ^ tmp1_fu_300_p2.read());
}

void SHA1ProcessMessageBlock_Loop_loop1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_120.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond5_i_i_fu_174_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_250_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

