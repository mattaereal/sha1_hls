// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SHA1ProcessMessageBlock,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.280000,HLS_SYN_LAT=412,HLS_SYN_TPT=243,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=1062,HLS_SYN_LUT=2093}" *)

module SHA1ProcessMessageBlock (
        ap_clk,
        ap_rst,
        context_Intermediate_Hash_address0,
        context_Intermediate_Hash_ce0,
        context_Intermediate_Hash_d0,
        context_Intermediate_Hash_q0,
        context_Intermediate_Hash_we0,
        context_Intermediate_Hash_address1,
        context_Intermediate_Hash_ce1,
        context_Intermediate_Hash_d1,
        context_Intermediate_Hash_q1,
        context_Intermediate_Hash_we1,
        context_Message_Block_Index,
        context_Message_Block_address0,
        context_Message_Block_ce0,
        context_Message_Block_d0,
        context_Message_Block_q0,
        context_Message_Block_we0,
        context_Message_Block_address1,
        context_Message_Block_ce1,
        context_Message_Block_d1,
        context_Message_Block_q1,
        context_Message_Block_we1,
        context_Message_Block_Index_ap_vld,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle
);

parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_1 = 32'b1;

input   ap_clk;
input   ap_rst;
output  [2:0] context_Intermediate_Hash_address0;
output   context_Intermediate_Hash_ce0;
output  [31:0] context_Intermediate_Hash_d0;
input  [31:0] context_Intermediate_Hash_q0;
output   context_Intermediate_Hash_we0;
output  [2:0] context_Intermediate_Hash_address1;
output   context_Intermediate_Hash_ce1;
output  [31:0] context_Intermediate_Hash_d1;
input  [31:0] context_Intermediate_Hash_q1;
output   context_Intermediate_Hash_we1;
output  [15:0] context_Message_Block_Index;
output  [5:0] context_Message_Block_address0;
output   context_Message_Block_ce0;
output  [7:0] context_Message_Block_d0;
input  [7:0] context_Message_Block_q0;
output   context_Message_Block_we0;
output  [5:0] context_Message_Block_address1;
output   context_Message_Block_ce1;
output  [7:0] context_Message_Block_d1;
input  [7:0] context_Message_Block_q1;
output   context_Message_Block_we1;
output   context_Message_Block_Index_ap_vld;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;

reg ap_idle;

wire   [31:0] W_i_q0;
wire   [31:0] W_i_q1;
wire   [31:0] W_t_q0;
wire   [31:0] W_t_q1;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_start;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_done;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_continue;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_idle;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready;
wire   [5:0] SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_address0;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_ce0;
wire   [5:0] SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_address1;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_ce1;
wire   [6:0] SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_address0;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_ce0;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_we0;
wire   [31:0] SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_d0;
wire   [6:0] SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_address1;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_ce1;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_we1;
wire   [31:0] SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_d1;
wire    ap_chn_write_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W;
wire    SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_pipo_status;
wire    SHA1ProcessMessageBlock_Block_proc_U0_ap_start;
wire    SHA1ProcessMessageBlock_Block_proc_U0_ap_done;
wire    SHA1ProcessMessageBlock_Block_proc_U0_ap_continue;
wire    SHA1ProcessMessageBlock_Block_proc_U0_ap_idle;
wire    SHA1ProcessMessageBlock_Block_proc_U0_ap_ready;
wire   [2:0] SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_address0;
wire    SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_ce0;
wire    SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_we0;
wire   [31:0] SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_d0;
wire   [2:0] SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_address1;
wire    SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_ce1;
wire    SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_we1;
wire   [31:0] SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_d1;
wire   [6:0] SHA1ProcessMessageBlock_Block_proc_U0_W_address0;
wire    SHA1ProcessMessageBlock_Block_proc_U0_W_ce0;
wire   [15:0] SHA1ProcessMessageBlock_Block_proc_U0_context_Message_Block_Index;
wire    SHA1ProcessMessageBlock_Block_proc_U0_context_Message_Block_Index_ap_vld;
wire    ap_sig_hs_continue;
wire    W_i_full_n;
wire    W_t_empty_n;
reg    ap_sig_hs_done;
reg    ap_sig_hs_ready;
reg    ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready;
reg    ap_sig_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready;
reg    ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready;
reg    ap_sig_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready;
reg    ap_sig_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_start;
reg    ap_sig_SHA1ProcessMessageBlock_Block_proc_U0_ap_start;

// power-on initialization
initial begin
#0 ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready = 1'b0;
#0 ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready = 1'b0;
end

SHA1ProcessMessageBlock_W #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
W_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_address0),
    .i_ce0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_ce0),
    .i_we0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_we0),
    .i_d0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_d0),
    .i_q0(W_i_q0),
    .i_address1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_address1),
    .i_ce1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_ce1),
    .i_we1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_we1),
    .i_d1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_d1),
    .i_q1(W_i_q1),
    .t_address0(SHA1ProcessMessageBlock_Block_proc_U0_W_address0),
    .t_ce0(SHA1ProcessMessageBlock_Block_proc_U0_W_ce0),
    .t_we0(1'b0),
    .t_d0(ap_const_lv32_0),
    .t_q0(W_t_q0),
    .t_address1(ap_const_lv7_0),
    .t_ce1(1'b0),
    .t_we1(1'b0),
    .t_d1(ap_const_lv32_0),
    .t_q1(W_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(W_i_full_n),
    .i_write(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_done),
    .t_empty_n(W_t_empty_n),
    .t_read(SHA1ProcessMessageBlock_Block_proc_U0_ap_ready)
);

SHA1ProcessMessageBlock_Loop_loop1_proc SHA1ProcessMessageBlock_Loop_loop1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_start),
    .ap_done(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_done),
    .ap_continue(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_continue),
    .ap_idle(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_idle),
    .ap_ready(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready),
    .context_Message_Block_address0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_address0),
    .context_Message_Block_ce0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_ce0),
    .context_Message_Block_q0(context_Message_Block_q0),
    .context_Message_Block_address1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_address1),
    .context_Message_Block_ce1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_ce1),
    .context_Message_Block_q1(context_Message_Block_q1),
    .W_address0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_address0),
    .W_ce0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_ce0),
    .W_we0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_we0),
    .W_d0(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_d0),
    .W_q0(W_i_q0),
    .W_address1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_address1),
    .W_ce1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_ce1),
    .W_we1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_we1),
    .W_d1(SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_d1),
    .W_q1(W_i_q1)
);

SHA1ProcessMessageBlock_Block_proc SHA1ProcessMessageBlock_Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(SHA1ProcessMessageBlock_Block_proc_U0_ap_start),
    .ap_done(SHA1ProcessMessageBlock_Block_proc_U0_ap_done),
    .ap_continue(SHA1ProcessMessageBlock_Block_proc_U0_ap_continue),
    .ap_idle(SHA1ProcessMessageBlock_Block_proc_U0_ap_idle),
    .ap_ready(SHA1ProcessMessageBlock_Block_proc_U0_ap_ready),
    .context_Intermediate_Hash_address0(SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_address0),
    .context_Intermediate_Hash_ce0(SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_ce0),
    .context_Intermediate_Hash_we0(SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_we0),
    .context_Intermediate_Hash_d0(SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_d0),
    .context_Intermediate_Hash_q0(context_Intermediate_Hash_q0),
    .context_Intermediate_Hash_address1(SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_address1),
    .context_Intermediate_Hash_ce1(SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_ce1),
    .context_Intermediate_Hash_we1(SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_we1),
    .context_Intermediate_Hash_d1(SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_d1),
    .context_Intermediate_Hash_q1(context_Intermediate_Hash_q1),
    .W_address0(SHA1ProcessMessageBlock_Block_proc_U0_W_address0),
    .W_ce0(SHA1ProcessMessageBlock_Block_proc_U0_W_ce0),
    .W_q0(W_t_q0),
    .context_Message_Block_Index(SHA1ProcessMessageBlock_Block_proc_U0_context_Message_Block_Index),
    .context_Message_Block_Index_ap_vld(SHA1ProcessMessageBlock_Block_proc_U0_context_Message_Block_Index_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_start) & (1'b1 == ap_sig_hs_ready))) begin
            ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready <= 1'b0;
        end else if ((1'b0 == ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready)) begin
            ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready <= SHA1ProcessMessageBlock_Block_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_start) & (1'b1 == ap_sig_hs_ready))) begin
            ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready <= 1'b0;
        end else if ((1'b0 == ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready)) begin
            ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready <= SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready;
        end
    end
end

always @ (*) begin
    if (((1'b1 == SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_idle) & (1'b1 == SHA1ProcessMessageBlock_Block_proc_U0_ap_idle) & (1'b0 == W_t_empty_n))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready)) begin
        ap_sig_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready = 1'b1;
    end else if ((1'b0 == ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready)) begin
        ap_sig_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready = SHA1ProcessMessageBlock_Block_proc_U0_ap_ready;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready)) begin
        ap_sig_SHA1ProcessMessageBlock_Block_proc_U0_ap_start = ap_start;
    end else begin
        ap_sig_SHA1ProcessMessageBlock_Block_proc_U0_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready)) begin
        ap_sig_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready = 1'b1;
    end else if ((1'b0 == ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready)) begin
        ap_sig_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready = SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready)) begin
        ap_sig_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_start = ap_start;
    end else begin
        ap_sig_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == SHA1ProcessMessageBlock_Block_proc_U0_ap_done)) begin
        ap_sig_hs_done = 1'b1;
    end else begin
        ap_sig_hs_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_ready) & (1'b1 == ap_sig_SHA1ProcessMessageBlock_Block_proc_U0_ap_ready))) begin
        ap_sig_hs_ready = 1'b1;
    end else begin
        ap_sig_hs_ready = 1'b0;
    end
end

assign SHA1ProcessMessageBlock_Block_proc_U0_ap_continue = 1'b1;

assign SHA1ProcessMessageBlock_Block_proc_U0_ap_start = (W_t_empty_n & ap_sig_SHA1ProcessMessageBlock_Block_proc_U0_ap_start);

assign SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W_pipo_status = W_i_full_n;

assign SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_continue = W_i_full_n;

assign SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_start = ap_sig_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_start;

assign ap_chn_write_SHA1ProcessMessageBlock_Loop_loop1_proc_U0_W = SHA1ProcessMessageBlock_Loop_loop1_proc_U0_ap_done;

assign ap_done = ap_sig_hs_done;

assign ap_ready = ap_sig_hs_ready;

assign ap_sig_hs_continue = 1'b1;

assign context_Intermediate_Hash_address0 = SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_address0;

assign context_Intermediate_Hash_address1 = SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_address1;

assign context_Intermediate_Hash_ce0 = SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_ce0;

assign context_Intermediate_Hash_ce1 = SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_ce1;

assign context_Intermediate_Hash_d0 = SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_d0;

assign context_Intermediate_Hash_d1 = SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_d1;

assign context_Intermediate_Hash_we0 = SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_we0;

assign context_Intermediate_Hash_we1 = SHA1ProcessMessageBlock_Block_proc_U0_context_Intermediate_Hash_we1;

assign context_Message_Block_Index = SHA1ProcessMessageBlock_Block_proc_U0_context_Message_Block_Index;

assign context_Message_Block_Index_ap_vld = SHA1ProcessMessageBlock_Block_proc_U0_context_Message_Block_Index_ap_vld;

assign context_Message_Block_address0 = SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_address0;

assign context_Message_Block_address1 = SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_address1;

assign context_Message_Block_ce0 = SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_ce0;

assign context_Message_Block_ce1 = SHA1ProcessMessageBlock_Loop_loop1_proc_U0_context_Message_Block_ce1;

assign context_Message_Block_d0 = ap_const_lv8_0;

assign context_Message_Block_d1 = ap_const_lv8_0;

assign context_Message_Block_we0 = 1'b0;

assign context_Message_Block_we1 = 1'b0;

endmodule //SHA1ProcessMessageBlock
