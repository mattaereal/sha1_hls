

================================================================
== Vivado HLS Report for 'SHA1ProcessMessageBlock_Block_proc'
================================================================
* Date:           Tue Sep 13 00:41:51 2016

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        sha1_hls
* Solution:       dataflow_inline
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.28|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  169|  169|  169|  169|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- loop3   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop4   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop5   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop6   |   40|   40|         2|          -|          -|    20|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 14
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / (!exitcond3)
	7  / (exitcond3)
6 --> 
	5  / true
7 --> 
	8  / (!exitcond2)
	9  / (exitcond2)
8 --> 
	7  / true
9 --> 
	10  / (!exitcond1)
	11  / (exitcond1)
10 --> 
	9  / true
11 --> 
	12  / (!exitcond)
	13  / (exitcond)
12 --> 
	11  / true
13 --> 
	14  / true
14 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: context_Intermediate_Hash_addr [1/1] 0.00ns
newFuncRoot:0  %context_Intermediate_Hash_addr = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 0

ST_1: A [2/2] 2.39ns
newFuncRoot:1  %A = load i32* %context_Intermediate_Hash_addr, align 4


 <State 2>: 2.39ns
ST_2: A [1/2] 2.39ns
newFuncRoot:1  %A = load i32* %context_Intermediate_Hash_addr, align 4

ST_2: context_Intermediate_Hash_addr_1 [1/1] 0.00ns
newFuncRoot:2  %context_Intermediate_Hash_addr_1 = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 1

ST_2: B [2/2] 2.39ns
newFuncRoot:3  %B = load i32* %context_Intermediate_Hash_addr_1, align 4

ST_2: context_Intermediate_Hash_addr_2 [1/1] 0.00ns
newFuncRoot:4  %context_Intermediate_Hash_addr_2 = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 2

ST_2: C [2/2] 2.39ns
newFuncRoot:5  %C = load i32* %context_Intermediate_Hash_addr_2, align 4


 <State 3>: 2.39ns
ST_3: B [1/2] 2.39ns
newFuncRoot:3  %B = load i32* %context_Intermediate_Hash_addr_1, align 4

ST_3: C [1/2] 2.39ns
newFuncRoot:5  %C = load i32* %context_Intermediate_Hash_addr_2, align 4

ST_3: context_Intermediate_Hash_addr_3 [1/1] 0.00ns
newFuncRoot:6  %context_Intermediate_Hash_addr_3 = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 3

ST_3: D [2/2] 2.39ns
newFuncRoot:7  %D = load i32* %context_Intermediate_Hash_addr_3, align 4

ST_3: context_Intermediate_Hash_addr_4 [1/1] 0.00ns
newFuncRoot:8  %context_Intermediate_Hash_addr_4 = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 4

ST_3: E [2/2] 2.39ns
newFuncRoot:9  %E = load i32* %context_Intermediate_Hash_addr_4, align 4


 <State 4>: 3.96ns
ST_4: D [1/2] 2.39ns
newFuncRoot:7  %D = load i32* %context_Intermediate_Hash_addr_3, align 4

ST_4: E [1/2] 2.39ns
newFuncRoot:9  %E = load i32* %context_Intermediate_Hash_addr_4, align 4

ST_4: stg_30 [1/1] 1.57ns
newFuncRoot:10  br label %0


 <State 5>: 3.48ns
ST_5: E1 [1/1] 0.00ns
:0  %E1 = phi i32 [ %E, %newFuncRoot ], [ %E_4, %1 ]

ST_5: E_4 [1/1] 0.00ns
:1  %E_4 = phi i32 [ %D, %newFuncRoot ], [ %D_1, %1 ]

ST_5: D_1 [1/1] 0.00ns
:2  %D_1 = phi i32 [ %C, %newFuncRoot ], [ %C_1, %1 ]

ST_5: word_assign_1 [1/1] 0.00ns
:3  %word_assign_1 = phi i32 [ %B, %newFuncRoot ], [ %B_1, %1 ]

ST_5: B_1 [1/1] 0.00ns
:4  %B_1 = phi i32 [ %A, %newFuncRoot ], [ %temp, %1 ]

ST_5: t_2 [1/1] 0.00ns
:5  %t_2 = phi i5 [ 0, %newFuncRoot ], [ %t, %1 ]

ST_5: exitcond3 [1/1] 1.91ns
:6  %exitcond3 = icmp eq i5 %t_2, -12

ST_5: empty [1/1] 0.00ns
:7  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_5: t [1/1] 1.72ns
:8  %t = add i5 %t_2, 1

ST_5: stg_40 [1/1] 1.57ns
:9  br i1 %exitcond3, label %.preheader7, label %1

ST_5: tmp_17 [1/1] 0.00ns
:8  %tmp_17 = zext i5 %t_2 to i64

ST_5: W_addr [1/1] 0.00ns
:9  %W_addr = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_17

ST_5: W_load [2/2] 2.71ns
:10  %W_load = load i32* %W_addr, align 4


 <State 6>: 6.65ns
ST_6: stg_44 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str3) nounwind

ST_6: tmp_3 [1/1] 0.00ns
:1  %tmp_3 = trunc i32 %B_1 to i27

ST_6: tmp_s [1/1] 0.00ns
:2  %tmp_s = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_1, i32 27, i32 31)

ST_6: tmp_12 [1/1] 0.00ns
:3  %tmp_12 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_3, i5 %tmp_s)

ST_6: tmp_13 [1/1] 0.00ns (grouped into LUT with out node tmp_16)
:4  %tmp_13 = and i32 %word_assign_1, %D_1

ST_6: tmp_14 [1/1] 0.00ns (grouped into LUT with out node tmp_16)
:5  %tmp_14 = xor i32 %word_assign_1, -1

ST_6: tmp_15 [1/1] 0.00ns (grouped into LUT with out node tmp_16)
:6  %tmp_15 = and i32 %E_4, %tmp_14

ST_6: tmp_16 [1/1] 1.37ns (out node of the LUT)
:7  %tmp_16 = or i32 %tmp_15, %tmp_13

ST_6: W_load [1/2] 2.71ns
:10  %W_load = load i32* %W_addr, align 4

ST_6: tmp [1/1] 1.97ns
:11  %tmp = add i32 %W_load, %E1

ST_6: tmp2 [1/1] 1.97ns
:12  %tmp2 = add i32 1518500249, %tmp_12

ST_6: tmp1 [1/1] 1.97ns
:13  %tmp1 = add i32 %tmp2, %tmp_16

ST_6: temp [1/1] 1.97ns
:14  %temp = add i32 %tmp1, %tmp

ST_6: tmp_4 [1/1] 0.00ns
:15  %tmp_4 = trunc i32 %word_assign_1 to i2

ST_6: tmp_18 [1/1] 0.00ns
:16  %tmp_18 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %word_assign_1, i32 2, i32 31)

ST_6: C_1 [1/1] 0.00ns
:17  %C_1 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_4, i30 %tmp_18)

ST_6: stg_60 [1/1] 0.00ns
:18  br label %0


 <State 7>: 3.51ns
ST_7: E_1 [1/1] 0.00ns
.preheader7:0  %E_1 = phi i32 [ %E_5, %2 ], [ %E1, %0 ]

ST_7: E_5 [1/1] 0.00ns
.preheader7:1  %E_5 = phi i32 [ %D_2, %2 ], [ %E_4, %0 ]

ST_7: D_2 [1/1] 0.00ns
.preheader7:2  %D_2 = phi i32 [ %C_2, %2 ], [ %D_1, %0 ]

ST_7: word_assign_2 [1/1] 0.00ns
.preheader7:3  %word_assign_2 = phi i32 [ %B_2, %2 ], [ %word_assign_1, %0 ]

ST_7: B_2 [1/1] 0.00ns
.preheader7:4  %B_2 = phi i32 [ %temp_1, %2 ], [ %B_1, %0 ]

ST_7: t_3 [1/1] 0.00ns
.preheader7:5  %t_3 = phi i6 [ %t_6, %2 ], [ 20, %0 ]

ST_7: exitcond2 [1/1] 1.94ns
.preheader7:6  %exitcond2 = icmp eq i6 %t_3, -24

ST_7: empty_33 [1/1] 0.00ns
.preheader7:7  %empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_7: stg_69 [1/1] 1.57ns
.preheader7:8  br i1 %exitcond2, label %.preheader6, label %2

ST_7: tmp_22 [1/1] 0.00ns
:6  %tmp_22 = zext i6 %t_3 to i64

ST_7: W_addr_6 [1/1] 0.00ns
:7  %W_addr_6 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_22

ST_7: W_load_4 [2/2] 2.71ns
:8  %W_load_4 = load i32* %W_addr_6, align 4

ST_7: t_6 [1/1] 1.72ns
:16  %t_6 = add i6 1, %t_3


 <State 8>: 6.65ns
ST_8: stg_74 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str4) nounwind

ST_8: tmp_5 [1/1] 0.00ns
:1  %tmp_5 = trunc i32 %B_2 to i27

ST_8: tmp_19 [1/1] 0.00ns
:2  %tmp_19 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_2, i32 27, i32 31)

ST_8: tmp_20 [1/1] 0.00ns
:3  %tmp_20 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_5, i5 %tmp_19)

ST_8: tmp3 [1/1] 0.00ns (grouped into LUT with out node tmp_21)
:4  %tmp3 = xor i32 %E_5, %word_assign_2

ST_8: tmp_21 [1/1] 1.37ns (out node of the LUT)
:5  %tmp_21 = xor i32 %tmp3, %D_2

ST_8: W_load_4 [1/2] 2.71ns
:8  %W_load_4 = load i32* %W_addr_6, align 4

ST_8: tmp4 [1/1] 1.97ns
:9  %tmp4 = add i32 %W_load_4, %E_1

ST_8: tmp6 [1/1] 1.97ns
:10  %tmp6 = add i32 1859775393, %tmp_20

ST_8: tmp5 [1/1] 1.97ns
:11  %tmp5 = add i32 %tmp6, %tmp_21

ST_8: temp_1 [1/1] 1.97ns
:12  %temp_1 = add i32 %tmp5, %tmp4

ST_8: tmp_6 [1/1] 0.00ns
:13  %tmp_6 = trunc i32 %word_assign_2 to i2

ST_8: tmp_23 [1/1] 0.00ns
:14  %tmp_23 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %word_assign_2, i32 2, i32 31)

ST_8: C_2 [1/1] 0.00ns
:15  %C_2 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_6, i30 %tmp_23)

ST_8: stg_88 [1/1] 0.00ns
:17  br label %.preheader7


 <State 9>: 3.51ns
ST_9: E_2 [1/1] 0.00ns
.preheader6:0  %E_2 = phi i32 [ %E_6, %3 ], [ %E_1, %.preheader7 ]

ST_9: E_6 [1/1] 0.00ns
.preheader6:1  %E_6 = phi i32 [ %D_3, %3 ], [ %E_5, %.preheader7 ]

ST_9: D_3 [1/1] 0.00ns
.preheader6:2  %D_3 = phi i32 [ %C_3, %3 ], [ %D_2, %.preheader7 ]

ST_9: word_assign_3 [1/1] 0.00ns
.preheader6:3  %word_assign_3 = phi i32 [ %B_3, %3 ], [ %word_assign_2, %.preheader7 ]

ST_9: B_3 [1/1] 0.00ns
.preheader6:4  %B_3 = phi i32 [ %temp_2, %3 ], [ %B_2, %.preheader7 ]

ST_9: t_4 [1/1] 0.00ns
.preheader6:5  %t_4 = phi i6 [ %t_7, %3 ], [ -24, %.preheader7 ]

ST_9: exitcond1 [1/1] 1.94ns
.preheader6:6  %exitcond1 = icmp eq i6 %t_4, -4

ST_9: empty_34 [1/1] 0.00ns
.preheader6:7  %empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_9: stg_97 [1/1] 1.57ns
.preheader6:8  br i1 %exitcond1, label %.preheader, label %3

ST_9: tmp_30 [1/1] 0.00ns
:8  %tmp_30 = zext i6 %t_4 to i64

ST_9: W_addr_7 [1/1] 0.00ns
:9  %W_addr_7 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_30

ST_9: W_load_5 [2/2] 2.71ns
:10  %W_load_5 = load i32* %W_addr_7, align 4

ST_9: t_7 [1/1] 1.72ns
:18  %t_7 = add i6 1, %t_4


 <State 10>: 7.28ns
ST_10: stg_102 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str5) nounwind

ST_10: tmp_7 [1/1] 0.00ns
:1  %tmp_7 = trunc i32 %B_3 to i27

ST_10: tmp_24 [1/1] 0.00ns
:2  %tmp_24 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_3, i32 27, i32 31)

ST_10: tmp_25 [1/1] 0.00ns
:3  %tmp_25 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_7, i5 %tmp_24)

ST_10: tmp_26 [1/1] 0.00ns (grouped into LUT with out node tmp_29)
:4  %tmp_26 = or i32 %D_3, %E_6

ST_10: tmp_27 [1/1] 0.00ns (grouped into LUT with out node tmp_29)
:5  %tmp_27 = and i32 %tmp_26, %word_assign_3

ST_10: tmp_28 [1/1] 0.00ns (grouped into LUT with out node tmp_29)
:6  %tmp_28 = and i32 %D_3, %E_6

ST_10: tmp_29 [1/1] 1.37ns (out node of the LUT)
:7  %tmp_29 = or i32 %tmp_27, %tmp_28

ST_10: W_load_5 [1/2] 2.71ns
:10  %W_load_5 = load i32* %W_addr_7, align 4

ST_10: tmp7 [1/1] 1.97ns
:11  %tmp7 = add i32 %W_load_5, %E_2

ST_10: tmp9 [1/1] 1.97ns
:12  %tmp9 = add i32 %tmp_29, %tmp_25

ST_10: tmp8 [1/1] 1.97ns
:13  %tmp8 = add i32 -1894007588, %tmp9

ST_10: temp_2 [1/1] 1.97ns
:14  %temp_2 = add i32 %tmp8, %tmp7

ST_10: tmp_8 [1/1] 0.00ns
:15  %tmp_8 = trunc i32 %word_assign_3 to i2

ST_10: tmp_31 [1/1] 0.00ns
:16  %tmp_31 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %word_assign_3, i32 2, i32 31)

ST_10: C_3 [1/1] 0.00ns
:17  %C_3 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_8, i30 %tmp_31)

ST_10: stg_118 [1/1] 0.00ns
:19  br label %.preheader6


 <State 11>: 4.83ns
ST_11: E_3 [1/1] 0.00ns
.preheader:0  %E_3 = phi i32 [ %E_7, %4 ], [ %E_2, %.preheader6 ]

ST_11: E_7 [1/1] 0.00ns
.preheader:1  %E_7 = phi i32 [ %D_4, %4 ], [ %E_6, %.preheader6 ]

ST_11: D_4 [1/1] 0.00ns
.preheader:2  %D_4 = phi i32 [ %C_4, %4 ], [ %D_3, %.preheader6 ]

ST_11: word_assign_4 [1/1] 0.00ns
.preheader:3  %word_assign_4 = phi i32 [ %B_4, %4 ], [ %word_assign_3, %.preheader6 ]

ST_11: B_4 [1/1] 0.00ns
.preheader:4  %B_4 = phi i32 [ %temp_3, %4 ], [ %B_3, %.preheader6 ]

ST_11: t_5 [1/1] 0.00ns
.preheader:5  %t_5 = phi i7 [ %t_8, %4 ], [ 60, %.preheader6 ]

ST_11: exitcond [1/1] 1.97ns
.preheader:6  %exitcond = icmp eq i7 %t_5, -48

ST_11: empty_35 [1/1] 0.00ns
.preheader:7  %empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_11: stg_127 [1/1] 0.00ns
.preheader:8  br i1 %exitcond, label %.ret.exitStub, label %4

ST_11: tmp_9 [1/1] 0.00ns
:1  %tmp_9 = trunc i32 %B_4 to i27

ST_11: tmp_37 [1/1] 0.00ns
:2  %tmp_37 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_4, i32 27, i32 31)

ST_11: tmp_38 [1/1] 0.00ns
:3  %tmp_38 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_9, i5 %tmp_37)

ST_11: tmp10 [1/1] 0.00ns (grouped into LUT with out node tmp_39)
:4  %tmp10 = xor i32 %E_7, %word_assign_4

ST_11: tmp_39 [1/1] 1.37ns (out node of the LUT)
:5  %tmp_39 = xor i32 %tmp10, %D_4

ST_11: tmp_40 [1/1] 0.00ns
:6  %tmp_40 = zext i7 %t_5 to i64

ST_11: W_addr_8 [1/1] 0.00ns
:7  %W_addr_8 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_40

ST_11: W_load_6 [2/2] 2.71ns
:8  %W_load_6 = load i32* %W_addr_8, align 4

ST_11: tmp13 [1/1] 1.97ns
:10  %tmp13 = add i32 -899497514, %tmp_38

ST_11: tmp12 [1/1] 1.97ns
:11  %tmp12 = add i32 %tmp13, %tmp_39

ST_11: tmp_41 [1/1] 0.00ns
:13  %tmp_41 = trunc i32 %word_assign_4 to i2

ST_11: tmp_42 [1/1] 0.00ns
:14  %tmp_42 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %word_assign_4, i32 2, i32 31)

ST_11: C_4 [1/1] 0.00ns
:15  %C_4 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_41, i30 %tmp_42)

ST_11: t_8 [1/1] 1.72ns
:16  %t_8 = add i7 1, %t_5

ST_11: tmp_32 [1/1] 2.44ns
.ret.exitStub:0  %tmp_32 = add i32 %A, %B_4

ST_11: stg_143 [1/1] 2.39ns
.ret.exitStub:1  store i32 %tmp_32, i32* %context_Intermediate_Hash_addr, align 4

ST_11: tmp_33 [1/1] 2.44ns
.ret.exitStub:2  %tmp_33 = add i32 %B, %word_assign_4

ST_11: stg_145 [1/1] 2.39ns
.ret.exitStub:3  store i32 %tmp_33, i32* %context_Intermediate_Hash_addr_1, align 4

ST_11: tmp_34 [1/1] 2.44ns
.ret.exitStub:4  %tmp_34 = add i32 %C, %D_4

ST_11: tmp_35 [1/1] 2.44ns
.ret.exitStub:6  %tmp_35 = add i32 %D, %E_7


 <State 12>: 6.65ns
ST_12: stg_148 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str6) nounwind

ST_12: W_load_6 [1/2] 2.71ns
:8  %W_load_6 = load i32* %W_addr_8, align 4

ST_12: tmp11 [1/1] 1.97ns
:9  %tmp11 = add i32 %W_load_6, %E_3

ST_12: temp_3 [1/1] 1.97ns
:12  %temp_3 = add i32 %tmp12, %tmp11

ST_12: stg_152 [1/1] 0.00ns
:17  br label %.preheader


 <State 13>: 2.44ns
ST_13: stg_153 [1/1] 2.39ns
.ret.exitStub:5  store i32 %tmp_34, i32* %context_Intermediate_Hash_addr_2, align 4

ST_13: stg_154 [1/1] 2.39ns
.ret.exitStub:7  store i32 %tmp_35, i32* %context_Intermediate_Hash_addr_3, align 4

ST_13: tmp_36 [1/1] 2.44ns
.ret.exitStub:8  %tmp_36 = add i32 %E, %E_3


 <State 14>: 2.39ns
ST_14: stg_156 [1/1] 2.39ns
.ret.exitStub:9  store i32 %tmp_36, i32* %context_Intermediate_Hash_addr_4, align 4

ST_14: stg_157 [1/1] 0.00ns
.ret.exitStub:10  call void @_ssdm_op_Write.ap_auto.i16P(i16* %context_Message_Block_Index, i16 0)

ST_14: stg_158 [1/1] 0.00ns
.ret.exitStub:11  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
