// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SHA1ProcessMessageBlock,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.280000,HLS_SYN_LAT=411,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1129,HLS_SYN_LUT=1971}" *)

module SHA1ProcessMessageBlock (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        context_Intermediate_Hash_address0,
        context_Intermediate_Hash_ce0,
        context_Intermediate_Hash_we0,
        context_Intermediate_Hash_d0,
        context_Intermediate_Hash_q0,
        context_Intermediate_Hash_address1,
        context_Intermediate_Hash_ce1,
        context_Intermediate_Hash_we1,
        context_Intermediate_Hash_d1,
        context_Intermediate_Hash_q1,
        context_Message_Block_Index,
        context_Message_Block_Index_ap_vld,
        context_Message_Block_address0,
        context_Message_Block_ce0,
        context_Message_Block_q0,
        context_Message_Block_address1,
        context_Message_Block_ce1,
        context_Message_Block_q1
);

parameter    ap_ST_st1_fsm_0 = 20'b1;
parameter    ap_ST_st2_fsm_1 = 20'b10;
parameter    ap_ST_st3_fsm_2 = 20'b100;
parameter    ap_ST_st4_fsm_3 = 20'b1000;
parameter    ap_ST_st5_fsm_4 = 20'b10000;
parameter    ap_ST_st6_fsm_5 = 20'b100000;
parameter    ap_ST_st7_fsm_6 = 20'b1000000;
parameter    ap_ST_st8_fsm_7 = 20'b10000000;
parameter    ap_ST_st9_fsm_8 = 20'b100000000;
parameter    ap_ST_st10_fsm_9 = 20'b1000000000;
parameter    ap_ST_st11_fsm_10 = 20'b10000000000;
parameter    ap_ST_st12_fsm_11 = 20'b100000000000;
parameter    ap_ST_st13_fsm_12 = 20'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 20'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 20'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 20'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 20'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 20'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 20'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 20'b10000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv6_14 = 6'b10100;
parameter    ap_const_lv6_28 = 6'b101000;
parameter    ap_const_lv7_3C = 7'b111100;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv7_7D = 7'b1111101;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv7_72 = 7'b1110010;
parameter    ap_const_lv7_70 = 7'b1110000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_5A827999 = 32'b1011010100000100111100110011001;
parameter    ap_const_lv32_6ED9EBA1 = 32'b1101110110110011110101110100001;
parameter    ap_const_lv6_3C = 6'b111100;
parameter    ap_const_lv32_8F1BBCDC = 32'b10001111000110111011110011011100;
parameter    ap_const_lv32_CA62C1D6 = 32'b11001010011000101100000111010110;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] context_Intermediate_Hash_address0;
output   context_Intermediate_Hash_ce0;
output   context_Intermediate_Hash_we0;
output  [31:0] context_Intermediate_Hash_d0;
input  [31:0] context_Intermediate_Hash_q0;
output  [2:0] context_Intermediate_Hash_address1;
output   context_Intermediate_Hash_ce1;
output   context_Intermediate_Hash_we1;
output  [31:0] context_Intermediate_Hash_d1;
input  [31:0] context_Intermediate_Hash_q1;
output  [15:0] context_Message_Block_Index;
output   context_Message_Block_Index_ap_vld;
output  [5:0] context_Message_Block_address0;
output   context_Message_Block_ce0;
input  [7:0] context_Message_Block_q0;
output  [5:0] context_Message_Block_address1;
output   context_Message_Block_ce1;
input  [7:0] context_Message_Block_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] context_Intermediate_Hash_address0;
reg context_Intermediate_Hash_ce0;
reg context_Intermediate_Hash_we0;
reg[31:0] context_Intermediate_Hash_d0;
reg[2:0] context_Intermediate_Hash_address1;
reg context_Intermediate_Hash_ce1;
reg context_Intermediate_Hash_we1;
reg[31:0] context_Intermediate_Hash_d1;
reg context_Message_Block_Index_ap_vld;
reg[5:0] context_Message_Block_address0;
reg context_Message_Block_ce0;
reg[5:0] context_Message_Block_address1;
reg context_Message_Block_ce1;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_35;
wire   [4:0] t_6_fu_597_p2;
reg   [4:0] t_6_reg_1206;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_73;
wire   [5:0] tmp_1_fu_607_p3;
reg   [5:0] tmp_1_reg_1211;
wire   [0:0] exitcond5_fu_591_p2;
reg   [7:0] context_Message_Block_load_reg_1227;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_91;
reg   [7:0] context_Message_Block_load_1_reg_1232;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_105;
wire   [0:0] exitcond4_fu_667_p2;
wire   [31:0] W_q0;
reg   [31:0] W_load_reg_1266;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_123;
wire   [31:0] W_q1;
reg   [31:0] W_load_1_reg_1271;
wire   [6:0] t_7_fu_759_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_138;
reg   [31:0] A_reg_1291;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_146;
wire   [2:0] context_Intermediate_Hash_addr_1_reg_1297;
wire   [2:0] context_Intermediate_Hash_addr_2_reg_1302;
reg   [31:0] B_reg_1307;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_158;
reg   [31:0] C_reg_1313;
reg   [31:0] D_reg_1331;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_171;
reg   [31:0] E_reg_1337;
wire   [4:0] t_8_fu_771_p2;
reg   [4:0] t_8_reg_1346;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_181;
wire   [0:0] exitcond3_fu_765_p2;
wire   [31:0] temp_fu_846_p2;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_195;
wire   [31:0] C_1_fu_866_p3;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_206;
wire   [0:0] exitcond2_fu_874_p2;
wire   [5:0] t_9_fu_885_p2;
reg   [5:0] t_9_reg_1374;
wire   [31:0] temp_1_fu_943_p2;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_220;
wire   [31:0] C_2_fu_963_p3;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_231;
wire   [0:0] exitcond1_fu_971_p2;
wire   [5:0] t_10_fu_982_p2;
reg   [5:0] t_10_reg_1397;
wire   [31:0] temp_2_fu_1052_p2;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_245;
wire   [31:0] C_3_fu_1072_p3;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_256;
wire   [0:0] exitcond_fu_1080_p2;
wire   [31:0] tmp17_fu_1109_p2;
reg   [31:0] tmp17_reg_1420;
wire   [31:0] C_4_fu_1129_p3;
reg   [31:0] C_4_reg_1425;
wire   [6:0] t_11_fu_1137_p2;
reg   [6:0] t_11_reg_1430;
wire   [31:0] tmp_37_fu_1155_p2;
reg   [31:0] tmp_37_reg_1435;
wire   [31:0] tmp_38_fu_1160_p2;
reg   [31:0] tmp_38_reg_1440;
wire   [31:0] tmp_39_fu_1165_p2;
reg   [31:0] tmp_39_reg_1445;
wire   [31:0] temp_3_fu_1198_p2;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_282;
reg   [6:0] W_address0;
reg    W_ce0;
reg    W_we0;
wire   [31:0] W_d0;
reg   [6:0] W_address1;
reg    W_ce1;
reg    W_we1;
wire   [31:0] W_d1;
reg   [4:0] t_reg_298;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_308;
reg   [6:0] t_1_reg_310;
reg   [31:0] E1_reg_322;
reg   [31:0] E_1_reg_332;
reg   [31:0] D_1_reg_343;
reg   [31:0] B_read_assign_reg_354;
reg   [31:0] B_1_reg_364;
reg   [4:0] t_2_reg_375;
reg   [31:0] E_4_reg_397;
reg   [31:0] E_s_reg_386;
reg   [31:0] D_2_reg_409;
reg   [31:0] B_2_reg_432;
reg   [31:0] B_read_assign_1_reg_421;
reg   [5:0] t_3_reg_444;
reg   [31:0] E_5_reg_466;
reg   [31:0] E_2_reg_455;
reg   [31:0] D_3_reg_478;
reg   [31:0] B_3_reg_501;
reg   [31:0] B_read_assign_2_reg_490;
reg   [5:0] t_4_reg_513;
reg   [31:0] E_6_reg_534;
reg   [31:0] E_3_reg_524;
reg   [31:0] D_4_reg_546;
reg   [31:0] B_4_reg_568;
reg   [31:0] B_read_assign_3_reg_558;
reg   [6:0] t_5_reg_580;
wire   [63:0] tmp_2_fu_615_p1;
wire   [63:0] tmp_7_fu_626_p1;
wire   [63:0] tmp_3_fu_636_p1;
wire   [63:0] tmp_8_fu_646_p1;
wire   [63:0] tmp_5_fu_651_p1;
wire   [63:0] tmp_11_fu_679_p1;
wire   [63:0] tmp_13_fu_690_p1;
wire   [63:0] tmp_15_fu_701_p1;
wire   [63:0] tmp_17_fu_712_p1;
wire   [63:0] tmp_19_fu_754_p1;
wire   [63:0] tmp_25_fu_777_p1;
wire   [63:0] tmp_29_fu_880_p1;
wire   [63:0] tmp_34_fu_977_p1;
wire   [63:0] tmp_41_fu_1098_p1;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_399;
wire   [31:0] tmp_36_fu_1149_p2;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_421;
wire   [31:0] tmp_35_fu_1143_p2;
wire   [3:0] tmp_fu_603_p1;
wire   [5:0] tmp_6_fu_620_p2;
wire   [5:0] tmp_s_fu_631_p2;
wire   [5:0] tmp_4_fu_641_p2;
wire   [6:0] tmp_10_fu_673_p2;
wire   [6:0] tmp_12_fu_684_p2;
wire   [6:0] tmp_14_fu_695_p2;
wire   [6:0] tmp_16_fu_706_p2;
wire   [31:0] tmp4_fu_722_p2;
wire   [31:0] tmp3_fu_717_p2;
wire   [31:0] word_assign_fu_727_p2;
wire   [30:0] tmp_18_fu_733_p1;
wire   [0:0] tmp_20_fu_737_p3;
wire   [26:0] tmp_26_fu_782_p1;
wire   [4:0] tmp_71_i1_fu_786_p4;
wire   [31:0] tmp_22_fu_810_p2;
wire   [31:0] tmp_23_fu_816_p2;
wire   [31:0] tmp_21_fu_804_p2;
wire   [31:0] tmp_72_i1_fu_796_p3;
wire   [31:0] tmp_24_fu_822_p2;
wire   [31:0] tmp7_fu_834_p2;
wire   [31:0] tmp6_fu_840_p2;
wire   [31:0] tmp5_fu_828_p2;
wire   [1:0] tmp_27_fu_852_p1;
wire   [29:0] tmp_71_i_i_fu_856_p4;
wire   [26:0] tmp_42_fu_891_p1;
wire   [4:0] tmp_71_i2_fu_895_p4;
wire   [31:0] tmp8_fu_913_p2;
wire   [31:0] tmp_72_i2_fu_905_p3;
wire   [31:0] tmp11_fu_931_p2;
wire   [31:0] tmp_28_fu_919_p2;
wire   [31:0] tmp10_fu_937_p2;
wire   [31:0] tmp9_fu_925_p2;
wire   [1:0] tmp_43_fu_949_p1;
wire   [29:0] tmp_71_i_i1_fu_953_p4;
wire   [26:0] tmp_44_fu_988_p1;
wire   [4:0] tmp_71_i3_fu_992_p4;
wire   [31:0] tmp_30_fu_1010_p2;
wire   [31:0] tmp_31_fu_1016_p2;
wire   [31:0] tmp_32_fu_1022_p2;
wire   [31:0] tmp_72_i3_fu_1002_p3;
wire   [31:0] tmp_33_fu_1028_p2;
wire   [31:0] tmp14_fu_1040_p2;
wire   [31:0] tmp13_fu_1046_p2;
wire   [31:0] tmp12_fu_1034_p2;
wire   [1:0] tmp_45_fu_1058_p1;
wire   [29:0] tmp_71_i_i2_fu_1062_p4;
wire   [31:0] tmp15_fu_1086_p2;
wire   [31:0] tmp18_fu_1103_p2;
wire   [31:0] tmp_40_fu_1092_p2;
wire   [1:0] tmp_47_fu_1115_p1;
wire   [29:0] tmp_71_i_i3_fu_1119_p4;
wire   [26:0] tmp_46_fu_1170_p1;
wire   [4:0] tmp_71_i4_fu_1174_p4;
wire   [31:0] tmp_72_i4_fu_1184_p3;
wire   [31:0] tmp16_fu_1192_p2;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'b1;
end

SHA1ProcessMessageBlock_W #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
W_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_address0),
    .ce0(W_ce0),
    .we0(W_we0),
    .d0(W_d0),
    .q0(W_q0),
    .address1(W_address1),
    .ce1(W_ce1),
    .we1(W_we1),
    .d1(W_d1),
    .q1(W_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        B_1_reg_364 <= temp_fu_846_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        B_1_reg_364 <= A_reg_1291;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond3_fu_765_p2))) begin
        B_2_reg_432 <= B_1_reg_364;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        B_2_reg_432 <= temp_1_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond2_fu_874_p2))) begin
        B_3_reg_501 <= B_2_reg_432;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        B_3_reg_501 <= temp_2_fu_1052_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond1_fu_971_p2))) begin
        B_4_reg_568 <= B_3_reg_501;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        B_4_reg_568 <= temp_3_fu_1198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond3_fu_765_p2))) begin
        B_read_assign_1_reg_421 <= B_read_assign_reg_354;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        B_read_assign_1_reg_421 <= B_2_reg_432;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond2_fu_874_p2))) begin
        B_read_assign_2_reg_490 <= B_read_assign_1_reg_421;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        B_read_assign_2_reg_490 <= B_3_reg_501;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond1_fu_971_p2))) begin
        B_read_assign_3_reg_558 <= B_read_assign_2_reg_490;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        B_read_assign_3_reg_558 <= B_4_reg_568;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        B_read_assign_reg_354 <= B_1_reg_364;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        B_read_assign_reg_354 <= B_reg_1307;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        D_1_reg_343 <= C_1_fu_866_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        D_1_reg_343 <= C_reg_1313;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond3_fu_765_p2))) begin
        D_2_reg_409 <= D_1_reg_343;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        D_2_reg_409 <= C_2_fu_963_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond2_fu_874_p2))) begin
        D_3_reg_478 <= D_2_reg_409;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        D_3_reg_478 <= C_3_fu_1072_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond1_fu_971_p2))) begin
        D_4_reg_546 <= D_3_reg_478;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        D_4_reg_546 <= C_4_reg_1425;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        E1_reg_322 <= E_1_reg_332;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        E1_reg_322 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        E_1_reg_332 <= D_1_reg_343;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        E_1_reg_332 <= context_Intermediate_Hash_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond2_fu_874_p2))) begin
        E_2_reg_455 <= E_s_reg_386;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        E_2_reg_455 <= E_5_reg_466;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond1_fu_971_p2))) begin
        E_3_reg_524 <= E_2_reg_455;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        E_3_reg_524 <= E_6_reg_534;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond3_fu_765_p2))) begin
        E_4_reg_397 <= E_1_reg_332;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        E_4_reg_397 <= D_2_reg_409;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond2_fu_874_p2))) begin
        E_5_reg_466 <= E_4_reg_397;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        E_5_reg_466 <= D_3_reg_478;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond1_fu_971_p2))) begin
        E_6_reg_534 <= E_5_reg_466;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        E_6_reg_534 <= D_4_reg_546;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond3_fu_765_p2))) begin
        E_s_reg_386 <= E1_reg_322;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        E_s_reg_386 <= E_4_reg_397;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_fu_591_p2 == 1'b0))) begin
        t_1_reg_310 <= ap_const_lv7_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        t_1_reg_310 <= t_7_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        t_2_reg_375 <= t_8_reg_1346;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        t_2_reg_375 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond3_fu_765_p2))) begin
        t_3_reg_444 <= ap_const_lv6_14;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        t_3_reg_444 <= t_9_reg_1374;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond2_fu_874_p2))) begin
        t_4_reg_513 <= ap_const_lv6_28;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        t_4_reg_513 <= t_10_reg_1397;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond1_fu_971_p2))) begin
        t_5_reg_580 <= ap_const_lv7_3C;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        t_5_reg_580 <= t_11_reg_1430;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        t_reg_298 <= t_6_reg_1206;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        t_reg_298 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        A_reg_1291 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        B_reg_1307 <= context_Intermediate_Hash_q0;
        C_reg_1313 <= context_Intermediate_Hash_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) & (1'b0 == exitcond_fu_1080_p2))) begin
        C_4_reg_1425 <= C_4_fu_1129_p3;
        t_11_reg_1430 <= t_11_fu_1137_p2;
        tmp17_reg_1420 <= tmp17_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        D_reg_1331 <= context_Intermediate_Hash_q1;
        E_reg_1337 <= context_Intermediate_Hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_load_1_reg_1271 <= W_q1;
        W_load_reg_1266 <= W_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_load_1_reg_1232 <= context_Message_Block_q1;
        context_Message_Block_load_reg_1227 <= context_Message_Block_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond1_fu_971_p2))) begin
        t_10_reg_1397 <= t_10_fu_982_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        t_6_reg_1206 <= t_6_fu_597_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        t_8_reg_1346 <= t_8_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == exitcond2_fu_874_p2))) begin
        t_9_reg_1374 <= t_9_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_fu_591_p2 == 1'b0))) begin
        tmp_1_reg_1211[5 : 2] <= tmp_1_fu_607_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) & ~(1'b0 == exitcond_fu_1080_p2))) begin
        tmp_37_reg_1435 <= tmp_37_fu_1155_p2;
        tmp_38_reg_1440 <= tmp_38_fu_1160_p2;
        tmp_39_reg_1445 <= tmp_39_fu_1165_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_address0 = tmp_5_fu_651_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        W_address0 = tmp_34_fu_977_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        W_address0 = tmp_25_fu_777_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address0 = tmp_17_fu_712_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address0 = tmp_11_fu_679_p1;
    end else begin
        W_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        W_address1 = tmp_19_fu_754_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        W_address1 = tmp_41_fu_1098_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        W_address1 = tmp_29_fu_880_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        W_address1 = tmp_15_fu_701_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        W_address1 = tmp_13_fu_690_p1;
    end else begin
        W_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        W_ce0 = 1'b1;
    end else begin
        W_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        W_ce1 = 1'b1;
    end else begin
        W_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        W_we0 = 1'b1;
    end else begin
        W_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        W_we1 = 1'b1;
    end else begin
        W_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_171) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_181) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_195) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_206) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_220) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_231) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_245) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_256) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_282) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_421) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_35) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_399) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_73) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_91) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_308) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_105) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_123) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_138) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_146) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_158) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        context_Intermediate_Hash_address0 = context_Intermediate_Hash_addr_1_reg_1297;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        context_Intermediate_Hash_address0 = ap_const_lv64_0;
    end else begin
        context_Intermediate_Hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        context_Intermediate_Hash_address1 = context_Intermediate_Hash_addr_2_reg_1302;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        context_Intermediate_Hash_address1 = ap_const_lv64_2;
    end else begin
        context_Intermediate_Hash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        context_Intermediate_Hash_ce0 = 1'b1;
    end else begin
        context_Intermediate_Hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        context_Intermediate_Hash_ce1 = 1'b1;
    end else begin
        context_Intermediate_Hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        context_Intermediate_Hash_d0 = tmp_38_reg_1440;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        context_Intermediate_Hash_d0 = tmp_36_fu_1149_p2;
    end else begin
        context_Intermediate_Hash_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        context_Intermediate_Hash_d1 = tmp_39_reg_1445;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        context_Intermediate_Hash_d1 = tmp_37_reg_1435;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        context_Intermediate_Hash_d1 = tmp_35_fu_1143_p2;
    end else begin
        context_Intermediate_Hash_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st17_fsm_16) & ~(1'b0 == exitcond_fu_1080_p2)) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        context_Intermediate_Hash_we0 = 1'b1;
    end else begin
        context_Intermediate_Hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st17_fsm_16) & ~(1'b0 == exitcond_fu_1080_p2)) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        context_Intermediate_Hash_we1 = 1'b1;
    end else begin
        context_Intermediate_Hash_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        context_Message_Block_Index_ap_vld = 1'b1;
    end else begin
        context_Message_Block_Index_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_address0 = tmp_3_fu_636_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        context_Message_Block_address0 = tmp_2_fu_615_p1;
    end else begin
        context_Message_Block_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        context_Message_Block_address1 = tmp_8_fu_646_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        context_Message_Block_address1 = tmp_7_fu_626_p1;
    end else begin
        context_Message_Block_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        context_Message_Block_ce0 = 1'b1;
    end else begin
        context_Message_Block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        context_Message_Block_ce1 = 1'b1;
    end else begin
        context_Message_Block_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond5_fu_591_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond4_fu_667_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            if (~(1'b0 == exitcond3_fu_765_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st13_fsm_12 : begin
            if (~(1'b0 == exitcond2_fu_874_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st15_fsm_14 : begin
            if (~(1'b0 == exitcond1_fu_971_p2)) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st17_fsm_16 : begin
            if (~(1'b0 == exitcond_fu_1080_p2)) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_1_fu_866_p3 = {{tmp_27_fu_852_p1}, {tmp_71_i_i_fu_856_p4}};

assign C_2_fu_963_p3 = {{tmp_43_fu_949_p1}, {tmp_71_i_i1_fu_953_p4}};

assign C_3_fu_1072_p3 = {{tmp_45_fu_1058_p1}, {tmp_71_i_i2_fu_1062_p4}};

assign C_4_fu_1129_p3 = {{tmp_47_fu_1115_p1}, {tmp_71_i_i3_fu_1119_p4}};

assign W_d0 = {{{{context_Message_Block_load_reg_1227}, {context_Message_Block_load_1_reg_1232}}, {context_Message_Block_q0}}, {context_Message_Block_q1}};

assign W_d1 = {{tmp_18_fu_733_p1}, {tmp_20_fu_737_p3}};

always @ (*) begin
    ap_sig_105 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_123 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_138 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_146 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_158 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_171 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_181 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_195 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_206 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_220 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_231 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_245 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_256 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_282 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_308 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_35 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_399 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_421 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_73 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_91 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign context_Intermediate_Hash_addr_1_reg_1297 = ap_const_lv64_1;

assign context_Intermediate_Hash_addr_2_reg_1302 = ap_const_lv64_2;

assign context_Message_Block_Index = ap_const_lv16_0;

assign exitcond1_fu_971_p2 = ((t_4_reg_513 == ap_const_lv6_3C) ? 1'b1 : 1'b0);

assign exitcond2_fu_874_p2 = ((t_3_reg_444 == ap_const_lv6_28) ? 1'b1 : 1'b0);

assign exitcond3_fu_765_p2 = ((t_2_reg_375 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond4_fu_667_p2 = ((t_1_reg_310 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign exitcond5_fu_591_p2 = ((t_reg_298 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_1080_p2 = ((t_5_reg_580 == ap_const_lv7_50) ? 1'b1 : 1'b0);

assign t_10_fu_982_p2 = (ap_const_lv6_1 + t_4_reg_513);

assign t_11_fu_1137_p2 = (ap_const_lv7_1 + t_5_reg_580);

assign t_6_fu_597_p2 = (t_reg_298 + ap_const_lv5_1);

assign t_7_fu_759_p2 = (ap_const_lv7_1 + t_1_reg_310);

assign t_8_fu_771_p2 = (t_2_reg_375 + ap_const_lv5_1);

assign t_9_fu_885_p2 = (ap_const_lv6_1 + t_3_reg_444);

assign temp_1_fu_943_p2 = (tmp10_fu_937_p2 + tmp9_fu_925_p2);

assign temp_2_fu_1052_p2 = (tmp13_fu_1046_p2 + tmp12_fu_1034_p2);

assign temp_3_fu_1198_p2 = (tmp17_reg_1420 + tmp16_fu_1192_p2);

assign temp_fu_846_p2 = (tmp6_fu_840_p2 + tmp5_fu_828_p2);

assign tmp10_fu_937_p2 = (tmp11_fu_931_p2 + tmp_28_fu_919_p2);

assign tmp11_fu_931_p2 = (ap_const_lv32_6ED9EBA1 + E_s_reg_386);

assign tmp12_fu_1034_p2 = (W_q0 + tmp_72_i3_fu_1002_p3);

assign tmp13_fu_1046_p2 = ($signed(ap_const_lv32_8F1BBCDC) + $signed(tmp14_fu_1040_p2));

assign tmp14_fu_1040_p2 = (E_2_reg_455 + tmp_33_fu_1028_p2);

assign tmp15_fu_1086_p2 = (B_read_assign_3_reg_558 ^ E_6_reg_534);

assign tmp16_fu_1192_p2 = (W_q1 + tmp_72_i4_fu_1184_p3);

assign tmp17_fu_1109_p2 = (tmp18_fu_1103_p2 + tmp_40_fu_1092_p2);

assign tmp18_fu_1103_p2 = ($signed(ap_const_lv32_CA62C1D6) + $signed(E_3_reg_524));

assign tmp3_fu_717_p2 = (W_load_reg_1266 ^ W_q1);

assign tmp4_fu_722_p2 = (W_load_1_reg_1271 ^ W_q0);

assign tmp5_fu_828_p2 = (W_q0 + tmp_72_i1_fu_796_p3);

assign tmp6_fu_840_p2 = (tmp7_fu_834_p2 + E1_reg_322);

assign tmp7_fu_834_p2 = (ap_const_lv32_5A827999 + tmp_24_fu_822_p2);

assign tmp8_fu_913_p2 = (B_read_assign_1_reg_421 ^ E_4_reg_397);

assign tmp9_fu_925_p2 = (W_q1 + tmp_72_i2_fu_905_p3);

assign tmp_10_fu_673_p2 = ($signed(ap_const_lv7_7D) + $signed(t_1_reg_310));

assign tmp_11_fu_679_p1 = tmp_10_fu_673_p2;

assign tmp_12_fu_684_p2 = ($signed(ap_const_lv7_78) + $signed(t_1_reg_310));

assign tmp_13_fu_690_p1 = tmp_12_fu_684_p2;

assign tmp_14_fu_695_p2 = ($signed(ap_const_lv7_72) + $signed(t_1_reg_310));

assign tmp_15_fu_701_p1 = tmp_14_fu_695_p2;

assign tmp_16_fu_706_p2 = ($signed(ap_const_lv7_70) + $signed(t_1_reg_310));

assign tmp_17_fu_712_p1 = tmp_16_fu_706_p2;

assign tmp_18_fu_733_p1 = word_assign_fu_727_p2[30:0];

assign tmp_19_fu_754_p1 = t_1_reg_310;

assign tmp_1_fu_607_p3 = {{tmp_fu_603_p1}, {ap_const_lv2_0}};

assign tmp_20_fu_737_p3 = word_assign_fu_727_p2[ap_const_lv32_1F];

assign tmp_21_fu_804_p2 = (D_1_reg_343 & B_read_assign_reg_354);

assign tmp_22_fu_810_p2 = (B_read_assign_reg_354 ^ ap_const_lv32_FFFFFFFF);

assign tmp_23_fu_816_p2 = (E_1_reg_332 & tmp_22_fu_810_p2);

assign tmp_24_fu_822_p2 = (tmp_23_fu_816_p2 | tmp_21_fu_804_p2);

assign tmp_25_fu_777_p1 = t_2_reg_375;

assign tmp_26_fu_782_p1 = B_1_reg_364[26:0];

assign tmp_27_fu_852_p1 = B_read_assign_reg_354[1:0];

assign tmp_28_fu_919_p2 = (tmp8_fu_913_p2 ^ D_2_reg_409);

assign tmp_29_fu_880_p1 = t_3_reg_444;

assign tmp_2_fu_615_p1 = tmp_1_fu_607_p3;

assign tmp_30_fu_1010_p2 = (E_5_reg_466 | D_3_reg_478);

assign tmp_31_fu_1016_p2 = (tmp_30_fu_1010_p2 & B_read_assign_2_reg_490);

assign tmp_32_fu_1022_p2 = (E_5_reg_466 & D_3_reg_478);

assign tmp_33_fu_1028_p2 = (tmp_31_fu_1016_p2 | tmp_32_fu_1022_p2);

assign tmp_34_fu_977_p1 = t_4_reg_513;

assign tmp_35_fu_1143_p2 = (A_reg_1291 + B_4_reg_568);

assign tmp_36_fu_1149_p2 = (B_reg_1307 + B_read_assign_3_reg_558);

assign tmp_37_fu_1155_p2 = (C_reg_1313 + D_4_reg_546);

assign tmp_38_fu_1160_p2 = (D_reg_1331 + E_6_reg_534);

assign tmp_39_fu_1165_p2 = (E_reg_1337 + E_3_reg_524);

assign tmp_3_fu_636_p1 = tmp_s_fu_631_p2;

assign tmp_40_fu_1092_p2 = (tmp15_fu_1086_p2 ^ D_4_reg_546);

assign tmp_41_fu_1098_p1 = t_5_reg_580;

assign tmp_42_fu_891_p1 = B_2_reg_432[26:0];

assign tmp_43_fu_949_p1 = B_read_assign_1_reg_421[1:0];

assign tmp_44_fu_988_p1 = B_3_reg_501[26:0];

assign tmp_45_fu_1058_p1 = B_read_assign_2_reg_490[1:0];

assign tmp_46_fu_1170_p1 = B_4_reg_568[26:0];

assign tmp_47_fu_1115_p1 = B_read_assign_3_reg_558[1:0];

assign tmp_4_fu_641_p2 = (tmp_1_reg_1211 | ap_const_lv6_3);

assign tmp_5_fu_651_p1 = t_reg_298;

assign tmp_6_fu_620_p2 = (tmp_1_fu_607_p3 | ap_const_lv6_1);

assign tmp_71_i1_fu_786_p4 = {{B_1_reg_364[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_71_i2_fu_895_p4 = {{B_2_reg_432[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_71_i3_fu_992_p4 = {{B_3_reg_501[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_71_i4_fu_1174_p4 = {{B_4_reg_568[ap_const_lv32_1F : ap_const_lv32_1B]}};

assign tmp_71_i_i1_fu_953_p4 = {{B_read_assign_1_reg_421[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_71_i_i2_fu_1062_p4 = {{B_read_assign_2_reg_490[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_71_i_i3_fu_1119_p4 = {{B_read_assign_3_reg_558[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_71_i_i_fu_856_p4 = {{B_read_assign_reg_354[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_72_i1_fu_796_p3 = {{tmp_26_fu_782_p1}, {tmp_71_i1_fu_786_p4}};

assign tmp_72_i2_fu_905_p3 = {{tmp_42_fu_891_p1}, {tmp_71_i2_fu_895_p4}};

assign tmp_72_i3_fu_1002_p3 = {{tmp_44_fu_988_p1}, {tmp_71_i3_fu_992_p4}};

assign tmp_72_i4_fu_1184_p3 = {{tmp_46_fu_1170_p1}, {tmp_71_i4_fu_1174_p4}};

assign tmp_7_fu_626_p1 = tmp_6_fu_620_p2;

assign tmp_8_fu_646_p1 = tmp_4_fu_641_p2;

assign tmp_fu_603_p1 = t_reg_298[3:0];

assign tmp_s_fu_631_p2 = (tmp_1_reg_1211 | ap_const_lv6_2);

assign word_assign_fu_727_p2 = (tmp4_fu_722_p2 ^ tmp3_fu_717_p2);

always @ (posedge ap_clk) begin
    tmp_1_reg_1211[1:0] <= 2'b00;
end

endmodule //SHA1ProcessMessageBlock
