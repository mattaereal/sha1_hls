-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SHA1ProcessMessageBlock is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    context_Intermediate_Hash_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    context_Intermediate_Hash_ce0 : OUT STD_LOGIC;
    context_Intermediate_Hash_we0 : OUT STD_LOGIC;
    context_Intermediate_Hash_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    context_Intermediate_Hash_ce1 : OUT STD_LOGIC;
    context_Intermediate_Hash_we1 : OUT STD_LOGIC;
    context_Intermediate_Hash_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    context_Intermediate_Hash_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    context_Message_Block_Index : OUT STD_LOGIC_VECTOR (15 downto 0);
    context_Message_Block_Index_ap_vld : OUT STD_LOGIC;
    context_Message_Block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    context_Message_Block_ce0 : OUT STD_LOGIC;
    context_Message_Block_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    context_Message_Block_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    context_Message_Block_ce1 : OUT STD_LOGIC;
    context_Message_Block_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of SHA1ProcessMessageBlock is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "SHA1ProcessMessageBlock,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.280000,HLS_SYN_LAT=411,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1129,HLS_SYN_LUT=1971}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_72 : STD_LOGIC_VECTOR (6 downto 0) := "1110010";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_5A827999 : STD_LOGIC_VECTOR (31 downto 0) := "01011010100000100111100110011001";
    constant ap_const_lv32_6ED9EBA1 : STD_LOGIC_VECTOR (31 downto 0) := "01101110110110011110101110100001";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv32_8F1BBCDC : STD_LOGIC_VECTOR (31 downto 0) := "10001111000110111011110011011100";
    constant ap_const_lv32_CA62C1D6 : STD_LOGIC_VECTOR (31 downto 0) := "11001010011000101100000111010110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_35 : BOOLEAN;
    signal t_6_fu_597_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_6_reg_1206 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_73 : BOOLEAN;
    signal tmp_1_fu_607_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1211 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond5_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal context_Message_Block_load_reg_1227 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_91 : BOOLEAN;
    signal context_Message_Block_load_1_reg_1232 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_105 : BOOLEAN;
    signal exitcond4_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal W_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_load_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_123 : BOOLEAN;
    signal W_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_load_1_reg_1271 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_7_fu_759_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_138 : BOOLEAN;
    signal A_reg_1291 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_146 : BOOLEAN;
    signal context_Intermediate_Hash_addr_1_reg_1297 : STD_LOGIC_VECTOR (2 downto 0);
    signal context_Intermediate_Hash_addr_2_reg_1302 : STD_LOGIC_VECTOR (2 downto 0);
    signal B_reg_1307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_158 : BOOLEAN;
    signal C_reg_1313 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_reg_1331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_171 : BOOLEAN;
    signal E_reg_1337 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_8_fu_771_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_8_reg_1346 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_181 : BOOLEAN;
    signal exitcond3_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_fu_846_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_195 : BOOLEAN;
    signal C_1_fu_866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_206 : BOOLEAN;
    signal exitcond2_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_9_fu_885_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_9_reg_1374 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_1_fu_943_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_220 : BOOLEAN;
    signal C_2_fu_963_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_231 : BOOLEAN;
    signal exitcond1_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_10_fu_982_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_10_reg_1397 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_2_fu_1052_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_245 : BOOLEAN;
    signal C_3_fu_1072_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_256 : BOOLEAN;
    signal exitcond_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp17_fu_1109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_4_fu_1129_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_4_reg_1425 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_11_fu_1137_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_11_reg_1430 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_37_fu_1155_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_reg_1435 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1160_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_1440 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_1165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_1198_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_282 : BOOLEAN;
    signal W_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ce0 : STD_LOGIC;
    signal W_we0 : STD_LOGIC;
    signal W_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ce1 : STD_LOGIC;
    signal W_we1 : STD_LOGIC;
    signal W_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_reg_298 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_308 : BOOLEAN;
    signal t_1_reg_310 : STD_LOGIC_VECTOR (6 downto 0);
    signal E1_reg_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_1_reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_1_reg_343 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_read_assign_reg_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_2_reg_375 : STD_LOGIC_VECTOR (4 downto 0);
    signal E_4_reg_397 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_s_reg_386 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_2_reg_409 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_reg_432 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_read_assign_1_reg_421 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_3_reg_444 : STD_LOGIC_VECTOR (5 downto 0);
    signal E_5_reg_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_2_reg_455 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_3_reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_reg_501 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_read_assign_2_reg_490 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_4_reg_513 : STD_LOGIC_VECTOR (5 downto 0);
    signal E_6_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_3_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal D_4_reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_reg_568 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_read_assign_3_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_5_reg_580 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_651_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_399 : BOOLEAN;
    signal tmp_36_fu_1149_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_421 : BOOLEAN;
    signal tmp_35_fu_1143_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_603_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_620_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_631_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_641_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_673_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_12_fu_684_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_695_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_16_fu_706_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp4_fu_722_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal word_assign_fu_727_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_733_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_20_fu_737_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_782_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_i1_fu_786_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_fu_810_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_816_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_i1_fu_796_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_834_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_840_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_828_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_852_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_i_i_fu_856_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_42_fu_891_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_i2_fu_895_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp8_fu_913_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_i2_fu_905_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_931_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_919_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_925_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_949_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_i_i1_fu_953_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_44_fu_988_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_i3_fu_992_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_30_fu_1010_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_1016_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_1022_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_i3_fu_1002_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_1028_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1040_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1034_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1058_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_i_i2_fu_1062_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp15_fu_1086_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_fu_1103_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1092_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1115_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_i_i3_fu_1119_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_46_fu_1170_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_i4_fu_1174_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_72_i4_fu_1184_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_fu_1192_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);

    component SHA1ProcessMessageBlock_W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    W_U : component SHA1ProcessMessageBlock_W
    generic map (
        DataWidth => 32,
        AddressRange => 80,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_address0,
        ce0 => W_ce0,
        we0 => W_we0,
        d0 => W_d0,
        q0 => W_q0,
        address1 => W_address1,
        ce1 => W_ce1,
        we1 => W_we1,
        d1 => W_d1,
        q1 => W_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    B_1_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                B_1_reg_364 <= temp_fu_846_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                B_1_reg_364 <= A_reg_1291;
            end if; 
        end if;
    end process;

    B_2_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond3_fu_765_p2)))) then 
                B_2_reg_432 <= B_1_reg_364;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                B_2_reg_432 <= temp_1_fu_943_p2;
            end if; 
        end if;
    end process;

    B_3_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond2_fu_874_p2)))) then 
                B_3_reg_501 <= B_2_reg_432;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                B_3_reg_501 <= temp_2_fu_1052_p2;
            end if; 
        end if;
    end process;

    B_4_reg_568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond1_fu_971_p2)))) then 
                B_4_reg_568 <= B_3_reg_501;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                B_4_reg_568 <= temp_3_fu_1198_p2;
            end if; 
        end if;
    end process;

    B_read_assign_1_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond3_fu_765_p2)))) then 
                B_read_assign_1_reg_421 <= B_read_assign_reg_354;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                B_read_assign_1_reg_421 <= B_2_reg_432;
            end if; 
        end if;
    end process;

    B_read_assign_2_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond2_fu_874_p2)))) then 
                B_read_assign_2_reg_490 <= B_read_assign_1_reg_421;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                B_read_assign_2_reg_490 <= B_3_reg_501;
            end if; 
        end if;
    end process;

    B_read_assign_3_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond1_fu_971_p2)))) then 
                B_read_assign_3_reg_558 <= B_read_assign_2_reg_490;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                B_read_assign_3_reg_558 <= B_4_reg_568;
            end if; 
        end if;
    end process;

    B_read_assign_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                B_read_assign_reg_354 <= B_1_reg_364;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                B_read_assign_reg_354 <= B_reg_1307;
            end if; 
        end if;
    end process;

    D_1_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                D_1_reg_343 <= C_1_fu_866_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                D_1_reg_343 <= C_reg_1313;
            end if; 
        end if;
    end process;

    D_2_reg_409_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond3_fu_765_p2)))) then 
                D_2_reg_409 <= D_1_reg_343;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                D_2_reg_409 <= C_2_fu_963_p3;
            end if; 
        end if;
    end process;

    D_3_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond2_fu_874_p2)))) then 
                D_3_reg_478 <= D_2_reg_409;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                D_3_reg_478 <= C_3_fu_1072_p3;
            end if; 
        end if;
    end process;

    D_4_reg_546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond1_fu_971_p2)))) then 
                D_4_reg_546 <= D_3_reg_478;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                D_4_reg_546 <= C_4_reg_1425;
            end if; 
        end if;
    end process;

    E1_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                E1_reg_322 <= E_1_reg_332;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                E1_reg_322 <= context_Intermediate_Hash_q0;
            end if; 
        end if;
    end process;

    E_1_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                E_1_reg_332 <= D_1_reg_343;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                E_1_reg_332 <= context_Intermediate_Hash_q1;
            end if; 
        end if;
    end process;

    E_2_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond2_fu_874_p2)))) then 
                E_2_reg_455 <= E_s_reg_386;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                E_2_reg_455 <= E_5_reg_466;
            end if; 
        end if;
    end process;

    E_3_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond1_fu_971_p2)))) then 
                E_3_reg_524 <= E_2_reg_455;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                E_3_reg_524 <= E_6_reg_534;
            end if; 
        end if;
    end process;

    E_4_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond3_fu_765_p2)))) then 
                E_4_reg_397 <= E_1_reg_332;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                E_4_reg_397 <= D_2_reg_409;
            end if; 
        end if;
    end process;

    E_5_reg_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond2_fu_874_p2)))) then 
                E_5_reg_466 <= E_4_reg_397;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                E_5_reg_466 <= D_3_reg_478;
            end if; 
        end if;
    end process;

    E_6_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond1_fu_971_p2)))) then 
                E_6_reg_534 <= E_5_reg_466;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                E_6_reg_534 <= D_4_reg_546;
            end if; 
        end if;
    end process;

    E_s_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond3_fu_765_p2)))) then 
                E_s_reg_386 <= E1_reg_322;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                E_s_reg_386 <= E_4_reg_397;
            end if; 
        end if;
    end process;

    t_1_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_fu_591_p2 = ap_const_lv1_0)))) then 
                t_1_reg_310 <= ap_const_lv7_10;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                t_1_reg_310 <= t_7_fu_759_p2;
            end if; 
        end if;
    end process;

    t_2_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                t_2_reg_375 <= t_8_reg_1346;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                t_2_reg_375 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    t_3_reg_444_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond3_fu_765_p2)))) then 
                t_3_reg_444 <= ap_const_lv6_14;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                t_3_reg_444 <= t_9_reg_1374;
            end if; 
        end if;
    end process;

    t_4_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond2_fu_874_p2)))) then 
                t_4_reg_513 <= ap_const_lv6_28;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                t_4_reg_513 <= t_10_reg_1397;
            end if; 
        end if;
    end process;

    t_5_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond1_fu_971_p2)))) then 
                t_5_reg_580 <= ap_const_lv7_3C;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                t_5_reg_580 <= t_11_reg_1430;
            end if; 
        end if;
    end process;

    t_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                t_reg_298 <= t_6_reg_1206;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                t_reg_298 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                A_reg_1291 <= context_Intermediate_Hash_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                B_reg_1307 <= context_Intermediate_Hash_q0;
                C_reg_1313 <= context_Intermediate_Hash_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and (ap_const_lv1_0 = exitcond_fu_1080_p2))) then
                C_4_reg_1425 <= C_4_fu_1129_p3;
                t_11_reg_1430 <= t_11_fu_1137_p2;
                tmp17_reg_1420 <= tmp17_fu_1109_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                D_reg_1331 <= context_Intermediate_Hash_q1;
                E_reg_1337 <= context_Intermediate_Hash_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                W_load_1_reg_1271 <= W_q1;
                W_load_reg_1266 <= W_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                context_Message_Block_load_1_reg_1232 <= context_Message_Block_q1;
                context_Message_Block_load_reg_1227 <= context_Message_Block_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = exitcond1_fu_971_p2))) then
                t_10_reg_1397 <= t_10_fu_982_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                t_6_reg_1206 <= t_6_fu_597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                t_8_reg_1346 <= t_8_fu_771_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = exitcond2_fu_874_p2))) then
                t_9_reg_1374 <= t_9_fu_885_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_591_p2 = ap_const_lv1_0))) then
                    tmp_1_reg_1211(5 downto 2) <= tmp_1_fu_607_p3(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = exitcond_fu_1080_p2)))) then
                tmp_37_reg_1435 <= tmp_37_fu_1155_p2;
                tmp_38_reg_1440 <= tmp_38_fu_1160_p2;
                tmp_39_reg_1445 <= tmp_39_fu_1165_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1211(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond5_fu_591_p2, exitcond4_fu_667_p2, exitcond3_fu_765_p2, exitcond2_fu_874_p2, exitcond1_fu_971_p2, exitcond_fu_1080_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond5_fu_591_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_667_p2))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_765_p2))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st13_fsm_12 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_874_p2))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st15_fsm_14 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_971_p2))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st17_fsm_16 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1080_p2))) then
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                end if;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    C_1_fu_866_p3 <= (tmp_27_fu_852_p1 & tmp_71_i_i_fu_856_p4);
    C_2_fu_963_p3 <= (tmp_43_fu_949_p1 & tmp_71_i_i1_fu_953_p4);
    C_3_fu_1072_p3 <= (tmp_45_fu_1058_p1 & tmp_71_i_i2_fu_1062_p4);
    C_4_fu_1129_p3 <= (tmp_47_fu_1115_p1 & tmp_71_i_i3_fu_1119_p4);

    W_address0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st4_fsm_3, tmp_5_fu_651_p1, tmp_11_fu_679_p1, tmp_17_fu_712_p1, tmp_25_fu_777_p1, tmp_34_fu_977_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            W_address0 <= tmp_5_fu_651_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            W_address0 <= tmp_34_fu_977_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            W_address0 <= tmp_25_fu_777_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            W_address0 <= tmp_17_fu_712_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            W_address0 <= tmp_11_fu_679_p1(7 - 1 downto 0);
        else 
            W_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_address1_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16, tmp_13_fu_690_p1, tmp_15_fu_701_p1, tmp_19_fu_754_p1, tmp_29_fu_880_p1, tmp_41_fu_1098_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            W_address1 <= tmp_19_fu_754_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            W_address1 <= tmp_41_fu_1098_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            W_address1 <= tmp_29_fu_880_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            W_address1 <= tmp_15_fu_701_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            W_address1 <= tmp_13_fu_690_p1(7 - 1 downto 0);
        else 
            W_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            W_ce0 <= ap_const_logic_1;
        else 
            W_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_ce1_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            W_ce1 <= ap_const_logic_1;
        else 
            W_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    W_d0 <= (((context_Message_Block_load_reg_1227 & context_Message_Block_load_1_reg_1232) & context_Message_Block_q0) & context_Message_Block_q1);
    W_d1 <= (tmp_18_fu_733_p1 & tmp_20_fu_737_p3);

    W_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            W_we0 <= ap_const_logic_1;
        else 
            W_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_we1_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            W_we1 <= ap_const_logic_1;
        else 
            W_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_105_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_105 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_123_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_123 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_138_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_138 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_146_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_146 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_158_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_158 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_171_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_171 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_181_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_181 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_195_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_195 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_206_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_206 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_220_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_220 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_231_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_231 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_245_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_245 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_256_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_256 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_282_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_282 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_308_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_308 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_35_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_35 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_399_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_399 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_421_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_421 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_73_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_73 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_91_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_91 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_171)
    begin
        if (ap_sig_171) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_181)
    begin
        if (ap_sig_181) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_195)
    begin
        if (ap_sig_195) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_206)
    begin
        if (ap_sig_206) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_220)
    begin
        if (ap_sig_220) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_231)
    begin
        if (ap_sig_231) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_245)
    begin
        if (ap_sig_245) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_256)
    begin
        if (ap_sig_256) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_282)
    begin
        if (ap_sig_282) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_421)
    begin
        if (ap_sig_421) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_35)
    begin
        if (ap_sig_35) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_399)
    begin
        if (ap_sig_399) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_73)
    begin
        if (ap_sig_73) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_91)
    begin
        if (ap_sig_91) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_308)
    begin
        if (ap_sig_308) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_105)
    begin
        if (ap_sig_105) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_123)
    begin
        if (ap_sig_123) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_138)
    begin
        if (ap_sig_138) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_146)
    begin
        if (ap_sig_146) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_158)
    begin
        if (ap_sig_158) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    context_Intermediate_Hash_addr_1_reg_1297 <= ap_const_lv64_1(3 - 1 downto 0);
    context_Intermediate_Hash_addr_2_reg_1302 <= ap_const_lv64_2(3 - 1 downto 0);

    context_Intermediate_Hash_address0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st8_fsm_7, context_Intermediate_Hash_addr_1_reg_1297, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            context_Intermediate_Hash_address0 <= context_Intermediate_Hash_addr_1_reg_1297;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            context_Intermediate_Hash_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            context_Intermediate_Hash_address0 <= "XXX";
        end if; 
    end process;


    context_Intermediate_Hash_address1_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, context_Intermediate_Hash_addr_2_reg_1302, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            context_Intermediate_Hash_address1 <= context_Intermediate_Hash_addr_2_reg_1302;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            context_Intermediate_Hash_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        else 
            context_Intermediate_Hash_address1 <= "XXX";
        end if; 
    end process;


    context_Intermediate_Hash_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18))) then 
            context_Intermediate_Hash_ce0 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_ce1_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18))) then 
            context_Intermediate_Hash_ce1 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_d0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, tmp_38_reg_1440, tmp_36_fu_1149_p2, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            context_Intermediate_Hash_d0 <= tmp_38_reg_1440;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            context_Intermediate_Hash_d0 <= tmp_36_fu_1149_p2;
        else 
            context_Intermediate_Hash_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    context_Intermediate_Hash_d1_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, tmp_37_reg_1435, tmp_39_reg_1445, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st19_fsm_18, tmp_35_fu_1143_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            context_Intermediate_Hash_d1 <= tmp_39_reg_1445;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            context_Intermediate_Hash_d1 <= tmp_37_reg_1435;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            context_Intermediate_Hash_d1 <= tmp_35_fu_1143_p2;
        else 
            context_Intermediate_Hash_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    context_Intermediate_Hash_we0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, exitcond_fu_1080_p2, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = exitcond_fu_1080_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18))) then 
            context_Intermediate_Hash_we0 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_we0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Intermediate_Hash_we1_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, exitcond_fu_1080_p2, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = exitcond_fu_1080_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18))) then 
            context_Intermediate_Hash_we1 <= ap_const_logic_1;
        else 
            context_Intermediate_Hash_we1 <= ap_const_logic_0;
        end if; 
    end process;

    context_Message_Block_Index <= ap_const_lv16_0;

    context_Message_Block_Index_ap_vld_assign_proc : process(ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            context_Message_Block_Index_ap_vld <= ap_const_logic_1;
        else 
            context_Message_Block_Index_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    context_Message_Block_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, tmp_2_fu_615_p1, tmp_3_fu_636_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            context_Message_Block_address0 <= tmp_3_fu_636_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            context_Message_Block_address0 <= tmp_2_fu_615_p1(6 - 1 downto 0);
        else 
            context_Message_Block_address0 <= "XXXXXX";
        end if; 
    end process;


    context_Message_Block_address1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, tmp_7_fu_626_p1, tmp_8_fu_646_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            context_Message_Block_address1 <= tmp_8_fu_646_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            context_Message_Block_address1 <= tmp_7_fu_626_p1(6 - 1 downto 0);
        else 
            context_Message_Block_address1 <= "XXXXXX";
        end if; 
    end process;


    context_Message_Block_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            context_Message_Block_ce0 <= ap_const_logic_1;
        else 
            context_Message_Block_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    context_Message_Block_ce1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            context_Message_Block_ce1 <= ap_const_logic_1;
        else 
            context_Message_Block_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_971_p2 <= "1" when (t_4_reg_513 = ap_const_lv6_3C) else "0";
    exitcond2_fu_874_p2 <= "1" when (t_3_reg_444 = ap_const_lv6_28) else "0";
    exitcond3_fu_765_p2 <= "1" when (t_2_reg_375 = ap_const_lv5_14) else "0";
    exitcond4_fu_667_p2 <= "1" when (t_1_reg_310 = ap_const_lv7_50) else "0";
    exitcond5_fu_591_p2 <= "1" when (t_reg_298 = ap_const_lv5_10) else "0";
    exitcond_fu_1080_p2 <= "1" when (t_5_reg_580 = ap_const_lv7_50) else "0";
    t_10_fu_982_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(t_4_reg_513));
    t_11_fu_1137_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(t_5_reg_580));
    t_6_fu_597_p2 <= std_logic_vector(unsigned(t_reg_298) + unsigned(ap_const_lv5_1));
    t_7_fu_759_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(t_1_reg_310));
    t_8_fu_771_p2 <= std_logic_vector(unsigned(t_2_reg_375) + unsigned(ap_const_lv5_1));
    t_9_fu_885_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(t_3_reg_444));
    temp_1_fu_943_p2 <= std_logic_vector(unsigned(tmp10_fu_937_p2) + unsigned(tmp9_fu_925_p2));
    temp_2_fu_1052_p2 <= std_logic_vector(unsigned(tmp13_fu_1046_p2) + unsigned(tmp12_fu_1034_p2));
    temp_3_fu_1198_p2 <= std_logic_vector(unsigned(tmp17_reg_1420) + unsigned(tmp16_fu_1192_p2));
    temp_fu_846_p2 <= std_logic_vector(unsigned(tmp6_fu_840_p2) + unsigned(tmp5_fu_828_p2));
    tmp10_fu_937_p2 <= std_logic_vector(unsigned(tmp11_fu_931_p2) + unsigned(tmp_28_fu_919_p2));
    tmp11_fu_931_p2 <= std_logic_vector(unsigned(ap_const_lv32_6ED9EBA1) + unsigned(E_s_reg_386));
    tmp12_fu_1034_p2 <= std_logic_vector(unsigned(W_q0) + unsigned(tmp_72_i3_fu_1002_p3));
    tmp13_fu_1046_p2 <= std_logic_vector(signed(ap_const_lv32_8F1BBCDC) + signed(tmp14_fu_1040_p2));
    tmp14_fu_1040_p2 <= std_logic_vector(unsigned(E_2_reg_455) + unsigned(tmp_33_fu_1028_p2));
    tmp15_fu_1086_p2 <= (B_read_assign_3_reg_558 xor E_6_reg_534);
    tmp16_fu_1192_p2 <= std_logic_vector(unsigned(W_q1) + unsigned(tmp_72_i4_fu_1184_p3));
    tmp17_fu_1109_p2 <= std_logic_vector(unsigned(tmp18_fu_1103_p2) + unsigned(tmp_40_fu_1092_p2));
    tmp18_fu_1103_p2 <= std_logic_vector(signed(ap_const_lv32_CA62C1D6) + signed(E_3_reg_524));
    tmp3_fu_717_p2 <= (W_load_reg_1266 xor W_q1);
    tmp4_fu_722_p2 <= (W_load_1_reg_1271 xor W_q0);
    tmp5_fu_828_p2 <= std_logic_vector(unsigned(W_q0) + unsigned(tmp_72_i1_fu_796_p3));
    tmp6_fu_840_p2 <= std_logic_vector(unsigned(tmp7_fu_834_p2) + unsigned(E1_reg_322));
    tmp7_fu_834_p2 <= std_logic_vector(unsigned(ap_const_lv32_5A827999) + unsigned(tmp_24_fu_822_p2));
    tmp8_fu_913_p2 <= (B_read_assign_1_reg_421 xor E_4_reg_397);
    tmp9_fu_925_p2 <= std_logic_vector(unsigned(W_q1) + unsigned(tmp_72_i2_fu_905_p3));
    tmp_10_fu_673_p2 <= std_logic_vector(signed(ap_const_lv7_7D) + signed(t_1_reg_310));
    tmp_11_fu_679_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_673_p2),64));
    tmp_12_fu_684_p2 <= std_logic_vector(signed(ap_const_lv7_78) + signed(t_1_reg_310));
    tmp_13_fu_690_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_684_p2),64));
    tmp_14_fu_695_p2 <= std_logic_vector(signed(ap_const_lv7_72) + signed(t_1_reg_310));
    tmp_15_fu_701_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_695_p2),64));
    tmp_16_fu_706_p2 <= std_logic_vector(signed(ap_const_lv7_70) + signed(t_1_reg_310));
    tmp_17_fu_712_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_706_p2),64));
    tmp_18_fu_733_p1 <= word_assign_fu_727_p2(31 - 1 downto 0);
    tmp_19_fu_754_p1 <= std_logic_vector(resize(unsigned(t_1_reg_310),64));
    tmp_1_fu_607_p3 <= (tmp_fu_603_p1 & ap_const_lv2_0);
    tmp_20_fu_737_p3 <= word_assign_fu_727_p2(31 downto 31);
    tmp_21_fu_804_p2 <= (D_1_reg_343 and B_read_assign_reg_354);
    tmp_22_fu_810_p2 <= (B_read_assign_reg_354 xor ap_const_lv32_FFFFFFFF);
    tmp_23_fu_816_p2 <= (E_1_reg_332 and tmp_22_fu_810_p2);
    tmp_24_fu_822_p2 <= (tmp_23_fu_816_p2 or tmp_21_fu_804_p2);
    tmp_25_fu_777_p1 <= std_logic_vector(resize(unsigned(t_2_reg_375),64));
    tmp_26_fu_782_p1 <= B_1_reg_364(27 - 1 downto 0);
    tmp_27_fu_852_p1 <= B_read_assign_reg_354(2 - 1 downto 0);
    tmp_28_fu_919_p2 <= (tmp8_fu_913_p2 xor D_2_reg_409);
    tmp_29_fu_880_p1 <= std_logic_vector(resize(unsigned(t_3_reg_444),64));
    tmp_2_fu_615_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_607_p3),64));
    tmp_30_fu_1010_p2 <= (E_5_reg_466 or D_3_reg_478);
    tmp_31_fu_1016_p2 <= (tmp_30_fu_1010_p2 and B_read_assign_2_reg_490);
    tmp_32_fu_1022_p2 <= (E_5_reg_466 and D_3_reg_478);
    tmp_33_fu_1028_p2 <= (tmp_31_fu_1016_p2 or tmp_32_fu_1022_p2);
    tmp_34_fu_977_p1 <= std_logic_vector(resize(unsigned(t_4_reg_513),64));
    tmp_35_fu_1143_p2 <= std_logic_vector(unsigned(A_reg_1291) + unsigned(B_4_reg_568));
    tmp_36_fu_1149_p2 <= std_logic_vector(unsigned(B_reg_1307) + unsigned(B_read_assign_3_reg_558));
    tmp_37_fu_1155_p2 <= std_logic_vector(unsigned(C_reg_1313) + unsigned(D_4_reg_546));
    tmp_38_fu_1160_p2 <= std_logic_vector(unsigned(D_reg_1331) + unsigned(E_6_reg_534));
    tmp_39_fu_1165_p2 <= std_logic_vector(unsigned(E_reg_1337) + unsigned(E_3_reg_524));
    tmp_3_fu_636_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_631_p2),64));
    tmp_40_fu_1092_p2 <= (tmp15_fu_1086_p2 xor D_4_reg_546);
    tmp_41_fu_1098_p1 <= std_logic_vector(resize(unsigned(t_5_reg_580),64));
    tmp_42_fu_891_p1 <= B_2_reg_432(27 - 1 downto 0);
    tmp_43_fu_949_p1 <= B_read_assign_1_reg_421(2 - 1 downto 0);
    tmp_44_fu_988_p1 <= B_3_reg_501(27 - 1 downto 0);
    tmp_45_fu_1058_p1 <= B_read_assign_2_reg_490(2 - 1 downto 0);
    tmp_46_fu_1170_p1 <= B_4_reg_568(27 - 1 downto 0);
    tmp_47_fu_1115_p1 <= B_read_assign_3_reg_558(2 - 1 downto 0);
    tmp_4_fu_641_p2 <= (tmp_1_reg_1211 or ap_const_lv6_3);
    tmp_5_fu_651_p1 <= std_logic_vector(resize(unsigned(t_reg_298),64));
    tmp_6_fu_620_p2 <= (tmp_1_fu_607_p3 or ap_const_lv6_1);
    tmp_71_i1_fu_786_p4 <= B_1_reg_364(31 downto 27);
    tmp_71_i2_fu_895_p4 <= B_2_reg_432(31 downto 27);
    tmp_71_i3_fu_992_p4 <= B_3_reg_501(31 downto 27);
    tmp_71_i4_fu_1174_p4 <= B_4_reg_568(31 downto 27);
    tmp_71_i_i1_fu_953_p4 <= B_read_assign_1_reg_421(31 downto 2);
    tmp_71_i_i2_fu_1062_p4 <= B_read_assign_2_reg_490(31 downto 2);
    tmp_71_i_i3_fu_1119_p4 <= B_read_assign_3_reg_558(31 downto 2);
    tmp_71_i_i_fu_856_p4 <= B_read_assign_reg_354(31 downto 2);
    tmp_72_i1_fu_796_p3 <= (tmp_26_fu_782_p1 & tmp_71_i1_fu_786_p4);
    tmp_72_i2_fu_905_p3 <= (tmp_42_fu_891_p1 & tmp_71_i2_fu_895_p4);
    tmp_72_i3_fu_1002_p3 <= (tmp_44_fu_988_p1 & tmp_71_i3_fu_992_p4);
    tmp_72_i4_fu_1184_p3 <= (tmp_46_fu_1170_p1 & tmp_71_i4_fu_1174_p4);
    tmp_7_fu_626_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_620_p2),64));
    tmp_8_fu_646_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_641_p2),64));
    tmp_fu_603_p1 <= t_reg_298(4 - 1 downto 0);
    tmp_s_fu_631_p2 <= (tmp_1_reg_1211 or ap_const_lv6_2);
    word_assign_fu_727_p2 <= (tmp4_fu_722_p2 xor tmp3_fu_717_p2);
end behav;
