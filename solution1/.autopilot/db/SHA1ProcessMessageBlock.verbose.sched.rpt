

================================================================
== Vivado HLS Report for 'SHA1ProcessMessageBlock'
================================================================
* Date:           Thu Sep  8 20:11:43 2016

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        sha1
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.28|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  411|  411|  412|  412|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- loop1   |   48|   48|         3|          -|          -|    16|    no    |
        |- loop2   |  192|  192|         3|          -|          -|    64|    no    |
        |- loop3   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop4   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop5   |   40|   40|         2|          -|          -|    20|    no    |
        |- loop6   |   40|   40|         2|          -|          -|    20|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 20
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond5)
	5  / (exitcond5)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
	6  / (!exitcond4)
	8  / (exitcond4)
6 --> 
	7  / true
7 --> 
	5  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / (!exitcond3)
	13  / (exitcond3)
12 --> 
	11  / true
13 --> 
	14  / (!exitcond2)
	15  / (exitcond2)
14 --> 
	13  / true
15 --> 
	16  / (!exitcond1)
	17  / (exitcond1)
16 --> 
	15  / true
17 --> 
	18  / (!exitcond)
	19  / (exitcond)
18 --> 
	17  / true
19 --> 
	20  / true
20 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_21 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([5 x i32]* %context_Intermediate_Hash), !map !19

ST_1: stg_22 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i16* %context_Message_Block_Index), !map !25

ST_1: stg_23 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %context_Message_Block), !map !31

ST_1: stg_24 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([24 x i8]* @SHA1ProcessMessageBlock_str) nounwind

ST_1: W [1/1] 0.00ns
:4  %W = alloca [80 x i32], align 16

ST_1: stg_26 [1/1] 1.57ns
:5  br label %1


 <State 2>: 3.48ns
ST_2: t [1/1] 0.00ns
:0  %t = phi i5 [ 0, %0 ], [ %t_6, %2 ]

ST_2: exitcond5 [1/1] 1.91ns
:1  %exitcond5 = icmp eq i5 %t, -16

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_2: t_6 [1/1] 1.72ns
:3  %t_6 = add i5 %t, 1

ST_2: stg_31 [1/1] 1.57ns
:4  br i1 %exitcond5, label %.preheader8, label %2

ST_2: tmp [1/1] 0.00ns
:1  %tmp = trunc i5 %t to i4

ST_2: tmp_1 [1/1] 0.00ns
:2  %tmp_1 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %tmp, i2 0)

ST_2: tmp_2 [1/1] 0.00ns
:3  %tmp_2 = zext i6 %tmp_1 to i64

ST_2: context_Message_Block_addr [1/1] 0.00ns
:4  %context_Message_Block_addr = getelementptr [64 x i8]* %context_Message_Block, i64 0, i64 %tmp_2

ST_2: context_Message_Block_load [2/2] 2.39ns
:5  %context_Message_Block_load = load i8* %context_Message_Block_addr, align 1

ST_2: tmp_6 [1/1] 0.00ns
:8  %tmp_6 = or i6 %tmp_1, 1

ST_2: tmp_7 [1/1] 0.00ns
:9  %tmp_7 = zext i6 %tmp_6 to i64

ST_2: context_Message_Block_addr_1 [1/1] 0.00ns
:10  %context_Message_Block_addr_1 = getelementptr [64 x i8]* %context_Message_Block, i64 0, i64 %tmp_7

ST_2: context_Message_Block_load_1 [2/2] 2.39ns
:11  %context_Message_Block_load_1 = load i8* %context_Message_Block_addr_1, align 1


 <State 3>: 2.39ns
ST_3: context_Message_Block_load [1/2] 2.39ns
:5  %context_Message_Block_load = load i8* %context_Message_Block_addr, align 1

ST_3: context_Message_Block_load_1 [1/2] 2.39ns
:11  %context_Message_Block_load_1 = load i8* %context_Message_Block_addr_1, align 1

ST_3: tmp_s [1/1] 0.00ns
:12  %tmp_s = or i6 %tmp_1, 2

ST_3: tmp_3 [1/1] 0.00ns
:13  %tmp_3 = zext i6 %tmp_s to i64

ST_3: context_Message_Block_addr_2 [1/1] 0.00ns
:14  %context_Message_Block_addr_2 = getelementptr [64 x i8]* %context_Message_Block, i64 0, i64 %tmp_3

ST_3: context_Message_Block_load_2 [2/2] 2.39ns
:15  %context_Message_Block_load_2 = load i8* %context_Message_Block_addr_2, align 1

ST_3: tmp_4 [1/1] 0.00ns
:16  %tmp_4 = or i6 %tmp_1, 3

ST_3: tmp_8 [1/1] 0.00ns
:17  %tmp_8 = zext i6 %tmp_4 to i64

ST_3: context_Message_Block_addr_3 [1/1] 0.00ns
:18  %context_Message_Block_addr_3 = getelementptr [64 x i8]* %context_Message_Block, i64 0, i64 %tmp_8

ST_3: context_Message_Block_load_3 [2/2] 2.39ns
:19  %context_Message_Block_load_3 = load i8* %context_Message_Block_addr_3, align 1


 <State 4>: 5.10ns
ST_4: stg_51 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str) nounwind

ST_4: tmp_5 [1/1] 0.00ns
:6  %tmp_5 = zext i5 %t to i64

ST_4: W_addr [1/1] 0.00ns
:7  %W_addr = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_5

ST_4: context_Message_Block_load_2 [1/2] 2.39ns
:15  %context_Message_Block_load_2 = load i8* %context_Message_Block_addr_2, align 1

ST_4: context_Message_Block_load_3 [1/2] 2.39ns
:19  %context_Message_Block_load_3 = load i8* %context_Message_Block_addr_3, align 1

ST_4: tmp_9 [1/1] 0.00ns
:20  %tmp_9 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %context_Message_Block_load, i8 %context_Message_Block_load_1, i8 %context_Message_Block_load_2, i8 %context_Message_Block_load_3)

ST_4: stg_57 [1/1] 2.71ns
:21  store i32 %tmp_9, i32* %W_addr, align 4

ST_4: stg_58 [1/1] 0.00ns
:22  br label %1


 <State 5>: 4.43ns
ST_5: t_1 [1/1] 0.00ns
.preheader8:0  %t_1 = phi i7 [ %t_7, %3 ], [ 16, %1 ]

ST_5: exitcond4 [1/1] 1.97ns
.preheader8:1  %exitcond4 = icmp eq i7 %t_1, -48

ST_5: empty_32 [1/1] 0.00ns
.preheader8:2  %empty_32 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_5: stg_62 [1/1] 0.00ns
.preheader8:3  br i1 %exitcond4, label %4, label %3

ST_5: tmp_10 [1/1] 1.72ns
:1  %tmp_10 = add i7 -3, %t_1

ST_5: tmp_11 [1/1] 0.00ns
:2  %tmp_11 = zext i7 %tmp_10 to i64

ST_5: W_addr_1 [1/1] 0.00ns
:3  %W_addr_1 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_11

ST_5: W_load [2/2] 2.71ns
:4  %W_load = load i32* %W_addr_1, align 4

ST_5: tmp_12 [1/1] 1.72ns
:5  %tmp_12 = add i7 -8, %t_1

ST_5: tmp_13 [1/1] 0.00ns
:6  %tmp_13 = zext i7 %tmp_12 to i64

ST_5: W_addr_2 [1/1] 0.00ns
:7  %W_addr_2 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_13

ST_5: W_load_1 [2/2] 2.71ns
:8  %W_load_1 = load i32* %W_addr_2, align 4

ST_5: context_Intermediate_Hash_addr [1/1] 0.00ns
:0  %context_Intermediate_Hash_addr = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 0

ST_5: A [2/2] 2.39ns
:1  %A = load i32* %context_Intermediate_Hash_addr, align 4


 <State 6>: 4.43ns
ST_6: W_load [1/2] 2.71ns
:4  %W_load = load i32* %W_addr_1, align 4

ST_6: W_load_1 [1/2] 2.71ns
:8  %W_load_1 = load i32* %W_addr_2, align 4

ST_6: tmp_14 [1/1] 1.72ns
:9  %tmp_14 = add i7 -14, %t_1

ST_6: tmp_15 [1/1] 0.00ns
:10  %tmp_15 = zext i7 %tmp_14 to i64

ST_6: W_addr_3 [1/1] 0.00ns
:11  %W_addr_3 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_15

ST_6: W_load_2 [2/2] 2.71ns
:12  %W_load_2 = load i32* %W_addr_3, align 4

ST_6: tmp_16 [1/1] 1.72ns
:13  %tmp_16 = add i7 -16, %t_1

ST_6: tmp_17 [1/1] 0.00ns
:14  %tmp_17 = zext i7 %tmp_16 to i64

ST_6: W_addr_4 [1/1] 0.00ns
:15  %W_addr_4 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_17

ST_6: W_load_3 [2/2] 2.71ns
:16  %W_load_3 = load i32* %W_addr_4, align 4


 <State 7>: 6.79ns
ST_7: stg_83 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str1) nounwind

ST_7: W_load_2 [1/2] 2.71ns
:12  %W_load_2 = load i32* %W_addr_3, align 4

ST_7: W_load_3 [1/2] 2.71ns
:16  %W_load_3 = load i32* %W_addr_4, align 4

ST_7: tmp3 [1/1] 0.00ns (grouped into LUT with out node word_assign)
:17  %tmp3 = xor i32 %W_load, %W_load_2

ST_7: tmp4 [1/1] 0.00ns (grouped into LUT with out node word_assign)
:18  %tmp4 = xor i32 %W_load_1, %W_load_3

ST_7: word_assign [1/1] 1.37ns (out node of the LUT)
:19  %word_assign = xor i32 %tmp4, %tmp3

ST_7: tmp_18 [1/1] 0.00ns
:20  %tmp_18 = trunc i32 %word_assign to i31

ST_7: tmp_20 [1/1] 0.00ns
:21  %tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %word_assign, i32 31)

ST_7: tmp_72_i [1/1] 0.00ns
:22  %tmp_72_i = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_18, i1 %tmp_20)

ST_7: tmp_19 [1/1] 0.00ns
:23  %tmp_19 = zext i7 %t_1 to i64

ST_7: W_addr_5 [1/1] 0.00ns
:24  %W_addr_5 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_19

ST_7: stg_94 [1/1] 2.71ns
:25  store i32 %tmp_72_i, i32* %W_addr_5, align 4

ST_7: t_7 [1/1] 1.72ns
:26  %t_7 = add i7 1, %t_1

ST_7: stg_96 [1/1] 0.00ns
:27  br label %.preheader8


 <State 8>: 2.39ns
ST_8: A [1/2] 2.39ns
:1  %A = load i32* %context_Intermediate_Hash_addr, align 4

ST_8: context_Intermediate_Hash_addr_1 [1/1] 0.00ns
:2  %context_Intermediate_Hash_addr_1 = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 1

ST_8: B [2/2] 2.39ns
:3  %B = load i32* %context_Intermediate_Hash_addr_1, align 4

ST_8: context_Intermediate_Hash_addr_2 [1/1] 0.00ns
:4  %context_Intermediate_Hash_addr_2 = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 2

ST_8: C [2/2] 2.39ns
:5  %C = load i32* %context_Intermediate_Hash_addr_2, align 4


 <State 9>: 2.39ns
ST_9: B [1/2] 2.39ns
:3  %B = load i32* %context_Intermediate_Hash_addr_1, align 4

ST_9: C [1/2] 2.39ns
:5  %C = load i32* %context_Intermediate_Hash_addr_2, align 4

ST_9: context_Intermediate_Hash_addr_3 [1/1] 0.00ns
:6  %context_Intermediate_Hash_addr_3 = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 3

ST_9: D [2/2] 2.39ns
:7  %D = load i32* %context_Intermediate_Hash_addr_3, align 4

ST_9: context_Intermediate_Hash_addr_4 [1/1] 0.00ns
:8  %context_Intermediate_Hash_addr_4 = getelementptr [5 x i32]* %context_Intermediate_Hash, i64 0, i64 4

ST_9: E [2/2] 2.39ns
:9  %E = load i32* %context_Intermediate_Hash_addr_4, align 4


 <State 10>: 3.96ns
ST_10: D [1/2] 2.39ns
:7  %D = load i32* %context_Intermediate_Hash_addr_3, align 4

ST_10: E [1/2] 2.39ns
:9  %E = load i32* %context_Intermediate_Hash_addr_4, align 4

ST_10: stg_110 [1/1] 1.57ns
:10  br label %5


 <State 11>: 3.48ns
ST_11: E1 [1/1] 0.00ns
:0  %E1 = phi i32 [ %E, %4 ], [ %E_1, %6 ]

ST_11: E_1 [1/1] 0.00ns
:1  %E_1 = phi i32 [ %D, %4 ], [ %D_1, %6 ]

ST_11: D_1 [1/1] 0.00ns
:2  %D_1 = phi i32 [ %C, %4 ], [ %C_1, %6 ]

ST_11: B_read_assign [1/1] 0.00ns
:3  %B_read_assign = phi i32 [ %B, %4 ], [ %B_1, %6 ]

ST_11: B_1 [1/1] 0.00ns
:4  %B_1 = phi i32 [ %A, %4 ], [ %temp, %6 ]

ST_11: t_2 [1/1] 0.00ns
:5  %t_2 = phi i5 [ 0, %4 ], [ %t_8, %6 ]

ST_11: exitcond3 [1/1] 1.91ns
:6  %exitcond3 = icmp eq i5 %t_2, -12

ST_11: empty_33 [1/1] 0.00ns
:7  %empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_11: t_8 [1/1] 1.72ns
:8  %t_8 = add i5 %t_2, 1

ST_11: stg_120 [1/1] 1.57ns
:9  br i1 %exitcond3, label %.preheader7, label %6

ST_11: tmp_25 [1/1] 0.00ns
:8  %tmp_25 = zext i5 %t_2 to i64

ST_11: W_addr_6 [1/1] 0.00ns
:9  %W_addr_6 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_25

ST_11: W_load_4 [2/2] 2.71ns
:10  %W_load_4 = load i32* %W_addr_6, align 4


 <State 12>: 7.28ns
ST_12: stg_124 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str2) nounwind

ST_12: tmp_26 [1/1] 0.00ns
:1  %tmp_26 = trunc i32 %B_1 to i27

ST_12: tmp_71_i1 [1/1] 0.00ns
:2  %tmp_71_i1 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_1, i32 27, i32 31)

ST_12: tmp_72_i1 [1/1] 0.00ns
:3  %tmp_72_i1 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_26, i5 %tmp_71_i1)

ST_12: tmp_21 [1/1] 0.00ns (grouped into LUT with out node tmp_24)
:4  %tmp_21 = and i32 %D_1, %B_read_assign

ST_12: tmp_22 [1/1] 0.00ns (grouped into LUT with out node tmp_24)
:5  %tmp_22 = xor i32 %B_read_assign, -1

ST_12: tmp_23 [1/1] 0.00ns (grouped into LUT with out node tmp_24)
:6  %tmp_23 = and i32 %E_1, %tmp_22

ST_12: tmp_24 [1/1] 1.37ns (out node of the LUT)
:7  %tmp_24 = or i32 %tmp_23, %tmp_21

ST_12: W_load_4 [1/2] 2.71ns
:10  %W_load_4 = load i32* %W_addr_6, align 4

ST_12: tmp5 [1/1] 1.97ns
:11  %tmp5 = add i32 %W_load_4, %tmp_72_i1

ST_12: tmp7 [1/1] 1.97ns
:12  %tmp7 = add i32 1518500249, %tmp_24

ST_12: tmp6 [1/1] 1.97ns
:13  %tmp6 = add i32 %tmp7, %E1

ST_12: temp [1/1] 1.97ns
:14  %temp = add i32 %tmp6, %tmp5

ST_12: tmp_27 [1/1] 0.00ns
:15  %tmp_27 = trunc i32 %B_read_assign to i2

ST_12: tmp_71_i_i [1/1] 0.00ns
:16  %tmp_71_i_i = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_read_assign, i32 2, i32 31)

ST_12: C_1 [1/1] 0.00ns
:17  %C_1 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_27, i30 %tmp_71_i_i)

ST_12: stg_140 [1/1] 0.00ns
:18  br label %5


 <State 13>: 3.51ns
ST_13: E_s [1/1] 0.00ns
.preheader7:0  %E_s = phi i32 [ %E_4, %7 ], [ %E1, %5 ]

ST_13: E_4 [1/1] 0.00ns
.preheader7:1  %E_4 = phi i32 [ %D_2, %7 ], [ %E_1, %5 ]

ST_13: D_2 [1/1] 0.00ns
.preheader7:2  %D_2 = phi i32 [ %C_2, %7 ], [ %D_1, %5 ]

ST_13: B_read_assign_1 [1/1] 0.00ns
.preheader7:3  %B_read_assign_1 = phi i32 [ %B_2, %7 ], [ %B_read_assign, %5 ]

ST_13: B_2 [1/1] 0.00ns
.preheader7:4  %B_2 = phi i32 [ %temp_1, %7 ], [ %B_1, %5 ]

ST_13: t_3 [1/1] 0.00ns
.preheader7:5  %t_3 = phi i6 [ %t_9, %7 ], [ 20, %5 ]

ST_13: exitcond2 [1/1] 1.94ns
.preheader7:6  %exitcond2 = icmp eq i6 %t_3, -24

ST_13: empty_34 [1/1] 0.00ns
.preheader7:7  %empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_13: stg_149 [1/1] 1.57ns
.preheader7:8  br i1 %exitcond2, label %.preheader6, label %7

ST_13: tmp_29 [1/1] 0.00ns
:6  %tmp_29 = zext i6 %t_3 to i64

ST_13: W_addr_7 [1/1] 0.00ns
:7  %W_addr_7 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_29

ST_13: W_load_5 [2/2] 2.71ns
:8  %W_load_5 = load i32* %W_addr_7, align 4

ST_13: t_9 [1/1] 1.72ns
:16  %t_9 = add i6 1, %t_3


 <State 14>: 6.65ns
ST_14: stg_154 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str3) nounwind

ST_14: tmp_42 [1/1] 0.00ns
:1  %tmp_42 = trunc i32 %B_2 to i27

ST_14: tmp_71_i2 [1/1] 0.00ns
:2  %tmp_71_i2 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_2, i32 27, i32 31)

ST_14: tmp_72_i2 [1/1] 0.00ns
:3  %tmp_72_i2 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_42, i5 %tmp_71_i2)

ST_14: tmp8 [1/1] 0.00ns (grouped into LUT with out node tmp_28)
:4  %tmp8 = xor i32 %B_read_assign_1, %E_4

ST_14: tmp_28 [1/1] 1.37ns (out node of the LUT)
:5  %tmp_28 = xor i32 %tmp8, %D_2

ST_14: W_load_5 [1/2] 2.71ns
:8  %W_load_5 = load i32* %W_addr_7, align 4

ST_14: tmp9 [1/1] 1.97ns
:9  %tmp9 = add i32 %W_load_5, %tmp_72_i2

ST_14: tmp11 [1/1] 1.97ns
:10  %tmp11 = add i32 1859775393, %E_s

ST_14: tmp10 [1/1] 1.97ns
:11  %tmp10 = add i32 %tmp11, %tmp_28

ST_14: temp_1 [1/1] 1.97ns
:12  %temp_1 = add i32 %tmp10, %tmp9

ST_14: tmp_43 [1/1] 0.00ns
:13  %tmp_43 = trunc i32 %B_read_assign_1 to i2

ST_14: tmp_71_i_i1 [1/1] 0.00ns
:14  %tmp_71_i_i1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_read_assign_1, i32 2, i32 31)

ST_14: C_2 [1/1] 0.00ns
:15  %C_2 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_43, i30 %tmp_71_i_i1)

ST_14: stg_168 [1/1] 0.00ns
:17  br label %.preheader7


 <State 15>: 3.51ns
ST_15: E_2 [1/1] 0.00ns
.preheader6:0  %E_2 = phi i32 [ %E_5, %8 ], [ %E_s, %.preheader7 ]

ST_15: E_5 [1/1] 0.00ns
.preheader6:1  %E_5 = phi i32 [ %D_3, %8 ], [ %E_4, %.preheader7 ]

ST_15: D_3 [1/1] 0.00ns
.preheader6:2  %D_3 = phi i32 [ %C_3, %8 ], [ %D_2, %.preheader7 ]

ST_15: B_read_assign_2 [1/1] 0.00ns
.preheader6:3  %B_read_assign_2 = phi i32 [ %B_3, %8 ], [ %B_read_assign_1, %.preheader7 ]

ST_15: B_3 [1/1] 0.00ns
.preheader6:4  %B_3 = phi i32 [ %temp_2, %8 ], [ %B_2, %.preheader7 ]

ST_15: t_4 [1/1] 0.00ns
.preheader6:5  %t_4 = phi i6 [ %t_10, %8 ], [ -24, %.preheader7 ]

ST_15: exitcond1 [1/1] 1.94ns
.preheader6:6  %exitcond1 = icmp eq i6 %t_4, -4

ST_15: empty_35 [1/1] 0.00ns
.preheader6:7  %empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_15: stg_177 [1/1] 1.57ns
.preheader6:8  br i1 %exitcond1, label %.preheader, label %8

ST_15: tmp_34 [1/1] 0.00ns
:8  %tmp_34 = zext i6 %t_4 to i64

ST_15: W_addr_8 [1/1] 0.00ns
:9  %W_addr_8 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_34

ST_15: W_load_6 [2/2] 2.71ns
:10  %W_load_6 = load i32* %W_addr_8, align 4

ST_15: t_10 [1/1] 1.72ns
:18  %t_10 = add i6 1, %t_4


 <State 16>: 7.28ns
ST_16: stg_182 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str4) nounwind

ST_16: tmp_44 [1/1] 0.00ns
:1  %tmp_44 = trunc i32 %B_3 to i27

ST_16: tmp_71_i3 [1/1] 0.00ns
:2  %tmp_71_i3 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_3, i32 27, i32 31)

ST_16: tmp_72_i3 [1/1] 0.00ns
:3  %tmp_72_i3 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_44, i5 %tmp_71_i3)

ST_16: tmp_30 [1/1] 0.00ns (grouped into LUT with out node tmp_33)
:4  %tmp_30 = or i32 %E_5, %D_3

ST_16: tmp_31 [1/1] 0.00ns (grouped into LUT with out node tmp_33)
:5  %tmp_31 = and i32 %tmp_30, %B_read_assign_2

ST_16: tmp_32 [1/1] 0.00ns (grouped into LUT with out node tmp_33)
:6  %tmp_32 = and i32 %E_5, %D_3

ST_16: tmp_33 [1/1] 1.37ns (out node of the LUT)
:7  %tmp_33 = or i32 %tmp_31, %tmp_32

ST_16: W_load_6 [1/2] 2.71ns
:10  %W_load_6 = load i32* %W_addr_8, align 4

ST_16: tmp12 [1/1] 1.97ns
:11  %tmp12 = add i32 %W_load_6, %tmp_72_i3

ST_16: tmp14 [1/1] 1.97ns
:12  %tmp14 = add i32 %E_2, %tmp_33

ST_16: tmp13 [1/1] 1.97ns
:13  %tmp13 = add i32 -1894007588, %tmp14

ST_16: temp_2 [1/1] 1.97ns
:14  %temp_2 = add i32 %tmp13, %tmp12

ST_16: tmp_45 [1/1] 0.00ns
:15  %tmp_45 = trunc i32 %B_read_assign_2 to i2

ST_16: tmp_71_i_i2 [1/1] 0.00ns
:16  %tmp_71_i_i2 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_read_assign_2, i32 2, i32 31)

ST_16: C_3 [1/1] 0.00ns
:17  %C_3 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_45, i30 %tmp_71_i_i2)

ST_16: stg_198 [1/1] 0.00ns
:19  br label %.preheader6


 <State 17>: 4.83ns
ST_17: E_3 [1/1] 0.00ns
.preheader:0  %E_3 = phi i32 [ %E_6, %9 ], [ %E_2, %.preheader6 ]

ST_17: E_6 [1/1] 0.00ns
.preheader:1  %E_6 = phi i32 [ %D_4, %9 ], [ %E_5, %.preheader6 ]

ST_17: D_4 [1/1] 0.00ns
.preheader:2  %D_4 = phi i32 [ %C_4, %9 ], [ %D_3, %.preheader6 ]

ST_17: B_read_assign_3 [1/1] 0.00ns
.preheader:3  %B_read_assign_3 = phi i32 [ %B_4, %9 ], [ %B_read_assign_2, %.preheader6 ]

ST_17: B_4 [1/1] 0.00ns
.preheader:4  %B_4 = phi i32 [ %temp_3, %9 ], [ %B_3, %.preheader6 ]

ST_17: t_5 [1/1] 0.00ns
.preheader:5  %t_5 = phi i7 [ %t_11, %9 ], [ 60, %.preheader6 ]

ST_17: exitcond [1/1] 1.97ns
.preheader:6  %exitcond = icmp eq i7 %t_5, -48

ST_17: empty_36 [1/1] 0.00ns
.preheader:7  %empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_17: stg_207 [1/1] 0.00ns
.preheader:8  br i1 %exitcond, label %10, label %9

ST_17: tmp15 [1/1] 0.00ns (grouped into LUT with out node tmp_40)
:4  %tmp15 = xor i32 %B_read_assign_3, %E_6

ST_17: tmp_40 [1/1] 1.37ns (out node of the LUT)
:5  %tmp_40 = xor i32 %tmp15, %D_4

ST_17: tmp_41 [1/1] 0.00ns
:6  %tmp_41 = zext i7 %t_5 to i64

ST_17: W_addr_9 [1/1] 0.00ns
:7  %W_addr_9 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %tmp_41

ST_17: W_load_7 [2/2] 2.71ns
:8  %W_load_7 = load i32* %W_addr_9, align 4

ST_17: tmp18 [1/1] 1.97ns
:10  %tmp18 = add i32 -899497514, %E_3

ST_17: tmp17 [1/1] 1.97ns
:11  %tmp17 = add i32 %tmp18, %tmp_40

ST_17: tmp_47 [1/1] 0.00ns
:13  %tmp_47 = trunc i32 %B_read_assign_3 to i2

ST_17: tmp_71_i_i3 [1/1] 0.00ns
:14  %tmp_71_i_i3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_read_assign_3, i32 2, i32 31)

ST_17: C_4 [1/1] 0.00ns
:15  %C_4 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_47, i30 %tmp_71_i_i3)

ST_17: t_11 [1/1] 1.72ns
:16  %t_11 = add i7 1, %t_5

ST_17: tmp_35 [1/1] 2.44ns
:0  %tmp_35 = add i32 %A, %B_4

ST_17: stg_220 [1/1] 2.39ns
:1  store i32 %tmp_35, i32* %context_Intermediate_Hash_addr, align 4

ST_17: tmp_36 [1/1] 2.44ns
:2  %tmp_36 = add i32 %B, %B_read_assign_3

ST_17: stg_222 [1/1] 2.39ns
:3  store i32 %tmp_36, i32* %context_Intermediate_Hash_addr_1, align 4

ST_17: tmp_37 [1/1] 2.44ns
:4  %tmp_37 = add i32 %C, %D_4

ST_17: tmp_38 [1/1] 2.44ns
:6  %tmp_38 = add i32 %D, %E_6

ST_17: tmp_39 [1/1] 2.44ns
:8  %tmp_39 = add i32 %E, %E_3


 <State 18>: 6.65ns
ST_18: stg_226 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str5) nounwind

ST_18: tmp_46 [1/1] 0.00ns
:1  %tmp_46 = trunc i32 %B_4 to i27

ST_18: tmp_71_i4 [1/1] 0.00ns
:2  %tmp_71_i4 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_4, i32 27, i32 31)

ST_18: tmp_72_i4 [1/1] 0.00ns
:3  %tmp_72_i4 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %tmp_46, i5 %tmp_71_i4)

ST_18: W_load_7 [1/2] 2.71ns
:8  %W_load_7 = load i32* %W_addr_9, align 4

ST_18: tmp16 [1/1] 1.97ns
:9  %tmp16 = add i32 %W_load_7, %tmp_72_i4

ST_18: temp_3 [1/1] 1.97ns
:12  %temp_3 = add i32 %tmp17, %tmp16

ST_18: stg_233 [1/1] 0.00ns
:17  br label %.preheader


 <State 19>: 2.39ns
ST_19: stg_234 [1/1] 2.39ns
:5  store i32 %tmp_37, i32* %context_Intermediate_Hash_addr_2, align 4

ST_19: stg_235 [1/1] 2.39ns
:7  store i32 %tmp_38, i32* %context_Intermediate_Hash_addr_3, align 4


 <State 20>: 2.39ns
ST_20: stg_236 [1/1] 2.39ns
:9  store i32 %tmp_39, i32* %context_Intermediate_Hash_addr_4, align 4

ST_20: stg_237 [1/1] 0.00ns
:10  call void @_ssdm_op_Write.ap_auto.i16P(i16* %context_Message_Block_Index, i16 0)

ST_20: stg_238 [1/1] 0.00ns
:11  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
